(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    611006,      12792]
NotebookOptionsPosition[    586467,      12417]
NotebookOutlinePosition[    586864,      12433]
CellTagsIndexPosition[    586821,      12430]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Supplemental", "Title",
 CellChangeTimes->{
  3.9260009891369667`*^9},ExpressionUUID->"d7b1c179-1cc8-4d50-9446-\
c897d6279ac4"],

Cell["\<\
Estimated Judge Reliabilities for Weighted Bradley-Terry-Luce Are Not Reliable\
\>", "Subtitle",
 CellChangeTimes->{
  3.926000997139542*^9},ExpressionUUID->"88590767-2f90-4d03-b257-\
4c56d8c90edd"],

Cell[TextData[StyleBox["This notebook offers explorative examples of the \
behavior analyzed in the paper \[OpenCurlyDoubleQuote]Estimated Judge \
Reliabilities for Weighted Bradley-Terry-Luce Are Not Reliable.\
\[CloseCurlyDoubleQuote] While the full data is processed in the accompanying \
Julia files, this notebook serves as a dissimilar implementation, verifying \
the core elements and mathematics.", "Text"]], "Subsubtitle",
 CellChangeTimes->{
  3.9260010122451363`*^9, {3.926066646349584*^9, 
   3.9260666465647373`*^9}},ExpressionUUID->"cd9fbce1-1217-4d79-b21d-\
c46072301132"],

Cell[CellGroupData[{

Cell["Foundations", "Section",
 CellChangeTimes->{{3.926001113759346*^9, 3.9260011149003153`*^9}, {
  3.926065155196755*^9, 
  3.926065159623816*^9}},ExpressionUUID->"edab6588-54fd-40b9-ac1b-\
98c2f45995fc"],

Cell["\<\
Before running the examples, we define the basic components we will use \
throughout the notebook. This mostly corresponds with Section 2 in the paper.\
\
\>", "Text",
 CellChangeTimes->{{3.926001127984375*^9, 3.926001170210165*^9}, {
  3.9260651626760263`*^9, 3.926065171863283*^9}, {3.926600469621182*^9, 
  3.926600475901922*^9}},ExpressionUUID->"d2af1e3b-8c48-4513-a51b-\
268d7d909cb8"],

Cell[CellGroupData[{

Cell["Bradley-Terry-Luce (BTL)", "Subsection",
 CellChangeTimes->{{3.926000971285096*^9, 3.926000974863785*^9}, {
  3.926001172177766*^9, 
  3.926001181040153*^9}},ExpressionUUID->"315457a4-73ab-42f8-8d86-\
0beb08c3cc6b"],

Cell[TextData[{
 "We define the single pair probability (Eq. 1), denoted as ",
 Cell[BoxData[
  SubscriptBox["Pr", "BTL"]],
  CellChangeTimes->{
   3.898199263139388*^9, {3.898199308483631*^9, 3.8981993142196093`*^9}, {
    3.898240010165682*^9, 3.898240043121985*^9}, {3.8982403310041533`*^9, 
    3.898240336165814*^9}, 3.89824602595014*^9, {3.8982460946337423`*^9, 
    3.898246100333356*^9}, {3.898246235353887*^9, 3.8982462457058563`*^9}, {
    3.8982462789308987`*^9, 3.8982462907177477`*^9}, {3.898246435069532*^9, 
    3.898246480854905*^9}, {3.898246714276408*^9, 3.898246741927146*^9}, 
    3.8985961273020897`*^9},ExpressionUUID->
  "4ccbe1af-873f-48cb-a645-ee9094fc17f6"],
 ", and then, for convenience, take the negative log-likelihood of that \
single expression, denoted as ",
 Cell[BoxData[
  SubscriptBox["L", "BTL"]],
  CellChangeTimes->{
   3.898199263139388*^9, {3.898199308483631*^9, 3.8981993142196093`*^9}, {
    3.898240010165682*^9, 3.898240043121985*^9}, {3.8982403310041533`*^9, 
    3.898240336165814*^9}, 3.89824602595014*^9, {3.8982460946337423`*^9, 
    3.898246100333356*^9}, {3.898246235353887*^9, 3.8982462457058563`*^9}, {
    3.8982462789308987`*^9, 3.8982462907177477`*^9}, {3.898246435069532*^9, 
    3.898246480854905*^9}, {3.898246714276408*^9, 3.898246741927146*^9}, 
    3.8985961273020897`*^9},ExpressionUUID->
  "d333aafc-f670-494f-a3ad-fd332f99764b"],
 " (Eq. 2). ",
 StyleBox["In the equations, we use \[FinalSigma]k and \[FinalSigma]j to \
refer to the estimated values of stimuli ", "Text",
  FontWeight->"Plain"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["s", "k"], TraditionalForm]], "Text",
  FontWeight->"Plain",ExpressionUUID->"18fb3151-a146-47cc-9e85-be0503276c38"],
   "Text"],
 StyleBox[" and ", "Text",
  FontWeight->"Plain"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["s", "j"], TraditionalForm]], "Text",
  FontWeight->"Plain",ExpressionUUID->"339735c2-7d03-49a4-8d6e-350acaeb99e2"],
   "Text"],
 StyleBox[" ", "Text"],
 StyleBox["on the latent scale respectively, while \[CapitalDelta]\
\[FinalSigma] to refers to a difference. ", "Text",
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.9260012169520607`*^9, 3.926001259725484*^9}, {
  3.926001304105036*^9, 
  3.926001346269891*^9}},ExpressionUUID->"a7aa0c6b-984f-43b9-b2f7-\
6659b1a41866"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["Pr", "BTL"], "[", "\[CapitalDelta]\[FinalSigma]_", "]"}], ":=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "\[CapitalDelta]\[FinalSigma]"}], "]"}]}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["Pr", "BTL"], "[", 
   RowBox[{"\[FinalSigma]k_", ",", "\[FinalSigma]j_"}], "]"}], ":=", 
  RowBox[{
   SubscriptBox["Pr", "BTL"], "[", 
   RowBox[{"\[FinalSigma]k", "-", "\[FinalSigma]j"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", "BTL"], "[", "\[CapitalDelta]\[FinalSigma]_", "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{"Log", "[", 
    RowBox[{
     SubscriptBox["Pr", "BTL"], "[", "\[CapitalDelta]\[FinalSigma]", "]"}], 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", "BTL"], "[", 
   RowBox[{"\[FinalSigma]k_", ",", "\[FinalSigma]j_"}], "]"}], ":=", 
  RowBox[{
   SubscriptBox["L", "BTL"], "[", 
   RowBox[{"\[FinalSigma]k", "-", "\[FinalSigma]j"}], "]"}]}]}], "Input",
 CellChangeTimes->{3.926001205637395*^9},
 CellLabel->
  "In[321]:=",ExpressionUUID->"cdee2ff5-b0b0-40c0-859e-debaa963f443"],

Cell[TextData[{
 "We can see the sigmoid shape by plotting ",
 Cell[BoxData[
  SubscriptBox["Pr", "BTL"]],
  CellChangeTimes->{3.926001205637395*^9},ExpressionUUID->
  "17094909-6533-4f64-ae51-3fd802db6bef"],
 ":"
}], "Text",
 CellChangeTimes->{{3.926020007640758*^9, 
  3.9260200315725822`*^9}},ExpressionUUID->"937ed66d-ccc3-4f76-81af-\
78f98dd7d6b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["Pr", "BTL"], "[", "\[CapitalDelta]\[FinalSigma]", "]"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]\[FinalSigma]", ",", " ", 
     RowBox[{"-", "7"}], ",", " ", "7"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.926019967063448*^9, 3.926019998451659*^9}, {
  3.926020357047799*^9, 3.926020357882226*^9}, {3.926020768130691*^9, 
  3.9260207691548157`*^9}, {3.9260715337259693`*^9, 3.926071544069922*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"a969f978-d2aa-4194-ae54-a89f198e83f0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
l5jo0y+9zZGk//9/JRK/uOgST/p/hlTE8g==
       "]]},
     Annotation[#, "Charting`Private`Tag$149214#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[CapitalDelta]\[FinalSigma]", HoldForm], TraditionalForm], None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-7, 7}, {0., 0.9990889485455361}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.926019990061654*^9, 3.926019999094429*^9}, 
   3.9260203583646603`*^9, 3.9260207697135973`*^9, 3.926065382512389*^9, 
   3.926066423810245*^9, 3.926071545185096*^9, 3.9277412006683893`*^9, 
   3.927741306528141*^9, 3.92774149591678*^9, 3.927742319885906*^9},
 CellLabel->
  "Out[325]=",ExpressionUUID->"239f8839-1eea-44d5-b7ff-24a946a49f7d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chen et al.\[CloseCurlyQuote]s Crowd-BT", "Subsection",
 CellChangeTimes->{{3.926000977853332*^9, 3.92600098017155*^9}, {
  3.926001389837741*^9, 
  3.926001398375696*^9}},ExpressionUUID->"3de215e4-a764-4e0d-92ff-\
43c4445081da"],

Cell["\<\
These equations calculate the single pair probability (Eq. 4) and negative \
log-likelihood for Chen et al.\[CloseCurlyQuote]s Crowd-BT.\
\>", "Text",
 CellChangeTimes->{{3.926001404667336*^9, 
  3.926001458870193*^9}},ExpressionUUID->"f204573d-d862-4cae-9e3b-\
5ea9124feda2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["Pr", "CrowdBT"], "[", 
   RowBox[{"\[CapitalDelta]\[FinalSigma]_", ",", " ", "\[Eta]_"}], "]"}], " ",
   ":=", " ", 
  RowBox[{
   RowBox[{"\[Eta]", "*", 
    RowBox[{
     SubscriptBox["Pr", "BTL"], "[", "\[CapitalDelta]\[FinalSigma]", "]"}]}], 
   " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Eta]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SubscriptBox["Pr", "BTL"], "[", "\[CapitalDelta]\[FinalSigma]", 
       "]"}]}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["Pr", "CrowdBT"], "[", 
   RowBox[{"\[FinalSigma]k_", ",", "\[FinalSigma]j_", ",", " ", "\[Eta]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{
   SubscriptBox["Pr", "CrowdBT"], "[", 
   RowBox[{
    RowBox[{"\[FinalSigma]k", " ", "-", " ", "\[FinalSigma]j"}], ",", " ", 
    "\[Eta]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", "CrowdBT"], "[", 
   RowBox[{"\[CapitalDelta]\[FinalSigma]_", ",", " ", "\[Eta]_"}], "]"}], " ",
   ":=", " ", 
  RowBox[{"-", 
   RowBox[{"Log", "[", 
    RowBox[{
     SubscriptBox["Pr", "CrowdBT"], "[", 
     RowBox[{"\[CapitalDelta]\[FinalSigma]", ",", " ", "\[Eta]"}], "]"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", "CrowdBT"], "[", 
   RowBox[{"\[FinalSigma]k_", ",", "\[FinalSigma]j_", ",", " ", "\[Eta]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{
   SubscriptBox["L", "CrowdBT"], "[", 
   RowBox[{
    RowBox[{"\[FinalSigma]k", " ", "-", " ", "\[FinalSigma]j"}], ",", " ", 
    "\[Eta]"}], "]"}]}]}], "Input",
 CellLabel->
  "In[326]:=",ExpressionUUID->"4c95b914-8abb-4375-b8da-dd617eb726ca"],

Cell["We can visualize the effect of varying \[Eta] (Fig. 1):", "Text",
 CellChangeTimes->{
  3.92602003771941*^9, {3.926020384237987*^9, 3.926020417883389*^9}, {
   3.926065067767132*^9, 
   3.926065089814492*^9}},ExpressionUUID->"e9b7c4d0-e3a6-48ef-86d5-\
f511143711fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["Pr", "CrowdBT"], "[", 
       RowBox[{"\[CapitalDelta]\[FinalSigma]", ",", " ", "\[Eta]"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]", ",", " ", "1", ",", " ", "0", ",", " ", 
        RowBox[{"-", "0.25"}]}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]\[FinalSigma]", ",", 
     RowBox[{"-", "7"}], ",", " ", "7"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"\[Eta]", ",", 
        RowBox[{"{", 
         RowBox[{"\[Eta]", ",", " ", "1", ",", " ", "0", ",", " ", 
          RowBox[{"-", "0.25"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"LegendLabel", "\[Rule]", "\[Eta]"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9260200444662933`*^9, 3.926020058577703*^9}, {
   3.9260201223957767`*^9, 3.926020216332654*^9}, {3.926020268082364*^9, 
   3.926020361921912*^9}, {3.926020392114703*^9, 3.926020402614669*^9}, {
   3.9260206245693693`*^9, 3.9260206351362047`*^9}, {3.9260207590011253`*^9, 
   3.9260207598145857`*^9}, {3.926020920712282*^9, 3.92602092240637*^9}, 
   3.926020963215301*^9},
 CellLabel->
  "In[330]:=",ExpressionUUID->"ff46c932-7319-459b-b806-b940668a1155"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
l5jo0y+9zZGk//9/JRK/uOgST/p/hlTE8g==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$149266#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Tw==
          "]]}, Annotation[#, "Charting`Private`Tag$149266#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7VF++c3//9IHGMDggX3GtWAz32IEv9P0Sv2sZ1Jw
vnXUqTWdWyXhfOkTDw03zJCA8x3ucavmNorD+deitDfVBYnB+bMVcqYfNxeF
8y/6LBJLZRWB830UXzPPvCEE53+zC/VkOSAI5wsc3qJxpF8Azt+skH2g7Dkf
nH+BexL3pF08cP65w4u7wuK44Hwtvh87O7U4EP5VNZdNO84K5+v3zo7Jz2eG
80PanXye2zPC+VvnrLgvcOjvfhi/1j+w3SD0J5zPMef8tEWdX+B8f2HDvXdW
vIfzWS3O8uo/eAbnNytoxvhsuQXnXzs+wzbh+kE4f9+K01Vc7AftYfw5Sx1/
FeTehvO/FrbM+tz5DM4/nSf3xYX3A5zfwbwhyWz/Fzi/s3hPgZfCTzj/hOdn
MZ4Hf+H8pbVBehXqjA4w/h1WttK9wcxwvtHBc+2R61nhfK1XIa/aHrHD+Q5u
HyS4Xbng/B/8ntMV6nngfPXOGkvOdXxw/q5Zj4JV2gTg/E3Ln27iWSgI51v6
fS5fcFkIzq/2eXduLoMInN/HeOJssqQonG8QsMboqqcYnL84NN+eP00czr+4
Sf7ephoJOL9/5a1HjKsl4Xy58JJ+yaNScL7xc+V9PUnScD40v8D5AMfC/Lg=

          "]]}, Annotation[#, "Charting`Private`Tag$149266#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$149266#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$149266#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\[CapitalDelta]\[FinalSigma]", HoldForm], TraditionalForm], 
       None}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-7, 7}, {0., 0.9990889485455361}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"1.`", "0.75`", "0.5`", "0.25`", "0.`"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\[Eta]", {FontFamily -> "Arial"}, Background -> Automatic, 
                StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\[Eta]"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.926020311430256*^9, {3.926020342712809*^9, 3.926020362466462*^9}, {
   3.926020394798245*^9, 3.92602040316634*^9}, {3.92602062598241*^9, 
   3.926020639066965*^9}, 3.926020765068718*^9, 3.926020926056246*^9, 
   3.926020963998288*^9, 3.926065382654107*^9, 3.926066423951086*^9, 
   3.9277412007995996`*^9, 3.927741306590892*^9, 3.927741495978351*^9, 
   3.9277423199480877`*^9},
 CellLabel->
  "Out[330]=",ExpressionUUID->"46d37397-f723-4a09-bfa9-70473f282984"]
}, Open  ]],

Cell["\<\
The differences can also be appreciated in 3D, especially when the delta is \
large:\
\>", "Text",
 CellChangeTimes->{{3.9260206560105743`*^9, 3.926020671038471*^9}, {
  3.926020886684622*^9, 
  3.92602091541957*^9}},ExpressionUUID->"51ca6136-c6f9-4d6d-9a38-\
b74848b9a208"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["Pr", "CrowdBT"], "[", 
    RowBox[{"\[CapitalDelta]\[FinalSigma]", ",", " ", "\[Eta]"}], "]"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]\[FinalSigma]", ",", " ", 
     RowBox[{"-", "20"}], ",", " ", "20"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Eta]", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.926020422726482*^9, 3.926020499178308*^9}, {
  3.926020593950473*^9, 3.926020600375342*^9}, {3.926020761933473*^9, 
  3.926020763215363*^9}, {3.9260208380371847`*^9, 3.926020845195531*^9}, {
  3.9260209298857927`*^9, 3.926020931135057*^9}},
 CellLabel->
  "In[331]:=",ExpressionUUID->"4b460b1f-b667-4779-9f74-aab20db5d5e7"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
G73f6O59X7NELiuz/d1jZc+8k8Fkf2fbmmM+Vvs8tHzWptKehj3zDuMX+1ZZ
1g21WiK0+b8lNKxz56GyZ975YLL3OzH0tc0Wpa1NvF63YtNwZc+888Zkn2l0
3Vnu3jHaznYHahU7YORnmHdem+wHuGfJ6+0bpx3ft8IjT6n7yp5556XJPiD0
7nofa4J2Kd/kKs5LQpU9884zk32JRVsr+rona6Hjeld49TFE2dPPWSczrhkX
+w9HBZ09fUmNa/i8L1ou6HArXtkzvlYI53cZFzlWPk5e4G34f+wjpP6ZDnsN
+5whXu5xI+4qTv93LtvOb2TtEFV/udXWgyOtFi1/i6DhmWc8UfbwN/K8cMZF
cuDQnT9evKfqyf7H9oXevue1Yv+ei592NErZw6NEZzjjJbT/3L3zuoepemaO
jDpjtVzX3LYf/uHN00hlD78h7xfOODqfuvngyrj7qp6PJZe8tfjc0Sr3/Ct6
THmjHvhx6VdwNb7Wn7FsnvJA1XNsXpX8Tk6hmmf23wcm9otQ9vBt0p/hjLu1
9R8c35f9oapnwvPLVbx9H2j1T8yPGLTqsbKHL5NxBGc8zgl9c/rkOqMfFtpT
083b97E2Wzj2cMYvnHFaT36XeiZ+57zfxxqprZB2Yg8/JH4DzvitJjpQT3CB
2w193aO1zaIb9vAd4q/gjGt3eS/U43ll42WLT6x2UN4j9vCN4ifhjPci0k+o
Z+m0kd2slngtUPoV9vAV4p/h+IG80m+pJ8WzUZTNlqjdkn6OPXy+zAtw/IOL
jCPqaRubY7S7d4r22N0x7rCHT5f5CM689m6FY7wzvzOuYwsOOPzfeRM/8D7i
1ZqH7cZ7MW/iZx4vKPC7zpmXqT/u03rUvH+j6aB7/437+N1Cbqe66CXtoZ7s
wmkPv3tT6kEH9bt3HX7peFq8mU+tE86FxEwtNz5Fxb/wXu/COrbwStYsafYZ
VPs9l2140MwjSTvvqEet56mHuBveR+q54qhH6VlX6qE92D9f7ttpzantqj1w
r6oeU67nsqj2UM+YiTmKhv18WrWH9t+WemgPvKjUQ3t4rlpSD/XTT4b8nqmT
m3eiaifvq9vRgd82ubFAm58W1+dU7fmwu2Dlf7f6KXvmtayb9/0YXd94XtaZ
3zds835O92RVD79bdv7xEyVmJGspK3KH2H4xzuE4z2/hpf9/HWyFjtpsVVX/
aVmifpieT4BjP8cr1xg9nxMY7HreZqug7E8nFyv8XD8HJRz72n/d/OuGyue4
Kft/3p+8W1X1Tzdl32jYz97l7fYd0363uLK/NGhgvpSXTxVX9rly9ui3J1mr
k1ZPfmVff9xPTst+eqq4Onf06oN7zRbJ2ldpPKOyD81d89v+5ZJlPXBLnb9i
37mmw16dw7lVP6qNW0KgVstRv+KruhcKHXzjsNbe0U71fneMqVMv3K2b4tgX
WrVRy7XyoNTjpuxH7JnRv1XzIopjn3+vq/+F9ge1sw6dlX3WR7PcL14P94Jj
3/3izLPz9XNMjveo7H/OOb1ovxGbveDYX8mxalIVeyn9RNknZO4R/+rtVC84
9pH7ruYqZ9ir8z8Zx0Uf0uMk+g/8Qr/HWXVOP4Hv7j+zzm6VX3VTfF5oo1Ol
7Jz3Dj942H/Dje8T1fuFP574s/fdPInqfan2HPB1veRzRb0v+DT37Pd3BpxT
7wVeu2LVOReGBCr94Q//yJrj5zaBSn94h59fl+1gL9ETHj972oPy9hLd4P/U
HOZR1uDqPI9zn9kV9XgU3eAZfzm0Sd8XQDe4W5HaF35T+X83xe+0SPUoou97
iG7wCv36RnuViFe6wQ+9+egzKSxO6QZfl//PkZY3t5RucM/iWVuVWXtN6Qbv
9+v8YZl+vap0gx984tJw9airSjd1Pmp15cRQe4lu8KcZPX8+Zi/RDf56SUrP
IwZX53OcmrttTNuXE93gX2+cW1fn6AZfdye2yw9qf8pN8RKHT2/Nb+foBt/g
4lJlX0iM0g3+69RpvoW3xCjd4P433gTNOx6sdIO/zJ7Reu1YkNINfv7FP3/9
2TlI6ab4ypmWUHuJbvBrPTx61PAOUrrBp559sVjfl0Q3eOqEY2fdDa7O22So
Fpi2T4pu8Blnet7S91XRDZ5v0drIZmr/1E3xoW6/FMpl5+gGz79v79iSS54o
3eA9P6RaTox4onSD3/it41e9fwpVuqm8VhZn33nl7ind4GF/bi5yNiJE6Qav
dizDzWh7iW7wh9FX6k/U6xPd4B+mt/1W3zdHN3jqlh9DfAyuzs/YCn6Xto+P
bvCzj6oM0Tm6wX9r0W5MGbW/76a4/zJtoYudo5uy79792JKWkUo3eJVpv1j7
1olUusHjmm1fV9XrgdJN5fcyZvButtyqdIMnd+y06PFoq9INvubB9NgX+nOI
bvBnY78vfsLHqnSDT2/sV10/14Fu6hxRUKO0cyDoZs4fottn521ENzNHNzNH
NzNHNzNHN3PeEt3MHN3+t73bZxzd/nc9VT/j6JYOV+dbPtx26Ilu8J9Ef3SD
J8n7Qjf4Cnm/6AaPl/6Abuo8j/QfdIMvCq/sGf84QukGryb9E93gC6Q/oxv8
iPR/dFP2Ml7QDR4o4wvd4M5fOsYjupE3fi/jF93UeRUZ7+gGt4p/QDd4JfEn
6Aa/K/4H3eCtxV+hG7zIie6Dgs5GKd3UeRXxh+imzueI/0Q3+Ajxt+imzu2I
f0Y3+Gzx5+gGdxb/j27kz9/JfIFu8Ekyv6Ab/JLMR+gGD5D5C90Ul/kO3eDP
ZH5EN/hfa2atOrE5WukG/03mX3SDb5L5Gt3gpWV+Rzf4elkPoBu8mawf0A2e
UdYb6MY+wnNZn6CbOgci6xl0g4+Q9Q+6wXfKegnd4N1kfYVu8MqyHkM3eK2J
+y5tnRWrdIMflvUeuqnzNrI+RDd4iKwn0Q1eTtaf6AZ3kfUqusEzy/oW3dhP
SZH1MLrBo2T9jG7wVrLeRjd4iKzP0Q1eVdbz6AafJOt/dIOf7WJ9t2hQvNIN
HinxBbqp8zMSj6AbfIHEL+gG3yfxDrrBL0l8hG5wF4mn0I14/67EX+gGPy1x
HLrBW0o8iG7wDBJXohvcReJTdIPPlTgX3eDta2SpOql5otINPmj0jrPbfkxW
usE1id/RDd5Y8gDoBv9K8gnoBp8neQl0g2eW/Aa6kdfK9GpcWjyLbvDqQ+el
xcXoBm+S7Iiv0U2d69jkiNPRDR432hHvoxvcf82YZ498lird4GGSf0A3eAPJ
Y6AbnHwIusFfSl4F3eBnJD+DbvBWkudBnzxTR+XM4LRfK3Ltg71eIy/0vew7
PAtcutzNO0X1q11ltkaPsvppj7pubd3QN0X1q+eSZ/vmwM6UI/dTlD4jNgcN
OuGzTpuZEHn0eZGnSof88rvTj82M2VfHyKsMl9/NUX5h3Mb++4w4XX43/Nev
/u06/y+lQ7L87rcHM/1bpdtmpcN38rt7Pv5bZ9modUqHZMmzTTtfpaK3vUSH
XxaPPebrflZbUH9qc6vFyGN0lH0Tj6iBlfX8MTo082/Z84HllNYtd/ewwt5J
Soc42ZfcVHL4gAPLkoz4qM1Obbn7Me217wLbd3eSVD+pIvs1I4ZPe3f9XJLS
Z7q052B1z31dj19W+nSW9qR+zONR8MhZpU9zaU/T6d1abM9wWukTI+0JjZkW
3nrcCaXPr9KegzUrhP5rL9GnkrSnYvWDCybYS8bXzcic5Vr7+mueSWPW6iW6
/fvtniR37yvafLfCJyw+Rh7jkuwTjcz41bn7FiOPsXbXw2+dnC5pN/7ONuRf
m5HHGC77s4mLKofsbJWgdGv4b547VssFbUSDWi2CFiQo3XLJ/pRXcmqJ0YsS
lG5vpD3/BD078WGDkce4Iu058DrXhkVLryjdaE/rDfOy5i95yci/SXsaHz+1
8Uz4RaVbA2nPx5reBzIfuaB0yynt+X3VwsFt7SW6PWrapMURn3Na0c6nJuol
uh0t9HKJ1XJb+y3nUQ9f91il2ybZF9vrlr23vn+Cbr+dXmjvrre0ZjNOvg62
xCrdxso+dZ0Pid5bbbFKN/9LrV1GWm9okVEPFjZtFqd0myP7cV+M+uXrL7ob
+R/ak3Nxq1I3+xt5jD+lPYf+zTzX+fBtpRvtqZ/64vV2pbNb4zHSngVO/eKS
7CW6HZL2lG4/beISe4lus6U9Gws0zvLQXqJbd9efpnj7XtNK7G2ySS/RbfyM
ZTvcvUO03151s6/LjDxGH9kHTPo6/MUy92ilW/PylQb6ut/VTtYfNeegT7TS
rZrs188YtvvUH5ZopVvB64HFnJyCte4L59w5+CFa6ZYq+4/Rz2w/+Jcy8j+0
p5z3ptl/ljHyGH2lPblfZmp0unSIMU6lPe33/Dn0UtW7Sreq0p5XbuFO7+wl
utEeN/+wP3LaS3SjPZ2vvL1zxF6iW+zY3vb4J0j7InPUE71EN4+Eaud8rPe1
eQ9fFfX2NfIYhWTfs8qg/fP1/UMVjy/9+yerJUyr+bK061L3KKVbgpxbuBY6
osZqnyilW1Dt/nW8fUO167WqFXE7HKV0Oy77rUfGTl/YLSFK6UZ7Gmd6Ezfu
iVXpVlja88OzjC+nLL5vxOPSnoF9Oj6IPRmmdIuX9nzbsk/hLGXDlG60p3aT
8dM72Ut0oz3Bv3XZqpfotsX65qnF556Wv+a2t3qJbkmdrz2w+DzS5v29Ypm7
92OlW7Ds8w6bPauMvn+r4so3g1a5ez/Udu4J3uxjfax085PzG1+2rLptqXuE
0m3xho8dfN3DtabhIf2X+0Qo3SbK/vL8l04H3hyKULrRnl5nOrRr4fdI6XZX
2hOY5Lyr9vuHRlwp7ZmUw9Y+S9uHSrdt0p7Lw6w1XI+EK91oT8sbuQeuspfo
Rnt6eO8Zr5cqHm+2KpuT0wOtwHc/5NZLdAsOr/XeZovQcglHN/a1O0k96HbS
I0Ooxf78TeR30a2GnGMJlHai27ZZ1/11fUfLc6FbYdlPPy46oBvtqXfqTo+c
/kYeg/YsFp2VbtKeFvJe0I32FJH3iG60Z7e8d3SjPT7ST9Btccjvaf1pgfQr
dPP0zTjP3fuJllP6Ibqxj39T+i26FYm+OchqidKqSz9HtyVynqeHjAt0y1h3
fRNf+3juI+MI3SbJ+YH+Mu7QjfZcXGub/2qFkcegPcdlXKt4XNpzS/wAutGe
m+I30I321BE/g260p5r4JXRLmj+khO6/FoofQ7elLYJcvX1jtBzi99CNcwtt
xU+i2+TfNzy32aK14uJX0S1ZzjWliB9Gt++Sht2w2OePluK30e2unJfIIn4e
3WhPl8mVTz2cYOQxaE+czCMqHpf29JJ5R61vpT2zZZ5S61tpzxmZ19CN9jyT
eRDdWmtf7dLny4Uyb6JbyrtNf/pY47T8Ms+iG+c0Vsi8jG4h7XymuXvHaQVk
Hke3NnK+a7bM++h2ZlO93lb7esVT1gnoVlPOh+yWdQW60Z7H33R/+nc3I49B
ewrIukXF49KeaFnnoBvtqSfrInSjPa1kHYVutGe/rLvQbfs/mevq67NFsk5D
t7b7RlXzdU/U8sq6Dt04l7JY1oHoVsu5YQ5v3wTtuawb0W2HnHPzlHUmuhX/
Jmuczb4+biDrUhVXynmYrbKORTfaM6LmrNIHvjLyGLSnqayTVTwu7Rkl62p0
oz0psg5HN9pzW9btKq6U9oyVdT66uWwPPq/HA4slLkC3nQO97P+erBWROALd
OIfjKnEHuvlasq/xsSZpayROQbcsci7ihMQ16PZjtnvj3e3xmJvEQej2VM7/
PJO4Cd1oz7u8+7qsLWTkMWhPnS3WGd8kJyndlkt73koch260Z4vEfehGe3pJ
nIhutKeWxJXoNqjPlk56/LlU4lB0cymUq5XV8lRbur3iwxreM5VuP8r5k14S
z6Lb02Fh7r7uT7WREv+i2yA5x1JT4mV0Cz21LYO3PZ7fJfE1+vC7Q2/WP7uz
npGv4Hef1b5+bV0VI1/B786WeB99+N3ukh9AH343UvIJ6NNOzrG8lPwD5zdc
JG/wZ6dvXbqOTVT8hsSnr+U9wqdKHO06vmbwsGXx6rnOin2Zk18fWPXHOWX/
UOK1oTKO4C8krpy3KsvmGftjVT2hYt/V858pDUpfVfbdJH4JFz8GPyxx1ruj
1lFrbkarejqKfbOunUqP7nxb2bOe7yjzCHyMxB0jrfsa7Usx1tVPxL5vnh1z
mrreVfasb8/JPA6vKuvwiI+zclzMZewzbhL7SVecElxDQpU96706so6Cx8u6
tGupHmEPqhjnZ/qI/bI5PdrHrn6g7Fn/dJV1LDxI1mlLxZ56For9N1I/9qwH
6kscAfeQdctEaT/1JIg9z4s982MpieNUO2Ue7yN6Uk8rsUd/7JkvXCSOVu2U
ee1reb/U4yf276U/qH4u/jNZ8hiqneLnu0h/o55MYk//xB5/sl3ySKqd4vdK
Sf+nngFiX0DGC/Zn8459qOcHJ0q+Tvnz1GMfqtr9Ud+ev9bV/QT2nBdqI/lh
zlnBM5r2Q99KPY/Ev6l5RMZ7yY2FJ+sl9XOu5ozk7akfzrl67DlPUlP2R7BX
53BM9pyj2Cb7UNjDM5js1T0kst+HvTp3YbJX92nIvir2cCeT/f++X+LWZ/dL
qHEq+6TRck4Ae7jZnv3Bq3IeA3s4v4s9+2IH5NwL9nCzvfruRs4XYQ//YLJn
HyR1v+McF/Zwsz35/6tyTg97OPcV0G8DpD8Xl35Ff6Ofl5B8ODyzzIP0czh5
9WquOa/Y/pNX5xxdVeG0h/Oo9H8437OYOd+tOJs436eYOd+hmDnfm2QwcfN3
JXC+H7GZ+hvfiZg534N8NHG++zBzvu8wc867vjdxzt++N7139G/02w8uH69Z
lD2c945/4700MNlnOZPv6H/Pf8JD5X2Z9RzEeVoTf5GO/WiT34Nb5b2b7XeI
HzO/l9h07PeZ/B78e+k/5npKi98z8+Hp2Jc3+Un4SOmHZvtrnNMz8bHp2N8y
+VV4JenPZj7P5Ffh1dLp/wvTsY+RcWFuZzPOfZn6YUI646iVyW/DN8v4MnP+
3Vy/Xzrj8dPnMXj1dMZpP5Ofh5O/MvP+6dgvSme8nzTNC3DyPOZ6Tou9uZ7E
dPxGEdM8AicfYubFxN5cv3c6/meyad6Bkzcw1z9V7M31/JWOHwsxzVNw4mtz
/aHMdyaeWfyhuZ5aMq+Z/SRxqLk9dcTeXM8Avss28aXiP831E8dRP/FgG4nX
fBtNyvA6W4ryt/ht11LFLybWNvY3UyRO/Lv5yVXNjxj7oS9kfzZF4kp4J9kX
pn78P/PpF1I//I2sJ4dI3AqvK/vCl+V31bks+d1aTXsOnjtirWon9fvYCt78
s+NpxX2l/qOzK77e4WlRnP3ua7eLt77T/LhqP/FsSDnHvrY6zyNxdAf5XdqJ
bkPkd+GsQ47L78KJuw/J79Ie1jlNAkb7dThrnJMn7n7i/fSW/9eGDsyPcXW1
sA/NZijO91MhO+dY9l0x7h3NKevzZlVWXdd/h++M4PVrTA3XOfd1wJe5xh5N
tRn3vsJj/IbFJtqMe1/hzl9sar811bj3FT6pTPi7kXHJ6p4NePukghXnndyv
7tmAx42yzQ/Pvl/dswG/e2nn+U32kns24KN7/103u73kng34vT/aL9dLdOD7
yusPLgfrOqED/MeTQyJ1jg7wHr/8GZtqM+5lhf80rPfFFJtxLyt8dJ7G7+6m
Gveywu/sc7l3LdG4lxVep/V3P7U9mKC+h4J73pua+0adC0o3+KHG0VuudQxQ
usEbB9oKbs8UoHSDf9HNN6aZvUQ3+B/OU7/LZC/RDX55YehuveQ7Nbhr7r4T
9RI9V8m+fLdFH602m3HfEfxky+6xOkdPeMmE3gV1jp7wL6q13fbcZty/Cg/P
+XhbFptx/yrco5HHoUpPjftX4bOG+P2QEB+n9ITb+g7+rluPa0pPuJZDq/nN
15eUnvD5134ZEpHxktITfqzlzWH17CV6wmd2X+qX0V6iJ9zvSraleome8LwR
mwfoJXqOknXXw0Y1ovT5DT3hqUHN0+Y99ITHdC3YXOfoCd/+vOHsl3aOnvDW
2ad3qmfn6AlffKXnknkvYpWe8JtzEzvPK008/vLkKNN39+gMH/yiQq+nJ28r
nVU79Wt7itxSOsOHJdr6LMpwS+kM128FKmgv0Rleq9udCRnsJTrDv579Rz29
RGe4S6/x5fUSnfPLfv3glEEJ+n4OOsO9+tVK2+dBZ/juM7fG6Ryd4drhqgP/
tXN0hh/NUurjMDtHZ3hC91nDY15FK53hRbd5eJXrGa10hpvvs4VfO7xh1qF2
d5XO8Kod31ao6RqsdIYvfXYmc6UMwUpn+OyVW+vls5foDPeb3q9QBnuJznBP
tzqVndR+XE2jnq9XF9dLdD4i+/jPNqx5ru9DojP8l/gyafuT6AwfV2nBZp2j
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
P8Z6NXjS+DI1Ml7RtoofgyfH5B6ul63Ej8Hrht9/rJeFxI+xHrMU2xuql5fl
Pj3ml9XlZ3dLeREnz/vhDP58ypLmqx6dj9H2p9k/1+DTtz68eLhPiHYpzT+8
PqP2I+Sec38Tbyl8oYNr8J/kvvRNJj5R+FFpD/750YxtDUpVeCL3Bz5XPPpp
s9E9gyO19dJO+NelJpZs1/2+ttRRj+KtP/jPO7PvnnZHdMDPz4rLHni2IHmD
DMr/p1ZL+PGnoDBZp2VQ4wgu9zdqKk8i93/+Ju2nX7WR3w2WdsJjpP0xohv9
YfCn98krPlX4SNEN3ujTe+YVR/9QaQ/9JGPE+DuNJwZpu0VP+Cx5v7OlnfDD
e5YW23b7ibZX9IRPln4SI/rQ3+Z+93Rbi1rXtJuiJ3yN9DdZv6l1ZvCCHQ/0
9S33/cKbeDz8vfkq4555eFnt1zXxftfVOhnuMbGaq15SD/38absJ2xv0Me6T
h9caVGDfvJbGffL08/XDcx6pUca4h39UOn83AfuQCrHL1p8w7vPHfrLp7ynQ
D9/41Q8uvtf4ewrwIgfndz+/xfh7CvTDbedvR+Yfb9w/Dz85sU/90C+Nv6dA
/rZL5JDn2eob98/D+zWoVjxpgXH/vHmdgL2ZY8881UfqwR7eSX5X/X0HGRcW
aaf6+w7CN8tzYc+4+MKkA/15hOnvLGD/j0lP7JuZ/v4C/faS6X3BV5reO/3W
TfqJ+nsQwmOkX2FPvPbRy9E/sYd/Jf05m/R/+ECJX8g/wOtIfxZ7FQ8yXohn
6f/c6y5+Ro2j06f3WXr8ZfydTfo/97rD6c/c3x4q9cAvix+IkXgQfvuHfsHF
dxr3rpv7zyZTf/v0v788Sf/hXJZFfhdeuql/F39n4x51+g/npsqkretiVH9b
+em904pvNd2vTv/hfvUP8rvwijKP9JLnhT/261FkcWi41sfBlV+a71uuy5Ei
Vvyq4htnbvJtfyBIayX26Dbe4+vu53dxbjxV7cvzXurIehX/sHb3nRdH89vX
k1IP/IG0Z6c8L/7BQ+ajdyZeS3gvmb/gO0WfnSa+Sfgq0QF/sr7vhdGebR5r
SaIb/MXDsiHbUh9rKdkd7YRfk/W2zOOKl/rk/YY2NPeTyen4pSuiA/1kg7Rn
sdQPT5b2eJrm64qiw0FpJ+93nujs+J3cp/AnTz75/WcN4ew7r5X3hT9pJu/3
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
92Lm6Ml9R+gP95K86P8BpQpduA==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
W/ejeRDdNo763uDvnsOHct0dOa5M3Yjjp2hvS12XchN8MPXn3NfT8B7UHei7
UxlLfM/xm+pD/UdwbFBH85hyBbx99Pm6zo56x5RO8DZ695TD4GF6tujnGKzY
TXNavpX68eC5WSE6VqoQfM6+HA+mHkm9mPuuqd/kPfXn/9WCn7lIHWPvFB1j
1KJcyfFB0fXE6LFRg3qjvou+H+3faF4Ez4XK/K9ldIw6UDaJ9u0pvyYe10dQ
v8HxGN0zdY/oXO012g9MPW+6wa8H53aKFQ+S39KYoH6GOuf3BiW2LX2Dr/ND
Yl80lnpL8LjWONkAPwiPg38MfnaNc433h2gfD/+k51eMSfmP4x6015SNUmxE
SSh1FB9Qdyrj3va5Y2nF1DuXcZ3iu1Wp87WG1O2C4//fZYv1HSj/6D747Z2p
p1O34Jym+gnZlejf6Uc9X+fCqewQpRp8m94XJQt+v7rfhpR/NT64j9+ov9S8
pn8vxWzUraLfVVXNUY0J+HTqJ8pvrW++Q+4x8G/m/ER5Sr1yPrXSd5B9p65J
+Rm+KvU7/Ez3WI5bjd/7Uo9njeta0TZkP+rtyjmoubgn162q98BvDaCuTvlR
Yy73HFRO3YJSGf5Ltqscw5v412+Kgag/oP5DcRK8VvFb+bx67mmKKeB3g/2w
7M/LwfnHtsFxdsVyTmlu7Rscz+sZ9wmOt7/ReynnlObWUbTllK84PiP1/NI8
i+W30zeckHr8ax5sLf3FdjzHwNR2Q/ZjiPI3yi+Jc9P3qDtRT9bcoazXGOPc
dxL73Fq5x97mzLnURMrHiXO/rMwR5fc+p6176lz/E7hbat/4KXxE6nehd1It
Or7oAr9C28upcxDlItI1lE80yJ3jfgYfSS1RZ3uqXakfVfwL/6L8SjknZQPH
V0bng8dp3lPXp9QLzrP1LO1SaxIfwJ1T5+tr4I6p8/X34cOoj+ScQPlCNi6z
/Txc/jA6FzuWegFlqr6j7HRmuyENRHrASrhN6lz/bdnk1Hn5Cs1NxaCp55Tm
1mPw+foOwZqEdJuf4fGKbaiPks2n7Jg4zleuUBVeyP8Ol58pv9fO/O+ixLGc
7MEIjdvEeUPUu+H4BmAK9fzofKUS7TcE+/CD4GXBOUcV+JbgeLwxfFdwrlMZ
vgmeXtg2HZE7F9HnuTw4N+LnkznwJMoFlG0Sx7Y7Ud8cHPPWhRcEx7n14FuD
4/368O3BMW8teHZwnKXYqVpq/Ub61U7UTTXuKWlwLKk89JjovG0BfbZNnc8t
1PhPnZNpGF8dHMcp9queOoY9GH46OGbZF14aHOMcAj8THNe00vfVMxW2WVMU
d0e//y7yz4X97kZewOTCY3q64qDC8/wj2q+N/lbyH+cVtlOT6HNuYdvxKX36
0NaQPndw3SW538kD/K8v7Y3gRbQ/Svt28D20V8nt06VXdMw9rjqV+YHGzI38
7+nUWug/8FOpx8lfwXlVE/hu+Z3CNuKo3LZdOoxsx9TCscV3Gl+FfcymzLnI
LroH+o0qPKaP5NwxhW3TsfA5he3Xe5lzxN3p/2BwPNgSXhKcEzeHFwfnrC30
vPAy+GL4b7hl6V+ldSiHOBA+OjpOV8xclXpm6lxyDf+bk9rXfArPgI+HVwfn
aj3gNzWG4d7wquC8TTHhq7qHaF/TPTqfVu7/OceXp44JP4Jnpc7f3wvOFxUf
fhwcA54MfxKcOyq2XBscaw+F1wXnjkfBb8EXwcfAK+GlGovyLfDjGhfw78Ex
oZ5XvrB26b/qZc7nzoE3B+dzY+AfgjVU5Vwbg2Nt6Q/r4TOi9bQjo3PZo2lf
wfHFmhvw28G5oGLR74P171fh1tSXpY6NPwzWBs6ENwXrQNJ7ZQAUv8leSY+W
jv4s9d6pdffl8F6ptfbn5N9Sa+qvwAekzjs1nq8Lzl+3ha/Rt4vWJHtFa+fS
x/ZMHQtJW9uYOPetTX1VsI4rTbtuag1YGnW91BqPNO36qfX1l+H9U+d80nu3
Sa3BvwTvl1rXfwJukVrLXwrvllo7GQV/G7yG8CDcJLVGcgb8VbCO+xjcLLUu
uwRunDqPlB4bUmstI+Cvg9cTHoeba7xHa6c9o/Vv5S+NUudeHeEXgzWbkfA3
wWsIT8ItZRsKjyflvzHzOJRevVvhsXsq3DC3ndw593tVXKiYcIeSlyWOtQ8K
jrPr52bFYH24pwq0zQu+ziHBPloxtWLr+xPbQvkk9VOMoz6Kc/T/Q8s++p22
5W+pb+eyf+fyXNlH5Snys28ktq26bl/N92gbKA1nVeZY9Sye77Ey/pF2Ie1Y
tmtQ+S7124r5ZSM7lNdsX7LyoBPoV5H6+mj7LL81l/p42Wzar4iOtxVX6Lg3
xx/KPyoOibaB0lv0rjRP6+bWM3sF50cnlzlIy/K+ZFt1vCZzHPdr5pizteaT
8stg39ZI7yPatzal7hwdXx0WnRso5la8nZXXlK0eG9zOXzImOAZqTDmH0ozS
JFiPUFzzM7/VKHeMf0mR/O+kI8o5JVvROzg+P7OM1RWz70r/44JjXWngik9/
l8ZT5oPKCysGP7viY8XOuo7i41PKPFH5Yovyt5RjKF/W9X+kvX+Zdyj/kN6u
WPuXzPesHE6aSuPyuRTXdS2vNYD64ehYRVrZAZn15xcUu9G+R2ItsXVmLfpF
6uejfbr0xu8zx0rKo1+IjgGkNyp32FLa3R5lnni2/E/mvPilzOspypXPLxyr
yQaOjdaZNifOb9tm1uFfzeyzZeukD7fJrOe/Qt04s3b9eOY1ANk6reM0gWfA
T1Dvllm7foq6HeUO+LXM+pbyTuXDzTJr408qZ8msnz8rjTE6npEOc1pmm6x1
q0Mz6+cvK1/LrL0/R70P5Tr4+cy6k3L60YXXKW6HB2r9M3OePUH6WbTvlob5
Yea8f6zWCug/FB6nuCna10u3VEyj2Ea69+LoOFBat9ZvFStKS38kOj6RtvlU
dMwgvfT+6BhS2rvWFDpyPEQ6Zea1oXc1tzKvaUwpHBfK7l0QbVtlF6ZQvxod
90qTP7qMK86l/iwrcxTOfTE6/5Lu2r2MDUZE+1H50+HRa7LSSCbRf1l0nCP9
dvfCscgZucdYE/43rbA/kw2cFp1LyB7NitYFldMrp2iROZ99OvPcbSC7TRlX
2ofq8rOZc7hCOlz8f41kXeb8OEp3ogwLzscvjLbHWufRWpjsYs7/J0TrS9KZ
5INOVWxSvrPBpS+QjjU4sX5To4xLFJPslVujuryw71B/5W9/8txrqbsqTsms
NXWl73L6Nkis2y+J1jd6wM9Ex709S9suO6S8cml0THu09LrcuX8r6gej1+a6
546Hr+H46dx2LS/t3JbMeVzjMtfvQ/k+cQ57aXAeqxi7Oee+mHu9TzZVeY3m
sWIa6VEHls+rdyS97fRgvUnrjfInHaJzz7OC/YXWBOXfhmaOYdR/OvXUaB/Y
RmONPsODNSvllcrXLon2M/I3Ggdai9T1x9Dnv8waxd651xh1/XbRY2NCOT46
lefKT0nj0f1I59H6pvx8hdy2U75hFcd1gr+19Jpq5fPK3u2TW2u8Qmsp0e9A
eqTG3ehy7DUr/co6uBv9L4G75PY/Z5c+SL81PjgPV7v8U8Ny/Gocx/L/u5b3
o+vou2icKFe9KNgva85JH5E2ojknfUS+p1LJ8h9Vyj4ao3Vy3/Mizcvc302+
VfrS/sHtWm+UpiMfo/NaledWKNvlz2Tv1V+2Vb+zd/lbE0p/qmfXOGldvrcO
5XjQd5QOKz22QbQG9z8tDt4Kr1bf1D5e70I5bHXu7UV9h9w+rWXpi7UurRhL
46ZJ+buyA0vpt5DrzSs8nvR/zVnpvNIrZGvaleNEY699tIbZmHpmsA6guEe/
o9+rXeo8zTXOeT8/pF5DP0RxabDWobhnVvC31nzWNXStC4M1GH2vDXq23FrN
ZOljqbWiLqn7zij7zyjP1T1cF60TzOX4aljhyLXB6/izOR6uvRjResW86DX9
6cHPr/V7PZfWU7bPHWNtm/sb7ll+R/kgsfYR1MwdY+gZs/I9Kx5TjKlnV/yp
6+wRrJs1yJyHar1Mms+04NhP+r36KKbRvJtWzlnlj7Iz0reVt2pMbaPxlnn9
ejn1t5nHwsWF12T60v5BsN9U3CR98fDMWu4b1HdG6yFa89VeG32Pm6grZ877
tK5aN3POqPXcfplzE+1r6px5P8Dr1KMy51zalyLfrbhM+qXWV6SRar1SPkO+
Q/rG+MxalvaZTMisZWltq3vmvQFvln5W9kO677po/VPrRHdF52Vas5bdlrYq
raNv5pxI+6xGZs7FtDfmh+hcWGsoiku7lXZ7YOZ8SnuiNCY1/hR/VM2c/2p9
WftbFMtLo9gane9rjWkAxy/A72TWck8IXsfUusmZwfs0tH6u8ahxpX0JygG1
h+enaK1S6+kfyd8nXvPaKXOerrVy5eHKx7WePihzHqc9Yydnzhm1Z+znaJ1B
a239M+/reJt6XGY9UOuGijfkl6Qz/67xnnidLs2c62mNTPnC0cFrgv9G5+Ba
4/sa7pd4nU5+f1DwGquEOOWYWstTDC07Jx1G/lHxv3SeP6PzVq39vROdY2r9
Tn5T81h6TpY559War+JzaaOKt7UWILsl36nYQ5qy4ivlM8prpP8o95FmrVxM
eYJstnSwTdFjXuuSbygeS7x/QPmF4qk5WjfLrD9o/5j28cgWaf/YcaWPvDx6
X4p8gnQzxSEnlv6xR+b9MG9RH6U4El6RORZS3HcN1z88tQ6seSQfpzUAxe2K
pRRTSbtTfHVK8Dq18peewbHsu9G6vdY3FTtpTUJxo/yr/Kz0sdeidUXtwZA/
HRgct3wYvfakdfPemX3ESo3hwvt1dJ9bc68VKRf4LbdGrJj/l9xrRcoFfs+t
GS2D/8yt6z2j+CX3PhjF7X/k1pIUQ/6aWzdXXvBf7j00yo+0L0rx0FXUVQrv
+9H43E7Plni/R/XM61na11G58B4j3XO1wnuVFG8PyaxFaA9kKLwfSPlRzcxr
XtrvIcOu/TfKv/7JvUdHucZfufU+2camhbW8UxSrFNbatFbbrLAONUy2OfN+
Hj1v88z7jpaVvub88lkUfyq+k/+Qr5S/Uhx6emYNSvvuhmfWqbQfr3FhLUx7
BqR1aF1BmsPfufVT5VDVC+uzijlrFNZkFbvWLLzHSzFq7cxredob06Swzqh1
+V0Ka5Fag/4gem1R6+aKvxWHSzeuWngvl+yV9jvIzyvfv7f0p/Kr8o/S1RXv
poX3Nil3+5bj7onfj2IM5cfKi3bIvFaiPTzfRWuP2t/yTbQWKl1Ia2H9gtep
tZ44Kngfnfyy1oSkh5zE+Y8m3qcq/6X4V+uud0frddoTtTlaS1S+80X0+o6+
4+DMepr2wX4frT1qX01eeL+XctgdM6+DaN+RYmPlRtfy/20K7yGTH8wK7wlT
Hl0U3mcmv1ah8D4w+aOKhffJae7HwvvGlF//H/DEXYc=
            "]], 
           Polygon3DBox[CompressedData["
1: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
9NfR7fMfUQNzvgs+vGQ+Devk941q1zPrIfO0+WTKJnzSuXc8nzV1Ez6xbx0/
f9omfOXAOv7/5E36xrl8nH0F3ojnvcm5+cBntrlQjWA96dE2133RcqSX2rXU
nKYnPxvXFPCnnXgeM9fhjmom6yOu6a7tcmbrHeZMn7d2lRqQOdBcaH+OsL+7
ySV6iPrX5lu101xtfjTfvNXJ+3f9X4ZrppcbOQe7yYvmCnOOmvZi2v2r9Ocs
dTxrayd6tnrZerZ6t3q+etHWBOQLM9A+qic53Fw+sormkgPIBbapwqn6dYPN
QXp65jf51FL/L3/Jtwa2+c/37VjSo99NrtykHjS8jh6ZsEk9z9x/tHqsm1xp
TtTDmLhJ/UmucUxP3rnv3vV33iZrhbUf19uebvwi/cOHuvGP5PByeTm7tR05
u9xdzmttR04vt5fzW4txPF5ShfPf0MSTabrxNPVq5MhyZT1gazlyUL1QPVK5
qZxZLiwnlkurQdQiagRrDXp4enkDOvGm5fByeTm33reaRK7YvxOto8esN+x6
Yy3I9ezfbvzq79r1ztqBmufWJhr06So1LbWpmvCpKjUztaKa1NqENQq1qhpa
Ld2vE29GTXxZ+/l6N3LWy9vv5++RE8uN5cBqOTXZ2W1/qNXqJu/CHPhhiQeq
F6pGttanJ6g2XaaT2qGeqd6pGtZarRrY2oQevNpYD1MvU41srVZPWm9az9ba
gJ6s2kCNoDf7a8n8knO+WsLB9S71rOXmerB6sWp0a8dyeLn8rO39eqp6q3J4
vX89Ur1SPVRrF5+Cv63icY1b4ln9VcVD0MvS8/pvFY6vF6YHpbcxus0vetx/
V/EA9b7fa+L16/n/VcfD/qeKZ6i3bc3SWrOeid7Jx+CvqnhWhfgH4M+reDr/
EP8Q/EUVT8pC10fgL6t4YF3w++DPqmj4P+vkwz51cry15E/A31TJh2OXeLL/
VvE09Wr1IEs3HrvepJ5p3Y1Hq5eqp/RLFc9Or0mPwFq1noLegTVbtY0ax1qX
Hvu17Xhy/OhRX9e+D2tHX4J/rOIRT1zisf1axbPVe7Nm+0aVGq+13M/A31Xx
FHuXeIZ6yXJIuaTFPvn+Qm1+1/PX+9cTt5akB/h7FU9Wb/AL8A9VagwTgj8H
f1+lZjFBiaf4WxWPVq9xgZJ6zIOtv6oG13tTP6jN9UQease/tcGhTev31+E6
r5V4H+Zkc/OejhHHRusPmJ/Nneq2bcDblviHP3TjV+/lOwb/3foN25T4D993
41cPaaLf5DBymb0dQ7771n/Uo9erlCPLla0JzN9NzcJagTUzveIHO9EKehR6
FXoa1sL7NPErBtXxx1Zpou/OarnS1iV+x3fd+MvWQ/TTfuzGf94R/Cr4l9Z/
Hd2E30/ecrH3SrzQ3i3XOKAJH5fDyeVGEH/K3Nb6rcNL6rNftX7t1yX1M+to
h4IPb5I/zCNyz89LvHw5rdx2TEk9RE4rt12uST323Dr13j2co8T/2/ov1tBm
7KbGaG1tZ443aP/e+i87gV93LndT/3irtP5iy6VGgV8D/9pNvU+P6/i2f80H
1oz0Hu0z+84ant6+mkHtoOdyS5t/3DujJ3Nrm59cb/Uo9Cr0aNxro6eht6GH
4d6ZX3hGTxXPV//NGqq1eGua1lb1YO5u10/zhzVe90IM7qT2qyekN6TnY21a
T0dvZ2AntWs9IL0gPR9rz3qUD7fru+v97yXepx6y9VFr4E+2+cv1wprqE23+
svasR3RXu/67V0YPUS9RD8m9LnpyenN6atb+9VysZahB1aJ6vmN34xHqBVuz
nKgbj9VapjUna5FyCrmFNcUJu/FMrTVawxmnmxqctR1rPuN145FbC7LmM243
nqC1oJ4m/ErP5OMSD33Kbmq0eut6hlN0U5PVS7RmO1M3NTprudb4Ju+mhmvt
T8/W2paaT+2nJzxdNzU3vWI9T2ulF3airdWcak9O/c/P0O/RL1OP6CdMw/db
tIrG6/rdm3BLPZclmuwJ0I/Q8xjYRGOptdwTsYy5poQryhHHbqJv5I2eW6QJ
Z5G7zOpnNNEs8nP3gMxu33DMWWUM/uxaWvLuHQNyl8vAC1a5R26vBlIrWCOZ
uQnH36WO32xcTTLIXNbOL/WXvFZ+u5C/rcQfUUPPBj6o5LvJSeWm+4AHVFnT
XNvUr/pK3vM+sf+U5B5zmrlNzaMWGq9dn84hvkonnExuZr1Gf0FPYS7wOyXa
QI3wB+1PS76bY6RXE/2obvCameSCJdxOTie3U5OpJeQ8v7V6T52iXnm3hDPr
Oc3UCZeWc+vJWc+Ri+vxf9ryAfPzdSW525xt7r6+JNea083t7nmTj2zj/cRu
LMmV5kBzoXvC3BtmTahPyZ62MS1/majE8/mz5UfOvxtKcqc53dx+Wwk3klPJ
rW4CH9hJTjY3317CjeRQcil/g7/FMTOZ3Lyk/+WQcslHS7wC57Rz+2bwwlU0
pFpSPbFHHT9aLAeSCznGpmiiwdUy7mGyfqMGV4u5p8r9ffIJvUefORXt6TgW
pz0JR2miT/XOnVN9m+QM9wqZo8wlatb/7UXr5Fr1q/Uun9GviYbVY/WcsVtK
+s4+lFs6X/UuF2mf7+frzSzW3v8Q15/eyZrk2mT9Ue3Yl2OCJp6odSA9Ub3S
e0q0jhxPrnd3CdeT48n17irhenIqudW9Jd6LGumPdv6qjedo38fjJWuZa5Zr
lxpvwzr7CZ1fvg/7vk/bf7O171svVm9Hf0id7TNfKdGo7ntx/8t47XrgXB+/
fV96CGrfmuMH2g+XrNWu4a7leshqZj2I25v4IepM9eZXJf6JOvp/errEY/L3
6XXpPV3G33878fC+JfZEydrtmu3a/VjJ2uya69r7JPjSTtZ413rXF397p13/
9NTcZ+Z+M702f7O/3Xf6AfjBklxiDjGX3FeSq8Zq6wdyPGtLckC5nxxu6ZYf
yO2eKeEicgS5gv6Nvob+xpvEni3JLXIWuYt+jx69/sPNPP854rd0koPMReeB
N+yEc8u9ny7x+sw55h77yL5yDH5E7E6OIzrREGqJO0q0hBpHrfNASW40h5pL
nyrJXeY0c9uLvsNOOKhcVD9R30H/4bMSjikfeqmT9Vn/TZ91DH9eJn5/SW42
x5vr5WjWyuSgcjc59Il1PC+5tZxQbuj8lEs+X+JtyonlxoPb9WTqlg++UMKN
5cRyYzm6tTw5t9x9nbZ/pm355K0lWlGNqFZ8pIRryCnkFnJe9x481gkXHtrm
d/tEPi5ndm+Gnrtc2j197u3T07+jiUfs3hc9d71j9w9Yu9ZDMz9u38R7fblK
vdz9l449PTfzr55vr5Yf6QXv0GQ/3ytV6vFqCPe+PNCJtlBzzNvqAbXIsFYf
2Cfy0+ub9KVz1rlrzcG9LXrY1iKsGbiXRY/aWoLzd9pOPBi9GGsO7r3Qo7cW
YU1grJavyWfk9LO3ekWurwerF+seFf0SObZ7jaxhyL3l1O6ls4Yh13YPhnsx
HgXf2EQz+K7vbt//iPb992/1gjUIc6M5Uj2pxqtafan203Pv0/JD+dhLJWPT
MSp336WkVqeGcP3X83eviDULawFDWr7mGiKf17OftOVvevlNk9zinmL3s11e
otVdw13LrQm4t+6CTmoFerp66z2tnnT9u7BOfc3amjWZCVp+a63GGoB7B9Ww
1gZ2bLKf8tUq+0n01Lqt3pcPW7ORTFqTsZbj+q6XZz2vf5Mag3uzrDFYe3A/
qrVG19+Rbf8vWycnmZscz5fUucZrnZ9qXWvctzSp6bjX0JqRtR73vFjzGw6+
Tm7fZO+ae4bdj3VNEy/aNda11hrXgFYvWftyT4V7W92j614L98y6d9Y9r/5b
AfesuJdYP8q9LO7ZkFvIMeR6esh6ye4R/qNODalvy8etLbkn2r3R7vn9m/iF
JV6NHoxezDUl3oYeg17DxSVejR6OXo57Rt07OtIcV/IOfBfuuXWvj3tuXqvi
p7gX5+oSr0KPQq/iWjlhJx6KXoo1ZbmqnFU/6aISr0gPSS/JNcG1wTnv3hr3
8LuXf0s5RMka4FrgmHCvjjU49/Lr71ibG9Xku/md/G6+nwnrcF6571Ul3oke
jV6Ne8rdW+4el4rY+SXcUo6p92UNcoZWT+s3XFpSn9ED0wtzj7p71d2j/m/d
7unrpqZmLVLN7d4HPQC1+JUl3pAenl7eJSVemh6ZXpk1TfeWWXOz1qmesHZg
PXBu4heUcGU5s96d/6bCf1uxuWmn5N+I+G9FRpjTwFeUeIV6anpr7rl3771j
simpSbq30Jqctcr/A1SpKTo=
            "]], Polygon3DBox[CompressedData["
1:eJwl13fgTmUbB/DfeDyVkYbKaKESvaEIyahU75tNSdkzlBUihQaVyuyHlhky
M7I1SFaZFbI1hGgSKa3P9Z4/vs65Puc65/k9zznnvm9F23Rr2DUrIyNjj+SS
Z/yzHJwlI9TXpTIy/s7OyPhLejr2Bv/SdhC/z/6EzIyMfPrmOD6YNWUvswJs
Ibtfby/2IavONrNn9TVmk9i5bC4byBqxcSwve5s94NxH2Sp2K9vCGrOebCWr
xjayLHaBupL9i+VL18qSTHnUsXH6v7Ydqm5jf6LeS537rt4M9o9tL8fHOvaV
7Yusuf0x+i7WstjxAawBy2FpNpP9Ib9LD+e87tgB2xf0NbM/St9F+hY5PpJ1
YjPYVewj9gy7l73B8rDZbATryKaz4mwVe5k9xGayq9lq1o/VY8Mz///nZ0xn
Q+y0ZuNZEbacDWNt2ZvsMvYeG87asSnscvY+e4m1YmNZYbaM9Wf12cjM5LmY
wZ5gddlQFj/dNP+cz86TJzRNcew729pyv/2p+q7QN19fSk+29HZsvGPf2D4p
C+Lhk8E2V8dnsvbqd5xbmq1wbh6eWx5zbJJjh2zPUZ8tfexPZN/adpXRca+d
2965vzr3KbaQZcoL7CrndGNj4m/Q9yA7qa8LGxX3n7VjJ1gd9gB7i13J5rEG
7EG2gJVhH7D8rnmuPO7YZMeO2F6ovkD62Z/KjtrmU+eVvvbfZIdt+8tb9k+4
Xl/Xu8Tx9vEcsR2sMTvkM9qxwWw7u499yxqyDmwhK8tWsuPOT6lL2c+Uz+NZ
0ddS32xeQt8S3p29wg6yDuwU+1VvWv2fuF+yTd1ZX06887ytvuO8Q7xLbDdr
xo6yjmwY28Oas+9ZU/Y4W8fuYttZE9aXrWV3sm2sEevClrOKbC17kA1hu1hT
dozdyzqzZawCW8P+lDPyiGOvObbftpMMt79XXwt9Pzjemg1kW1l9doC1Yc+x
z9m97BvWgj3FNrE6MS6y5vGsso2sNtvLHmYj4/NYK/YTu4/1YCtYVbaJtWRP
s82sLtvHWrFn2BZWj+1nD7ERbB9ryX5kzdgTbD37L9vB2rLn2TbWiB1k77Aa
tnfE2Mf6um+T2C/6qsXnsE5sJvtbXTvGKvYYWyrz1b+4Xh9WTL1E5rGfWW9W
VL1cFrGTrB8roX5XFrNTrD+7Vv1BODvDBrLr1cvkHXacPcaKx3kyl/3EHmVX
qlfK++wv9iwroz4jedSfxVzh+x1QT0klY3qFdDKmxNgyKZWMweXSyVwVc9bU
VDLWVGS54tmWiankObkxnYzdMYZPTyVjyM3pZJyJ8WaCvMp2+twm/pbT+ian
kjnipnQyt8Qc8178Xuw3fQP0lYzfSeawH1kvdkXUMi3eedaZFYzvL9NjvGBd
WCF1MfcoM97TeFekqLq4tLV/txyO90jfbWyAvtHsH9eYpZ7HZ8QYzLvqKxy/
Z9xjdpo9yUqp304lY1I136OA/YvivFQytlZOJ2NUjFULo5f94Nyezr087qPM
YsdYd3apenYqGfurppMxL8a+WalkLKySTuaHmCdmppJx75Z0Ml7GuDk/PMZH
1+vmekXUvWI+Ub/pu02SJTFeppK1R/l0Ml/HxPdhPG/sb73PobLqvXLMfi09
neQa525gn+m7INYXjt2l/kQ+VZ8f8x67U32W3otc60J2WfzWbLPsUheK+Uxf
XfVR+d1+w1jLSCXnbWRf6LlEJjtWW91FtsU8xG7XN1/f57Y3sXa27WUBmytX
2R8vg3x+j1SyJoq10bW2JWVermTNEWuPHNtRsijWR/Gd2R+xXmMLY7xh96hf
Ved2bJbt4ljf2I6TnewRPSvi+dX3p88cxEqrN8lOVjDWCKyO+qOIOluGsArx
e8qJeN/kI9ZZfY7PuCTmSnalzznGtsgB9RUx/+hrpN4q36qvjnmUNYt7IYfU
18R8xprHe+h6hVzvelbc9X6IHvnN8Qbqp6VCrCfYS3o26K3l2Hd8XdxjljvW
YqyqenVEnYo1DKuoXhNR55JhrJL6Y9mozitjWHX1etmgziOjWTX12uhVnyM5
rIp6Vfyu6n/8Lc+zG9TPS5O4P/FssQX+vvIxp9jWl5Mx9+gpy/LruSnWlFJG
PUP+cm6tmGv09dFXPeZGx2+TIrE2Vt8S6wN19ezkN6ui/i2eaftL5Wy+K8Y0
6eNaS1h51/uMT9N7ht2dlTxL8Uxdz7o7Vk7yxVpM/T0vqq4mBVnuWCvLZucV
kWnOvVXPULZNXVTmsP+xI3K586rEGj3+nlgvyHY9xWSuvrv1DGFb4/2TGaxG
3Fu2RX2pTGe3sxfYJnXhWJ+x29hzbG1W8v7Ge5yONQ7vrV6sLqfvU58/hj3C
5sezxTaw/Syvbdl4Z/gf8Q45/+Gs5PeL3/EU2x3PuZ7ScjY7rR4t3fXNi7WT
633iWA6L/1jNibUYW8/GskFsNavBvor3mHWL78+uYx+zuj63RYzpsfaWE3pK
xtrHsRuyk/mwlLqWNNT3WmYyZ/wcc5v0Y++pK7veTv2vs/7sfXYL28XeYAPY
B/GssN1sB0tnJ+u/WAeejHEuvq/9NfH/FL5PXS7WJfbryYn4HuygFFFXlgLx
d8c6Rdb5jAIyQd/Nekax/errYh3H7mE5bJ+6VPzWMa7G92CHY7yP34u1ZK+z
IzH/yhrWIuYE9l2sBWQta8VeZnvVJeM5j7GCjWC71SVkEavPRrI96mvj+WD1
2Bj2tbpM/DbsfnYjOz/Wpr5b77gH6ppSJ8ZDfl6s12IOZKdYDdnOurJx8qL6
E3012RHnv6LvG1ZWVrAH4hliX6lLx31ijeNdZQfVN8hK1oQNZuvj+ZaJrHLM
s+xkzDFZyXwT885YdlRdUdax1iyVK7k3cY8KydfsWbZKT/54jvSVj2eUfag+
N+YQdiMbyFaq88krrBx7mi1Tp+Odi/8TxppEZqt/z0x+s8xYi8uOGMPjHXFu
TedOjfFJfYfsYN3YdPanuqbsY73Z+Bh31DfLx6wtm8B+UleRTaxDrCvYcXV1
2coeYm+x0+o75QvWPe4HO6auJOtZGzaR/ayuKptZx1Ryzbj2jzEP+q2W6vkX
QUE2vQ==
            "]], 
           Polygon3DBox[{{1191, 671, 785, 1454, 1032, 1033}, {1030, 1029, 
            1452, 783, 784, 1453}}]},
          Annotation[#, "Charting`Private`Tag$149361#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0stLVGEcBuBvHK00yxaFK/MytEwQt4rojHkbIoQUFAncKaF4t/4BJRCJ
sBFERET3gS7Fhe3CjVrexkvLcOVOUMjn4OKd5/0x5/u+c2ZOee9g+0AshPBF
xpSoD/n4z7V4CM/4g6XcYiV3WMss07xkN294K/16cW4In/iK06xmhvVc4ztu
8AN/sigvhBLnTsieeYQVUp8Twr65gb+Z5B+meMBGHvINj/je+UnrjvUOPaU3
+e7E3MwsW3jKVp6xjedM8yLaM3pe6yblr3mUCfnsXnfNH7nNHq7zLVdZx++s
4hQTnOQLPpc+/dreXfzHNh6zhr/4mpt8ySvXx505LkXmYZbLijw1L/MJl1jI
RT7mAgu4Yp8pPV/v1Jv0eXkUPR8z8lCf4wN+o78gfKWjwywtCzPMiX5fQ1ns
/h25A7JyP1E=
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{934, 1262, 1354, 1670, 933, 1465, 1147, 935, 1466, 1148, 
        936, 1467, 1149, 937, 1468, 1150, 938, 1461, 1469, 1151, 1345, 1451, 
        1470, 1263, 1298, 1152, 1297, 1674, 1313, 1314, 1264, 1355, 1647, 
        1347, 1346, 1471, 1153, 939, 1472, 1154, 940, 1473, 1155, 941, 1474, 
        1156, 942, 1475, 1157, 943, 1456, 1476, 1158, 1265}], 
       Line3DBox[{945, 1356, 1551, 944, 1357, 1552, 946, 1477, 1159, 947, 
        1478, 1160, 948, 1479, 1161, 949, 1480, 1162, 950, 1648, 1235, 1266, 
        299, 1299, 1675, 332, 1267, 1358, 1649, 951, 1359, 1553, 952, 1481, 
        1163, 953, 1482, 1164, 954, 1483, 1165, 955, 1484, 1166, 956, 1485, 
        1167, 957}], 
       Line3DBox[{959, 1360, 1554, 958, 1361, 1555, 960, 1362, 1556, 961, 
        1486, 1168, 962, 1487, 1169, 963, 1488, 1170, 964, 1650, 1236, 1268, 
        1301, 1302, 1300, 1676, 1315, 1237, 1270, 1363, 1651, 965, 1364, 1557,
         966, 1365, 1558, 967, 1489, 1171, 968, 1490, 1172, 969, 1491, 1173, 
        970, 1492, 1174, 971}], 
       Line3DBox[{973, 1366, 1559, 972, 1367, 1560, 974, 1368, 1561, 975, 
        1369, 1562, 976, 1493, 1175, 977, 1494, 1176, 978, 1652, 1238, 1269, 
        1239, 1316, 979, 1459, 1654, 1240, 1271, 1241, 1653, 980, 1370, 1563, 
        981, 1371, 1564, 982, 1372, 1565, 983, 1495, 1177, 984, 1496, 1178, 
        985, 1497, 1179, 986}], 
       Line3DBox[{988, 1373, 1566, 987, 1374, 1567, 989, 1375, 1568, 990, 
        1376, 1569, 991, 1377, 1570, 992, 1498, 1180, 993, 1655, 1242, 1272, 
        1243, 1317, 994, 1681, 1318, 1244, 1273, 1245, 1656, 995, 1378, 1571, 
        996, 1379, 1572, 997, 1380, 1573, 998, 1381, 1574, 999, 1499, 1181, 
        1000, 1500, 1182, 1001}], 
       Line3DBox[{1003, 1382, 1575, 1002, 1383, 1576, 1004, 1384, 1577, 1005, 
        1385, 1578, 1006, 1386, 1579, 1007, 1387, 1580, 1008, 1657, 1246, 
        1274, 1320, 1319, 1009, 1682, 1321, 1322, 1275, 1247, 1658, 1010, 
        1388, 1581, 1011, 1389, 1582, 1012, 1390, 1583, 1013, 1391, 1584, 
        1014, 1392, 1585, 1015, 1501, 1183, 1016}], 
       Line3DBox[{1020, 1502, 1184, 1018, 1503, 1185, 1022, 1504, 1186, 1024, 
        1505, 1187, 1026, 1506, 1188, 1028, 1507, 1189, 1030, 1453, 1508, 
        1278, 1304, 1190, 1303, 1677, 1327, 1328, 1279, 1672, 1191, 1033, 
        1509, 1192, 1035, 1510, 1193, 1037, 1511, 1194, 1039, 1512, 1195, 
        1041, 1513, 1196, 1043, 1514, 1197, 1045}], 
       Line3DBox[{1044, 1598, 1404, 1042, 1597, 1403, 1040, 1596, 1402, 1038, 
        1595, 1401, 1036, 1594, 1400, 1034, 1593, 1399, 1032, 1454, 1592, 
        1277, 1326, 1325, 1683, 1031, 1323, 1324, 1276, 1671, 1452, 1029, 
        1591, 1398, 1027, 1590, 1397, 1025, 1589, 1396, 1023, 1588, 1395, 
        1021, 1587, 1394, 1017, 1586, 1393, 1019}], 
       Line3DBox[{1047, 1405, 1599, 1046, 1515, 1198, 1048, 1516, 1199, 1049, 
        1517, 1200, 1050, 1518, 1201, 1051, 1519, 1202, 1052, 787, 1280, 1306,
         1203, 1305, 1678, 1329, 1330, 1281, 1406, 1659, 1053, 1520, 1204, 
        1054, 1521, 1205, 1055, 1522, 1206, 1056, 1523, 1207, 1057, 1524, 
        1208, 1058, 1525, 1209, 1059}], 
       Line3DBox[{1061, 1407, 1600, 1060, 1408, 1601, 1062, 1526, 1210, 1063, 
        1527, 1211, 1064, 1528, 1212, 1065, 1529, 1213, 1066, 1660, 1248, 
        1282, 1308, 1309, 1307, 1679, 1331, 1249, 1283, 1409, 1661, 1067, 
        1410, 1602, 1068, 1530, 1214, 1069, 1531, 1215, 1070, 1532, 1216, 
        1071, 1533, 1217, 1072, 1534, 1218, 1073}], 
       Line3DBox[{1075, 1411, 1603, 1074, 1412, 1604, 1076, 1413, 1605, 1077, 
        1535, 1219, 1078, 1536, 1220, 1079, 1537, 1221, 1080, 1662, 1250, 
        1284, 1311, 1312, 1310, 1680, 1332, 1251, 1286, 1414, 1663, 1081, 
        1415, 1606, 1082, 1416, 1607, 1083, 1538, 1222, 1084, 1539, 1223, 
        1085, 1540, 1224, 1086, 1541, 1225, 1087}], 
       Line3DBox[{1089, 1417, 1608, 1088, 1418, 1609, 1090, 1419, 1610, 1091, 
        1420, 1611, 1092, 1542, 1226, 1093, 1543, 1227, 1094, 1664, 1252, 
        1285, 1253, 1333, 1095, 1684, 1334, 1254, 1287, 1255, 1665, 1096, 
        1421, 1612, 1097, 1422, 1613, 1098, 1423, 1614, 1099, 1544, 1228, 
        1100, 1545, 1229, 1101, 1546, 1230, 1102}], 
       Line3DBox[{1104, 1424, 1615, 1103, 1425, 1616, 1105, 1426, 1617, 1106, 
        1427, 1618, 1107, 1428, 1619, 1108, 1547, 1231, 1109, 1666, 1256, 
        1288, 1257, 1335, 1110, 1685, 1336, 1258, 1289, 1259, 1667, 1111, 
        1429, 1620, 1112, 1430, 1621, 1113, 1431, 1622, 1114, 1432, 1623, 
        1115, 1548, 1232, 1116, 1549, 1233, 1117}], 
       Line3DBox[{1119, 1433, 1624, 1118, 1434, 1625, 1120, 1435, 1626, 1121, 
        1436, 1627, 1122, 1437, 1628, 1123, 1438, 1629, 1124, 1668, 1260, 
        1290, 1338, 1337, 1125, 1686, 1339, 1340, 1291, 1261, 1669, 1126, 
        1350, 1630, 1464, 1127, 1439, 1631, 1128, 1440, 1632, 1129, 1441, 
        1633, 1130, 1442, 1634, 1131, 1550, 1234, 1132}], 
       Line3DBox[{1146, 1296, 1646, 1458, 1145, 1645, 1450, 1144, 1644, 1449, 
        1143, 1643, 1448, 1142, 1642, 1447, 1141, 1460, 1641, 1351, 1353, 
        1352, 1140, 1463, 1688, 1349, 1293, 1344, 1343, 1687, 1139, 1341, 
        1342, 1292, 1673, 1455, 1138, 1348, 1640, 1462, 1137, 1639, 1446, 
        1136, 1638, 1445, 1135, 1637, 1444, 1134, 1636, 1443, 1133, 1457, 
        1635, 1294, 1295}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{397, 590, 1465, 398, 1552, 601, 422, 1555, 614, 435, 1560, 
        627, 448, 1567, 640, 461, 1576, 653, 474, 1587, 666, 1503, 487, 679, 
        1515, 500, 1601, 692, 513, 1604, 705, 526, 1609, 718, 539, 1616, 731, 
        552, 1625, 744, 565, 1636, 757, 578}], 
       Line3DBox[{399, 591, 1466, 400, 602, 1477, 423, 1556, 615, 436, 1561, 
        628, 449, 1568, 641, 462, 1577, 654, 475, 1588, 667, 1504, 488, 680, 
        1516, 501, 693, 1526, 514, 1605, 706, 527, 1610, 719, 540, 1617, 732, 
        553, 1626, 745, 566, 1637, 758, 579}], 
       Line3DBox[{401, 592, 1467, 402, 603, 1478, 424, 616, 1486, 437, 1562, 
        629, 450, 1569, 642, 463, 1578, 655, 476, 1589, 668, 1505, 489, 681, 
        1517, 502, 694, 1527, 515, 707, 1535, 528, 1611, 720, 541, 1618, 733, 
        554, 1627, 746, 567, 1638, 759, 580}], 
       Line3DBox[{403, 593, 1468, 404, 604, 1479, 425, 617, 1487, 438, 630, 
        1493, 451, 1570, 643, 464, 1579, 656, 477, 1590, 669, 1506, 490, 682, 
        1518, 503, 695, 1528, 516, 708, 1536, 529, 721, 1542, 542, 1619, 734, 
        555, 1628, 747, 568, 1639, 760, 581}], 
       Line3DBox[{405, 915, 916, 1469, 406, 605, 1480, 426, 618, 1488, 439, 
        631, 1494, 452, 644, 1498, 465, 1580, 657, 478, 1591, 670, 1507, 491, 
        683, 1519, 504, 696, 1529, 517, 709, 1537, 530, 722, 1543, 543, 735, 
        1547, 556, 1629, 748, 569, 1640, 924, 925, 582}], 
       Line3DBox[{407, 918, 919, 917, 767, 1470, 806, 768, 1648, 769, 810, 
        771, 1650, 772, 812, 774, 1652, 775, 814, 777, 1655, 778, 816, 780, 
        1657, 781, 818, 1671, 783, 784, 1508, 820, 786, 787, 822, 789, 1660, 
        790, 824, 792, 1662, 793, 826, 795, 1664, 796, 828, 798, 1666, 799, 
        830, 801, 1668, 802, 832, 1673, 804, 926, 928, 927, 853}], 
       Line3DBox[CompressedData["
1:eJwV0MdKQ0EAhtERwfdw5UKCiIhIkODK3pIg9hJj18QSY++9xF7yuJ5ZHL47
828uU58rpgs1IYQ8VR9jtSGM08UkT3UhTGgDU0zTzSzPthltZI55eljgxZbT
BHkWKbvr1WWWaGKFD/er2sc6azSzwadtU/spUqCFLb5s2zrALhXnHW2lxB6D
7PNqK2sbBxwyxDFvtiNt54RThjnn3XamSS74dr7UEa65ooMbfmy3muaeO1I8
8Gt71Ex8t/iudMZ34s9W0Wz8l/ivjPIPXt8s6g==
        "]], 
       Line3DBox[{411, 596, 1472, 412, 608, 1481, 429, 1558, 621, 442, 1564, 
        634, 455, 1572, 647, 468, 1582, 660, 481, 1594, 673, 1510, 494, 686, 
        1521, 507, 699, 1530, 520, 1607, 712, 533, 1613, 725, 546, 1621, 738, 
        559, 1631, 751, 572, 1642, 763, 585}], 
       Line3DBox[{413, 597, 1473, 414, 609, 1482, 430, 622, 1489, 443, 1565, 
        635, 456, 1573, 648, 469, 1583, 661, 482, 1595, 674, 1511, 495, 687, 
        1522, 508, 700, 1531, 521, 713, 1538, 534, 1614, 726, 547, 1622, 739, 
        560, 1632, 752, 573, 1643, 764, 586}], 
       Line3DBox[{415, 598, 1474, 416, 610, 1483, 431, 623, 1490, 444, 636, 
        1495, 457, 1574, 649, 470, 1584, 662, 483, 1596, 675, 1512, 496, 688, 
        1523, 509, 701, 1532, 522, 714, 1539, 535, 727, 1544, 548, 1623, 740, 
        561, 1633, 753, 574, 1644, 765, 587}], 
       Line3DBox[{417, 599, 1475, 418, 611, 1484, 432, 624, 1491, 445, 637, 
        1496, 458, 650, 1499, 471, 1585, 663, 484, 1597, 676, 1513, 497, 689, 
        1524, 510, 702, 1533, 523, 715, 1540, 536, 728, 1545, 549, 741, 1548, 
        562, 1634, 754, 575, 1645, 766, 588}], 
       Line3DBox[{419, 808, 809, 1476, 420, 612, 1485, 433, 625, 1492, 446, 
        638, 1497, 459, 651, 1500, 472, 664, 1501, 485, 1598, 677, 1514, 498, 
        690, 1525, 511, 703, 1534, 524, 716, 1541, 537, 729, 1546, 550, 742, 
        1549, 563, 755, 1550, 576, 1646, 835, 836, 837}], 
       Line3DBox[{577, 756, 834, 1635, 564, 743, 1624, 551, 730, 1615, 538, 
        717, 1608, 525, 704, 1603, 512, 691, 1600, 499, 678, 1599, 486, 1502, 
        665, 1586, 473, 652, 1575, 460, 639, 1566, 447, 626, 1559, 434, 613, 
        1554, 421, 600, 1551, 396, 589, 1670, 805, 838}], 
       Line3DBox[{583, 761, 914, 913, 930, 929, 1688, 570, 749, 1669, 803, 
        557, 736, 1667, 800, 544, 723, 1665, 797, 531, 710, 1663, 794, 518, 
        697, 1661, 791, 505, 684, 1659, 788, 492, 1672, 671, 785, 1592, 479, 
        658, 1658, 782, 466, 645, 1656, 779, 453, 632, 1653, 776, 440, 619, 
        1651, 773, 427, 606, 1649, 770, 409, 594, 1647, 921, 923, 922, 855}], 
       Line3DBox[{584, 762, 912, 1641, 571, 750, 932, 1630, 558, 737, 1620, 
        545, 724, 1612, 532, 711, 1606, 519, 698, 1602, 506, 1520, 685, 493, 
        1509, 672, 1593, 480, 659, 1581, 467, 646, 1571, 454, 633, 1563, 441, 
        620, 1557, 428, 607, 1553, 410, 1471, 595, 920, 931}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJyMvXk8V133Pk5ooGRKUikkKpVQQs4uEok0SUgqSVGZSmmiSaMiEklEVEqR
zDrb0EAoSshQ5nmICmnw23uf8/Z0c9/f3+f5x6vrtZ511r722muvtd7nrFt6
u8M6mxFcXFwBI7m4eNDfpImH4Az5ydSA/APrW6ENINB4/W78VzEtinvEeAvq
Wan5Jvzvt7fC9+O/k2TEzspFBlNeD5oOBaN/uzybsCEE/TV/aAQ3y1RR/vNb
ll9G/z45iufcI/S37U9zZY+XNIheouZ0JqQBXLfbpJd4uwHwR8ln6gpYg4HD
0X2uXg3go7fVo+g4pE+t+3VNcDioWJyV072iHvjuDruV9qkRfGx4OWAr8BZw
Mf/zCLK3Ntol0Al26eR/xvKO8SlYHl6pCCDyCRMrxbD+C07gB9IPLaXfRmP9
lNvAr5/InpfmGxyQPTB2kuZKbE9FbN63IGR/4cwJ2H7YKlhK7E9zWwvwevXU
9dzQemHG/MT1eL26TVvSuRE/Qgc/Y37gMa5phJ8OpaD9hM/WBBuM37ioZ4vx
CTLbj0lIilB5mu478b85f7fEZYUbTjKlaJbnApZnPXXD3F07AinlhwzPEjTD
c27IN4nYe+VUSzfDc+lrhufXbdeyayZKAcXvK/G6gE+76Cq8rmltdP+bdVvB
CpEc/kOIZ3nRa2mPEA9fTC91GBeGAlun7J0j9OuBSytl0v65EdSc11X8WPh6
kOePMq8MFQw6Qd3C+h4sn3bmBZaHD+5oEnmvFD8trD+j/s5opB9+V0ygsf6S
sjsNvciewFAzR8zzIRNeA2zPMQ1xWaH75ZRN20LCs1ZBErH/2a911KzdgVTi
PB3C8w3NVMKzmtCAmP08U+pJ5XgzzGdFYIcL5of+tFpuaeZEqmzRa8Jz+lLV
/yfPhq2PxwkfWj+M55Gp/e2m869Rz1iew1meYw4Zxd0bW0IpBbQSnqUceYmd
W9w+dbaJTgI218bhdYEXoSWE568TxJ9Fq1qAWc4u7ZhnLkHXyMeIh7C1CxSf
jr4JJqyYbd6EeC7ffWB1Z1UjaPyq57Xa4+Ugz/G9Acv3eXSClH/KQ4789nxL
zUdIv8v82R2Y56Nb0iOwfpP6xy9/IXuOP8kkPJd5yxB77DPOjW9C9j/xWUR4
vnggmdjfTMd9V1S8Rr2KDSY830/eSng2rpgzq8ho/TCey7q7CZ//V55P67S+
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
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["\[CapitalDelta]\[FinalSigma]", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\[Eta]", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-20, 20}, {0, 1}, {0., 0.9999999265102694}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.926020445983046*^9, 3.926020499493271*^9}, 
   3.926020600887422*^9, 3.9260207637749567`*^9, {3.92602084065103*^9, 
   3.926020845595674*^9}, 3.9260209324864798`*^9, 3.926065382704686*^9, 
   3.926066424014817*^9, 3.9277412008566*^9, 3.927741306630828*^9, 
   3.927741496018497*^9, 3.927742319993044*^9},
 CellLabel->
  "Out[331]=",ExpressionUUID->"64c33239-38ab-46c5-974c-36dee1ac8df6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["O\[CloseCurlyQuote]Donovan et al.", "Subsection",
 CellChangeTimes->{{3.9260014993607264`*^9, 
  3.926001504072186*^9}},ExpressionUUID->"2cb92849-31e3-42e3-8089-\
68dcd522c5bf"],

Cell["\<\
Finally, we implement the components for O\[CloseCurlyQuote]Doonovan et al.\
\[CloseCurlyQuote]s method (Eq. 5)\
\>", "Text",
 CellChangeTimes->{{3.92600150817404*^9, 
  3.926001544734128*^9}},ExpressionUUID->"ad061d67-68bc-4672-b4d6-\
9b98e6dcf432"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["Pr", "ODonovan"], "[", 
   RowBox[{"\[CapitalDelta]\[FinalSigma]_", ",", " ", "\[Mu]_"}], "]"}], " ", 
  ":=", " ", 
  RowBox[{"1", " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"1", " ", "+", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], " ", "*", " ", 
       "\[CapitalDelta]\[FinalSigma]"}], "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["Pr", "ODonovan"], "[", 
   RowBox[{"\[FinalSigma]k_", ",", "\[FinalSigma]j_", ",", " ", "\[Mu]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{
   SubscriptBox["Pr", "ODonovan"], "[", 
   RowBox[{
    RowBox[{"\[FinalSigma]k", " ", "-", " ", "\[FinalSigma]j"}], ",", " ", 
    "\[Mu]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", "ODonovan"], "[", 
   RowBox[{"\[CapitalDelta]\[FinalSigma]_", ",", " ", "\[Mu]_"}], "]"}], " ", 
  ":=", " ", 
  RowBox[{"-", 
   RowBox[{"Log", "[", 
    RowBox[{
     SubscriptBox["Pr", "ODonovan"], "[", 
     RowBox[{"\[CapitalDelta]\[FinalSigma]", ",", " ", "\[Mu]"}], "]"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", "ODonovan"], "[", 
   RowBox[{"\[FinalSigma]k_", ",", "\[FinalSigma]j_", ",", " ", "\[Mu]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{
   SubscriptBox["L", "ODonovan"], "[", 
   RowBox[{
    RowBox[{"\[FinalSigma]k", " ", "-", " ", "\[FinalSigma]j"}], ",", " ", 
    "\[Mu]"}], "]"}]}]}], "Input",
 CellLabel->
  "In[332]:=",ExpressionUUID->"61347728-bc48-4db3-9019-291c43e2304c"],

Cell["As with Crowd-BT, we can visualize changes in \[Mu] (Fig. 1):", "Text",
 CellChangeTimes->{{3.926020680348008*^9, 3.9260206917150784`*^9}, {
  3.9260650787606077`*^9, 
  3.926065084678463*^9}},ExpressionUUID->"bb96511e-f7eb-482a-98ad-\
7154181ae99d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["Pr", "ODonovan"], "[", 
       RowBox[{"\[CapitalDelta]\[FinalSigma]", ",", " ", "\[Mu]"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]", ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", 
        RowBox[{"-", "0.5"}]}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]\[FinalSigma]", ",", 
     RowBox[{"-", "7"}], ",", " ", "7"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"\[Mu]", ",", 
        RowBox[{"{", 
         RowBox[{"\[Mu]", ",", " ", "1", ",", " ", 
          RowBox[{"-", "1"}], ",", " ", 
          RowBox[{"-", "0.5"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"LegendLabel", "\[Rule]", "\[Mu]"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.926020695658909*^9, 3.926020748861724*^9}, {
  3.926020936576853*^9, 3.926020953754451*^9}},
 CellLabel->
  "In[336]:=",ExpressionUUID->"d54e3889-cf41-473f-bd33-49e3ee0da939"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
l5jo0y+9zZGk//9/JRK/uOgST/p/hlTE8g==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$149409#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt1Ps31Hkcx3HTNO6NUSjzqTGKaNhFii6H96fSFNGFcUmqXZYuarXVyrq1
tgtTNksbEiPmFF1sVmoPI/MZ0UhRmk0SkhZhfIdMohY7nbM/vM7zPP6Bl2Vo
lG/4DC0tLR/NvnTjMYVyehoR3vECufZMEayJtQjM+YxI+lS4F9NEBKsSImXL
PiLixuewOVYisD9Bz9xHIfJ8WVJpgIcIWGnOoGhHJHMtk2d/SgStV8+nX61A
pMqzsCNSNx/2tvi5+BxB5LI86WSJ/mUQLv/7eE4vm2i7ptDfWxXA6uCGm8I7
5kRUvWrJ9QYxoPo3TqXZ80iGx0eLgLyrgDsNrA8mzSVL26qsz5Nr0BJsV5bo
a0YkUsEOiagELnEPZMldTYmgER4XvCqFZu9Cs3CGCTmj77AlePdt8LYcpF9s
nU32ZTudoNnfhTF3f8+ZxJjsbEhsL0EVwLpfblubxiJBUxzPZyVVcJsbSaL7
mEQaeWbkrTOBpwYZBhmVhiRrsuS1emUNNN0XnwnYpU/e3z3bOFxUCzzmeIWQ
p0t23AirsLSRw15r1wURcgaZ4yuWreE0gMOvl0KioujE1SKGn72pEQTJa737
gEYKTdSjAngKd3KLX7NqJqX8kfoLYvQMErZsS3b0n5C+En2VXqdWgG7uk8xC
oVo6bZB666VxC2yZ43SvvVgl5WcqdDjurcBY0TjLoatXyo1b6BAU2AYnuEtC
vMvbpC48x4TUm+3QIs92++aFTLr5u/zUou5OqC5+FKuvI4OOXXqxdildkHtl
zadDB1/Bz3p19nZ33sCHH07mjAp74Zc9fyW/edgNj77nqD1mDUOf6fJxH+ot
pNBLQ12kavB+JpPy6D0gPFJ1yIs7AeVJomr41AP1nqNmhl2TYLrQxXrteC9c
SfD9OsaGhsee5oeyXvRBO0P7x3t+dKzPjHiwWfwOlsqakrffYmCnjoz1uYf6
gTcgGDjdrYNNY0Jsa7gDgPnD8wzW62PO4LeHbZ4MwLiRZxb3uCF2d6M3D4QO
go0wfqXeH0zslDC2eF3vIFTmdPtZnWZhL+NLZ6MilFBW1FNmWGCMWdFm5ieb
lbBy8+ixy4rZODlZJFGuGII4b6opT8sE5wVUzK/OGIJztPrGMHNTXOUBiNEx
BI5bby597mmGu+x+GnKwokDsHwVGEXMxb2p8fvkuCprLLDrL4ufhTco4xr50
CtKutXXTbphj0/3+ZfdlFHACj6aZ17Hx+oJgXd9+CkSKfltGAxvbS4L2f9TY
YuvumuEmNq7ULjyYO0AB19Prg7yVjSsqO4N6BilYtJq7I1rJxknnjskPUxTY
WjxerJiD8G+ZWY7xoxQ49y2qTg1FOD78utBrkoLysIuBMXsQjvLNPvqPxsu6
mCNhBxCWZCi1E6cocHk5sWh1NMLbX5xaWDpNwYpHT4T9QoQX+xWtYs1Qgfut
OH/+nwhvlErnEm0VVNuNUE53EX4ssUoT6KgAiiNSFkgQds3vKH2nMS7YJlHX
IvxZRFcb6alg3XkbS3ErwhNnbRKDDVRQa5RXea4D4aAQZx+lxh6pswWx3Qhf
+JdWn2CoAv6pydPblAh/+D1Plj9LBQ9oR7huIwhv8KnDjkwVbEh8V2E7hnCX
f/gBonH9p51+Jp8RHmu77rHVSAX//xfWUdc8fK3xfz6iS+E=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$149409#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7VF++c3//9IHGMDggX3GtWAz32IEv9P0Sv2sZ1Jw
vnXUqTWdWyXhfOkTDw03zJCA8x3ucavmNorD+deitDfVBYnB+bMVcqYfNxeF
8y/6LBJLZRWB830UXzPPvCEE53+zC/VkOSAI5wsc3qJxpF8Azt+skH2g7Dkf
nH+BexL3pF08cP65w4u7wuK44Hwtvh87O7U4EP5VNZdNO84K5+v3zo7Jz2eG
80PanXye2zPC+VvnrLgvcOjvfhi/1j+w3SD0J5zPMef8tEWdX+B8f2HDvXdW
vIfzWS3O8uo/eAbnNytoxvhsuQXnXzs+wzbh+kE4f9+K01Vc7AftYfw5Sx1/
FeTehvO/FrbM+tz5DM4/nSf3xYX3A5zfwbwhyWz/Fzi/s3hPgZfCTzj/hOdn
MZ4Hf+H8pbVBehXqjA4w/h1WttK9wcxwvtHBc+2R61nhfK1XIa/aHrHD+Q5u
HyS4Xbng/B/8ntMV6nngfPXOGkvOdXxw/q5Zj4JV2gTg/E3Ln27iWSgI51v6
fS5fcFkIzq/2eXduLoMInN/HeOJssqQonG8QsMboqqcYnL84NN+eP00czr+4
Sf7ephoJOL9/5a1HjKsl4Xy58JJ+yaNScL7xc+V9PUnScD40v8D5AMfC/Lg=

          "]]}, Annotation[#, "Charting`Private`Tag$149409#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtlPs3FHgcQE3TxBqMNF7zPWWszYg9JYVQfb5Kih0rMRyKikjyKo8cFFst
TYojSinDpEQpElqJ+XpsY/OolpCVkUQYM4q8yrHtOfvDPffcf+Dq+4bt8V+i
oKDg9J3/vOtEu3RxERHFqfq/JAw52MbqeWR/RYT+svji/u9tffJo3cYZRNpU
1zEkanL4+Qz1yhEZIl7TcY5vVeWgnrYB2nsRkV4sEXTS5dBdkJFeUIXIo3EN
4VNFOQR2ulo4RSCS/P4xh7coA755R0L2EIukxYslpeMysPF6Xsyv0CXabsHe
vAYZoKZ360uv6pDHKQoC4ysywH301SG/aRNvs1ut034y6PQyKTu1R4vQyh0d
mYYyuM4OzhJbahL3ZTHPUgbH4RX3ppY/jUlKVrEqmZnjwNUfo17r1iCfW669
SLAeh+mtPIelZDmpMAy3O98rBfWGcqPGNHVizu6t3BEkhUfsoyR6WI2o++dQ
FSfH4CX9Ev3SExWSnchsOn1sDNoa8s+7+ygTO42cFmrnKBirzVbxjZXIGs07
6ZYWoxC42nJlgJhG4kyy0sJiRmDdxev7wsKoxGz2oEz3/kdwS97GHQYKKflC
S+L1D0PFjUKJev2CyDsZma/9PAQnnV2STXlzogzTI5Y5tCFQuvHiyk3+lIgy
b2W0YmYQnFesr+ktlIvebtT6NtH/HmibWlXX9Q+JwutDP7p2DMAZ9pp93PIe
0YfRw3VVRe+gU3x1y4GuOtEbp1Kr4tR+qC1sjlVWrAP7beP0Inkf3LhtOx8e
8g8sSqMKii73wpdjZ7Mn+UPw1TR9YnNwDzSHrpqyU50As47LjEMG3XCOWupr
IZqCwL3xiXfnXgM/4mm4I3sOrn6rP51I74Amh0ktlf4F6KrOqIhj/A23T+5Z
G8OhYKYPsZa4vIRe2rKoGlcq7hEfHmo83gpmdW3JniU0vDmlfCR1y3MwHnUb
TRpQxA/0Un1m4sWA7Sd06DuUcYprjIVvQyPMMhyy2AkqWJk+We0WWQ8cfrzV
Dw/UMNAND00GEHiSPeD6U5I6vhfFyT/T8hTK7nwoUxEux7HOXEtJRBVY/Tp5
Iq9dAzc30A2yN1VCHFfWlqPAxMxfzFmMoEeQSmlq9dPVxKiHZtil/RBMdxeb
vXbQwnO2IUaUmvuQzwsDRoA2Proy3LSWeRdelen1lcXr4F02toVhIwWQVtQz
QLmnix/4FPU0vs+HVR6Rabp/svCtMV6sJEgIgvYRI9pzFjZ3ivTiHxCC3u79
9RNtLOyZKVlt5S4EtoPjF3E3Cx9xYx6/aysEAxv23mgpC0u1k8+16wjBSK/F
sH0FwkpZSdObm/Jgw7BB7QVfhKHQ09/DJA/K/a55xBxGmP4mtvIP/TzY2K/2
yS8Y4QMdFul6Onlg8WbOwCYa4aDzN7sWlubBpuYX/BE+wtuua96brcmFrSVx
PPuHCP+oraS0wMmFWpNPsvWVCJ9NCkShmrkAhQHnVlYjrKHLHRxZkgtY6FI9
1YjwY/aFBEqfALZncPTzuxEeTFSzKc0UQCMj50nqW4SZUZme0acFYHdBwy12
AOHQELJoHy4A+98XklykCO886NSiyBXAM0oEe8snhOfd3YdnrASw89THKqNp
hOXbeRGfOQJomvd2ZX5F2Fl4K2hGUwD//wsbJwjFy5YK4F/FGEUs
          "]]}, 
        Annotation[#, "Charting`Private`Tag$149409#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$149409#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\[CapitalDelta]\[FinalSigma]", HoldForm], TraditionalForm], 
       None}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-7, 7}, {0., 0.9990889485455361}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"1.`", "0.5`", "0.`", 
       RowBox[{"-", "0.5`"}], 
       RowBox[{"-", "1.`"}]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\[Mu]", {FontFamily -> "Arial"}, Background -> Automatic, 
                StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\[Mu]"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.926020742686257*^9, 3.926020752791954*^9}, {
   3.9260209389077787`*^9, 3.926020954394479*^9}, 3.926065382755434*^9, 
   3.926066424064974*^9, 3.927741200910861*^9, 3.927741306683057*^9, 
   3.927741496070828*^9, 3.927742320050548*^9},
 CellLabel->
  "Out[336]=",ExpressionUUID->"0a38b5ea-d3d2-4596-9944-8e7c50bd9be0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["Pr", "ODonovan"], "[", 
    RowBox[{"\[CapitalDelta]\[FinalSigma]", ",", " ", "\[Mu]"}], "]"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]\[FinalSigma]", ",", " ", 
     RowBox[{"-", "20"}], ",", " ", "20"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", " ", 
     RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.926020789977264*^9, 3.9260208018115807`*^9}, {
  3.926020857413271*^9, 3.9260208597191563`*^9}, {3.926020941308339*^9, 
  3.926020943135676*^9}},
 CellLabel->
  "In[337]:=",ExpressionUUID->"9e159e74-2d56-4123-aca6-ace8dd881f8e"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyVXXV4lMfXxYu7S7AgxYsUKTCB4u5Wilux4i7BtRCguAV3CxCcNyxOkHSR
EIIlQCAQwR3y9Zc95y57af748g9PT+eZnTlz59rcmTdvlz+bdU8QL168Bsni
xUv477/ltqYNiIkp45f3TsO9MTHRVqkDD7/++6/xq5M6z3z3nwQPm3Ek4n/4
ostZ7teZX0zw8rOm7P76L749RQbPfsEFBc/QMKBE+L+4LbafvIJ3mlvu/KCv
0WZXbPvMgr8b3P7XdI+izb5YPIngszqcOpr21ygTL/bv9VHiyWP/+77xdrT3
IL4gy+Eyry9vMxsc/Qv+KunsdUejeptjjvEIPjRh8k19rxY2mx3jF3x/tUif
kv+EVZ3vmK/gmxdMbbDp3fqqxx38CL56Zqvsw2p0rQo+BV9a8ujb2fvyEvfr
MWT3Ut9+z4RP8kw8Wd1Xeb7lmfistvfC33zDM/Eq9UZUmfUNz8SX92ye+9BH
J8/EGxXO2775SSfPxIt/7r7ae0ik8CzjUTwTP+sWkOhTu33CM3HPoD7RTVuN
E56J11vY2WdijprCM/EDGwZErimVypBn4lmPPWtQrdg14Vl4aPX67qKQ5cIz
8RGu/Pttjf2dMJFP8kycfJJn4jlfNOjg8w3PxPN0aO699YuTZ+L5Vre8kT7K
yTPxQa+WhSUc4eSZ+PtTnQ6kahYhPBP/QfFMvN/NDzXm/3lMeCZ+ed6aYpNi
vIRn4ifudtr6Y2Rn4Zl4yzepu3/ZWlp4Jt4w/6GTfXslNORZ5gX+yTPxGZB/
8hy1dmgP97qhst/JM3HKJ3kmTj7JM/Esn57PTf/ayTNxyi15Ju53vEqmPfYo
4Zl4guSlfr5/6qnwTDyJ4pl46pum0PiIU8Iz8fQZ3bdHXVsrPBMfCTknz8SP
2JO53b/VWngmTv7JM/FTkH/yTHw19A957h4r58GiP8kzce538kw8D+STPBNv
AD7JM/EiLX+qXLSck2fiRaEfyDPxkiEThpc78kR4Jp5I8Uz8t9Hv8xbJcEl4
Jn4C+oQ8Ew9pd33kknZLhWfiA8E/eSZ+DPJPnonXhP4hz8TbQ/+7yrNd7JGr
PNuFN1d5tst+d5Vnu8inqzzbhU9XebZb8SG3rvJst3KWLfzXhVJhSp7tVsL/
lGe7ZV+861HvVVeVPNutpJBzV3m2W0fBv6s8260UkH9XebZbZ6F/XOXZLuvi
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
AbYnPspVPunvGeXXCU6/TvmBhn4jccYpym+UegntTxKPVH6jnIOf3J9t2rwo
5c+HyvmUq/4JFjvoqmeCrRnox1Xf2q22jQvmnBuo7abd8gps8TnjhmilJ+1y
/uiqD+1yTuSq9+zWW+RDXO2j3WqDPKGrfbRbnZBvcdVjdmsM4lZXfWW3gpGf
dNVLdqtqzgtP/Q5PVfrHbl1rfjNiYIUhigeb9fjoiwxvH0YqHmxWkprtDtSJ
jlA82Kx3i4etzbHsmeLBZnWAPXWdl83aAr/ddV42ywv2y3VeNquYd4Fh8xaf
UPOyWVcDi9c8POWgmpfNOp11UKfGN3freRnial7mEvpR8zKF8btqXmY6xum6
vjazXsUjxBtDb6j5mvbgR83XvAGfar6G/Cv/wdBvUTwYrqOSc8N1V3JuykBO
lJybAMiVknPTC3Ko5Nw0gNy68mA3tf9bzuWcRcm5nKcoOZe8t5JzMwf7VMm5
4b52tTvBhnrA1R8INt2hN1z3aajk2Vzj9zCzHOvuGr+EmWlKz1AfUr+peFn0
5M10abu51y3j93JiWN9+wVFWln3jY3HaBcbXK+EfEmd9UQ/wjH482E+HB9fW
l4xfvaqyC1YL+C1qXtbeQI/gWVMey3gc+BkrenaB1wMSyDhhj65YG/9oWnXm
756Cs33RLo1Gh+xZLbiD5yPW1Pi2kOxnjyq7fMSaDb+RvwvcsL3qxwRYZ9fl
7Bmhf9eocSJOv2I4Ttf88BnD+F3lH0wdxQ/Xqzf4V+tlyLPi33AdmW9k3oP1
VHbwnuvL7e2+/R5Yz0vNjBnf23m+zzxDYtXeFjueO1aCOdnOJFkTqvLzN6S+
he0dv3vNqlepY8WC10LU+ZS/1A+wPdexe479UXcThahzFh8rvmrvwNdaRWI+
va1SVtch+Eic6Bu7X+J7sP2PN5PF33Xmru7fxFP9c90LoL3q37yF/8/+2b4W
5ut6Puhv7NBvuUJSz+4X/JPIifeAtD5dG09T54b+pv/Zdd3mPN5omsRkPRgT
U1zaX88z8nKXaYvVeaK/8UE+v0fljG3c6xaW9mFzNvjlGrFJ8y/n3Zwv28/a
/bD5xIJ39PrKeSLbO+Q2yDQv+3lG1pnBWn7MW9XeiuUjxDz3mzbf81WQlk85
R2P70Xu2VQz2fWTaLDA9t3W7Kfyz/UvYL5WvM5ugT9g/9xfPNbi/eI5QDnqM
eXvul/foX43HavFzpwZbLz0wE/F7xAdinMS5v8qvehYvXtEgzYM1LfdRX5PE
2Q/xxCcc/BDnvkv98OLgl8duaf6tG4/iH3lVKVTaE++CdSHO/Th8VrW/9ra+
rdfdOrQp1Y3jfUOkPfGFkAfi3KeVzy/MV/3tHXVO6mO9w75Q+8iKzDB6/OYV
980Fx37x436MAM7+2Z77VO0vawjGz/bsZ2f8pOknL76nx2PSQw8ovWG2oz3H
w/074L/7Nz9Czyh9YuIYv3kGXOk3Uw68KT5NF+g9xb/Zj3VRetX0UeMkXgP6
R8mDuQI5UfrcfHngkCslb+bDXw49r+TTjIXcKjti8kLOlfybh7Avar+Y2thH
jPvoP1xufuzL/+wX15H+QzL4pWpfW0mht9l/UPdRZ2JiHlsLP7Y5etg7UM7p
aNdmqfo62iP6e0o/W1WOlx9oW6vrSP0lvlP62fr48+zwU7/q+lJ/qd9T+tlK
t+lN/nHTo1R9hb/Us7nWV/hbw2AXXOsr/CUuU36I1fZwksAZx6OVn+Nvtaox
2337OH1+fcaagfyMq//jb7UYOrz/6CJe2l+y6Bep8Uv9UhfHfOm/Gc5XzUv8
5AYOPqU9+VTzFf88p2O9pD3XS/mTRvmHYjfVvKQfxZv8Lnnj+SztHc9tuS8g
h2YU5JD2i/YoEeSZ/TMv8XjA3OmdM5WmXydxLvOBXXen2ufbr5T4yXurXtlb
qkuUub0yc9L57kUFz5x0va1Idyf/4l/1PuFxvuZh4Zm41/0xqbYP2i18Et+a
4IclJWuuN2o8pjrytGo8JiRjypOvb2/R4zG1rXtPt9zYp8dj9tofB9Y6EKHH
Y6K7Nhm39UWk9tsNz4PUOM2NueOT7DgSJeNkHEQ+2Q/9ZOoZ1V70j2pvfUQ/
1A/kh7/rWqfkYxVHnRXbc790Xrn3ctfQZ4JzfZmHdK3POSPnfdQzEh+BH9c6
KB9rO/wftufvBk/YNyPV5qeC83fJJ/US+9+HdXGtp/KxsiNPyPbsv9vqpM3e
FQwXnP0vehAYWr/MM3PTIQ8iVw0hD651TT7WZsS5bM/+M3fy79W7yjnB2f/W
7tOyr8/mZzo75FD6fwo5dK2P8rGawt9je/Y/rGk3v1LnbYKz/xXnhi0Lb+sr
8kC9Wn9J0uQf/hgt+5ftuS+UPJhG+F0lD2bUzJ9ODxjmZ5RcmY3Yd0pOTAHk
yV3z80cM41klD2Yj+FTyYBa8Lx50vuNpLVdmFvSAkhPpX8mDuYh8spIHM2ji
nQP5uvlruTIdoH+UnJjNA72HBJQ+qeXBUJ6VPJiPhS513/A8XMuVod5TcmIW
FuzwYdGHZ1oepF5XyYNZ+yzsyt6Gz7RcmT3Qt0pOTETBPRdtZSO1PMg5DteL
9oXyQ3+SftE7zIs47Ugg9i/tS/nsdZu7131qMleflqrrvRvajzIfXe2I5Mmp
39g/46bWOB+hP8y4JgbjUX6yVQd+pvLnTSH47czLMY/E8ybizCPRjq+KXfeU
fpiX2DX6dcTLYb7qfMFqgnNGZWetB8i7cr7sZxL2uzpvkroC1/PBYMk/K3/G
eon4Wvkt1j3E6co/sTYg3lfyIHUgal+LflZ2wdBPU3pJzn1UnYNpg3m51jkE
m9eYV6nYfjJ40P8fdSPx7Kj8kUbV1ZiS4Fn55+YgeKY8UD67gGf+LvNaeSAP
xKXOEPJAv4I8rMN+JE59G4V9R3+D7T9BbomLPYIecK2z9bEuQ49xfdnPCOgx
ri/xJdCfxNk/6zq47mw/BnqeONsXgj5X8zVDwJuar1kEe6Tma9LDPqr5mg2w
j2q+JhvsuJqv6QI7Tpz9/A07rngwt6CXFA9y3q14MPR/FA9yDjvToQdEH2aC
Pnc9Hz9iXe2YKKnX2fM6X22y4bybcSLxCJVfWhj7O//GLZtPN7yR54boDf7u
AsiJynubQrAXSi+ZsA6VRzbyeij7gvFmJ5ybUL8xn3NiZMPa5UKeqvrnG9Yu
2Du2Zz6n02+/lR2+K1x+l+NfUTRX0N/RD/X+st6jfkPtLysKcSJ5pj78DH+J
5xfc1zzXZrxDnOcg1BvkofKcszO6jHaegwj/OO9mP8R5bsJ+OC/GcVx3Xd/i
Kp9rreLIP7jiPlaj0gEVx0fZdX7A7J94dc3akg+1XTCroWe47sTnpL70JGDA
Exkn+2F86ppvCTfZTg7yzd/JeV5P+WH9efbYeWWT+a7dXKXD8UfRym9Za3VH
XtH1fGqt5TM0YP3sszelf+ZFWZ/gWucQZjI39u019LLzdzl+xrlRf6e+ETPe
ee++QNO+lf7nJzSGH8j46EHyBTFfv8HZvnfL9eXf/+/e/bWMp2JiCjvfN6gx
xLz4Bmf7j9FuVfdKnJVf2leMSvC5+Dc420fc7F4i3xfGQbmkfbYCicpHvXbi
bH93bp63L//l82fHekn75f19884bw/P0hIL72otu2DkqQnD2s77yyFkpzzyD
PgmQ9xZ4PlLG0V7i91K919yYWeSo4OxnZ4slLf65dMyUhfyw/exipc8H9/MS
nO2XFr45KvMIL9PIMS9p//Ty/nfz8rcSnO075RtwL1mq3ugnv7SfHFhh7XiP
7ILLewirK/wzO+pnc8KxLtI+cUjV4Vkm3KlKXNZ3SPwaI0olxO8Wl/YP6lxu
eiWJd1Xi8q5C1bZb++e9UhVyJe1v7r2R83C5joKz/a0C44OH+iwhLvUYfrn3
JXj3jbwRrzDrp2onv5Er4lXfeE3r99UpP8TXjGtx5O4bp5xI/6v+rHzpRLSs
F/EhQSu+1pt8UtaFeMDEis2XZdkg/BOv7F3qXOds44Vn4t2OJWg9o3oL4Zn4
y1Tbn08t9KPwSfzogG6Venb8KvwQP93R02/xx3+EH9alLKm37tOib/ghXmjp
irP5vjr5IV7pfqZF2945+SHuky7ZW59gJz/ED96fNSHzH05+iIfvqB3wt+d5
4Yf4hMHFM2abukf4If71yaTLJe/MF36Ipy40/NPkgoOEH+K7Z5prVzc3EX6I
txjV7+epV4tTXwme5lPb4lmqJRc9Rr/97+1zW5T65OSHuEm3sFflF05+iAdf
e/3jb1ed/Og6H/JAvPnJ6Pu5pwUID8T3YL+TB+L9Tu4Mn1Vqk/BAfBn2O3kg
vnHewsR9mg0THuRev+ed6yWm/S48yO/6NDyxo+qvxlVO7FaaQfkadDmn5cRu
TXg0fODsOVpO7NbcP4f4zM6p5cRuTUeek3qV+NSMUf63VocrObFb6fb5np6b
/bqSE7u19ccV66/FnFNyYrde/hE9pG+RI0pO7NYw1IG4zstmJXi+88/oeZFq
XjYVNznrhVjH4irnNquWh3fHhmcfq3nZrA8b3HMdHPRIzctmbfpQ5tXndrfU
vGxW2reVl2dKc13Ny2Y98f99dIZ2AWpeNqnL5by0n8N5aZzrpXHOV+Ocr8Y5
L41zXhrnvP67ff442hf/DqfcxoFL/BI1fvrEyQP26vU1cxBnqfU1s8CnWi9T
LGGPqRPsoXq9zHusr1ovUxPyoNZL6qDU/jLx35+JCro8Wu8vc3d1krUP2s/W
+8u4px6054/+K/T+MgMh52ofmXcYp9pHhvtO7SNjS99loM+yCL2PpN5J6Umz
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
x/56reIX4jy/I+5qZ30s7hepP0F88W7GMdOikbN9A+zH54tCsy5yC5H+n8Tx
u5/i2O84F7PcL0z90ObVLb1PrdPbWmVsNeu29LM09m/LUS3/PL+LY16mFvQJ
8Yw4jyuE3yXOcze///7dyppn+vN6XjiXNG/Am9Jj5uV/8/bdPv2k9Jta3+/0
QMc49APk57v+eU6n5/VC+bFKPr/TA5D/7/rfEYde6qX8Q+L0A3X/2L+iZ4jn
j0O/QT98h9dTeo/45jj0G8+bOE6xm6h7aXPvwYm5R533fYhrPbMd+k2vYxLV
nv4M7WyuM4nKDx4cqe2U1ctjw7L61aP1+a9Vc/D2sOR7o7X9svbO2HfjbR99
r8HfSlA7jW9lvyh9Xizv0ii7Jriya9bJJZkL+UVGavtl5RqXYfe1u7rO1l/e
03Ots/W3wmEfXets/a1g2FnXOlt/i/Za9W92qjia+CmMkzjPzd0wTvW7JiH4
IV4Q9v2TinPZXq2LB/P5NVzXxeM87P4+rAvjF9rrHFh36g3aWcobx18b5yC9
Wk7NPOzwcRnneuTTlqt8Gs9NXq6+GjB/7E7B4yO/l/nmiKdVRnrr/k3zciWr
7Ckcofs3rEtR/Zv4Zxx1LKp/M35Qm7x93zvryVPgdz0VTnsUPrCI+727T3Q9
hnXmYsryE7c56wrWwV7UtLKvu9joqcjtDvX+iWvdtY/1xdapw/trj3Vdh3Ub
eQ/iHYEHAVd5LWs88i3Em4Ln1uDNta7bx3r/6rlbx71hgmfBvLYtN6NmdHqq
2tusM/8ZH/lYSUZV/TVNqwAVv/hY7Su0+nPS5IuaT6Nx8GYiEywcfOnUGV2P
ZDJ5u8gJ18skgJwoPk1ijEfxZlYgn6nqmszfkE+1XmY6cMWbSZPVzVZtqV3n
e83XhI78quLTtJkXP8utsWf0uphG2C+KZ/M0adc3pbrrONfHUE4Uz4byyX2K
uj7z7l7eyZ1OP9X1lqbnupneqcY+E5zn4AO7Tsuzzf+ZPi+zWJ8g+RbUDX5A
/8qfsSJRX6T8GSsP4h3l15n0qJtSfp3JjTiL9oj1qzy/VufgVoVM6ZJ5LorW
deDWUdR10951U3Eu8eTKDqp6A6vv1U5ZNgT/rfWh5T1xwHu/VCd03YJ1udPF
6jvfOu/Vsh61S5VPoalSWjq/Z7EuSOUDrZ0DM6U4PuOpvodipcW9EmVHLHfE
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
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
P11ROqbI+i8vHaNlfa5Uuz2xP/CLEGdFLqwsHa+F51M/gO5P3cE7pXNz+XZX
qd0p/ED2W+n4K799itodwg9Q/7LSsVj2wGelY6jsn09Kx5jZJ5+WjjGzByaU
zklFBqU6D+0z+3sz/GWJ4xRvZs7JZ/wLSuebInfeLp0rzPdlXVifIbnzzIkH
tMEvBZ9NfEYuLZ17OlD4NfDcxPSXlc4r3QcfQulc0n2RR/DNxL6Fj0rHnvlG
75bOXWYvkddH7gix/FdL50AjH58onQdwEeerdL41MmtJ6Xxr+CGxQ2KIh+TO
WyOm+bb6Ximd883e3ip1TiA5Ki+Xzv9m/+MjRj8nR+vF0vninJGXSueRc3YY
izH5Xq+VzttuHr4/fIvc1cm6vi2xL+jL0vFsdIAP1PpkrkF7r3RdHHv4/dK1
auzhF0rn1iNPx5fOD0bW31e65uoC4U+VthPQqe4pXaN1fu4c3XOJN/Cb1P5J
XEewKOwx/ACXlM6NRjegpoD6nQ6F8//3x+clfHbmPGG+F7lb5Bt+UzrHER8V
OT+cCeJm5O0cF87niMx1N8TQmAe5rORyTCyss6KLbosdmju2R04UOazkfkzA
ziidR/KN8Mm54x7E98kB3gh/T+H8ZPjwpsJnZc4zZI/dnzl/lX2Inx1/Ozl+
+Grx2ZIHSL4CMTPy9PB94wMnJ5C8BGItpxWur4EvpZlr69AZa1adG4pPi1yX
GoV1XfLlyJ3FB0ZuDLp1d3hs6noc9LtaejYuHKOuK/ze0jV443X/ptJ1bsfm
ztfEN0kOVZ7YX0X92sWl89fR8cglxe93pPqKxL4u6truLl0Dcx66XGLfFXV/
k0rnx6MTXlQ6Rx8dlToRfK6teZfmdHfi8zKxdP46eia1G/ilqMG6sHTOOnoj
uZvkcJKfVk3MQwakzksgpnKm+m8U/QOJawlncG4T129SYzCh4t9LHjX+ik1E
XzuxzKXuj1wK8iLOLlybQD1gM/xRpXP0x6nvttJ1PmcLv6N0vv45uWvV8OuQ
23NX6dz9c9V/e+lc87HsJeEdUtvd5LKsz4lFvgd/K2u7fer9hi7apWo/ywbh
PJFbQi4s+czkFZHL1bVqX8lzGufN0jUhyN85IYb0WWq9mpqwn0rnHmMvk9v0
UIhdfZzanseufwH/QWrblPhm/6p9H38Wzn1to3sR8a/StR/ofsRYv1D/r6Vr
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
PkMjwf8DIo3h5A==
            "]], Polygon3DBox[CompressedData["
1:eJxFnAf4j9X7x5/n88wvkoy0S2W0hEJDoRIhIm0tpUGKFqKQ9kCKSEuUirRQ
SbSVdmkoaRntKC0N//er9/lfv+v6Ptf33M99znnWOfd53+/7Pp8Gfc7reW4l
iqIn0yjSX3REEUXPxlH0sYQdqqJo6zKKXpB8v+QGkg+Tfo7kBZK3k7xW8gR1
8KjOna7y7lkUnSD5T/U1R3VOkjxR8jOS30ui6EOdO1/l51X/I5VPVJslKq9Q
uaH6a6H6fVT/O9V5Vefa5lG0k8pLdW647mWN9DdJnqu+Xpb8vuSFav+W6m6v
9ger/i7Sf6T6I6RfrPN9JM9XnVfoT/X7S9dT5/7Q/994bv1vpWNz6V5T++1V
d3+dT9RfRddpLPkb1b9D5Vek31Zya+kr0neS3EK6z9X+Cl1vb/Vxmso/6dy7
qvOCjiN5v2rzosp19LwXqfyX6ixU/c3U/lnpP1Dfb0tuJ3lnye9Lf6nk49Tm
ENW/Vkd91VmELP08yc+qfLyuN151d5N8kOQD1X5H3rXODVP773W9MSpfqXPf
qdxF93y+2ixV/W1U9wedGyv9YZJ3VXkLnVusust1raVq/7LkraVrob7nS16l
/w9J/6bOrVb5QfXVSfKNqv+E9LXUx/nS/a4+F0ieI/3B0v8u/XeSf5I8RnKu
tuskN1T/70teI/2nksfr/ES1P0bHQJW/0bFA+rclf6vyj2p/o+SzVa7GeCn8
fp5Q+60k95L+Ol37ItU5XnWaS99L+nnSbyn9N5Kvl/4E6aboeuP0f7z0R+g4
U+Wbddyq8rE6zlf5efV3qvq6Xe2fUf3qaj9Auu/Vx5OSz5D+TpXVdfSS/t9E
H9L3iH2Pm6rOV9L9ovZrVN5U7QfxfqR7WvIpkl+X/KXkRurkZ8m3V/zOeHd9
ddwh+WYdJ6q8QfUKlZm0+/BNVP84lW9UHx1Vvld19lbb9bre1+r/BJ17VbqH
VXdn9X+J3vdM6ZtLf4/0O6n+MMkvq87OKu8q/WuST1f50DBWHlT/s3XMUx//
cD/SV6n8i9oPU/1Zkluov2mSV+t611bc50qV16v+LZHfZQ3114z3Kf2Xweac
Xvr9Hsg8lH576S+R/KLuZweVn1EfvVX/Ecmnqfyrzk2Q/kLV30T1/5SurnRr
dG6C7uEp1TlW567XuSdVfkD1O0p3g3TzdK02zF/Gr+oMlbyv5K0kvyL5YsmL
Ctuf5pnv53f9nyH9s2q/WPpZql+o7+10/b8kn67/h0seq2NL1Tlc+v0Zz+rj
GukvUPuZ4f4zlbtIv6/0q3TuKunPU/ujpZugY3u1P01yF5XH6NhC8p9qc7/q
P4ftUf2uar+f5NVqf7XkrXW/l6ruRsnPSv5B/6tJXqU616lNLR1DIs/vPup7
L7Wvgz1UvUGqf7b6v0flN7BhqntrZvtTV3V/l76e6r8k+WPp3pW8DzaB/iSv
UHmD6j+APZf8quSUOa/+DpL8kcp91U83XXucjq0SX2+a9KdLPkvlx3UcxPfX
/zZ63+eq/lHS3cI7Vv139HyDVb+T9B+qv7G6n29V/x/pnpdcqv6vko/EnjHH
pX9F8qcqv49e8hN8b8mvS95K8quSV0j+QPI26v8ytU0lvyh5qfRNJCeSX5Dc
QnJtxqruYWBpe8DasUH6HyR3k76N5K+lv1bytupvBN9a+pck/yb5Lum2UJ1f
Vd5R9d9hbkj/CfZD999d9W/SsbXO7SD9W9J/qfIy6efreodJbhXWmwbSvy35
K+k/lv5p6TtL3i+sV1XSPyn5LenfkL577vbrdA/XSW4puZ7khZIvkHy42u2v
a1+po4n6qmCXpd9Lcg31kTHPJR8kua7kNmrzJjhB5a+YP2pzJgACm6i6X+kZ
r654Dn+h8gGln6eH6q9U+S/sieQXJC+RvF/p79VF8ucqVyvd1/6q94fK+5f+
Xl2l/0Ll+rnH3yeS30MveRvJr+uaQyR3lLwH65fk0ZIPlbw79SVfLvlP3WOu
8gAde6tcW/rnpP+QsSb9IZJ3lbxM+pGSD5O8F8/CGiq5g+TdmA+SR0neXH3E
YBkdT6k8TfqKyj+p/CfjRe+gsepfkPh5Diz9/XpKXsV6Kv016ms/tdlJ5U11
frD0HSWfRH+Z8cW2wd78ozoPhfnTRuXqut586d9Ru7ekr6tzF0v3t+osktxD
+i6sP5JvYDyonwOkv0pHHbU5Ivf4+RmbCX6RXFfyAsnn8z0kP8X6q7pvSu6v
+7lXuuU694PO7Qc+UHmJzg3GnumYwfrEuNR4HKH/fNKJuu62klurfn3sGWu0
FDumtlcrdDzHt5F+nvRvqO/XsDeSt2R9Uv2O2GM9332MLx3vqVxN9c7DfrCG
q/1WrCMqf6LjGZW/VZ0bwGbMUdZH+lSbxyQn6vsQ3d950u8AJlP9NpL7Sb4H
vFbxOGQ8cu4Alaur/Vl8L5X3r3J95vbZQf9CYXzZNtizS1mz1P5O1flX54az
Jkr+Iqz34Dvuraba/M39M8ZU3k5195X+TtXfW/JOrC9g5cL3y323lX5uZjzI
u9tV8vFqv0TyE5KbSO4MHlXboWrTlfUns35IkHdU/QtV7qByO66XGst/DH5i
TjL/Y9vYR7HlOjesYhvOekF/9P1+7GvOT+0fNIo8H8BzN6u8qer8G/AVeGAz
bIbabsv6q3JTlVvp+nfp+VpSV0dryTV1fg+Va6jPtWrbEpxf8RxmLl+h+gO5
P+az6tfJ/K54Z/Uy90N/LXTcpvudovp7qtyA9VXle3TsI3lL1d1H7a9Tn2dE
4Ro694vkmqwHkn9NfQ/cSyz5ZzCI6jRRuTPnGOs6zlL7Ekyo8lj1X1vlROWW
+BP6X0fyJNa41NffV/JJajNV5WcYb6HvvVT/Pmyo5DN1errKjXQ+q9hnwXep
nfnZuEfudYvU6+nGYIMi7AFzR/XaM15TP29r1iQwXmb9RToa6/10lr6/mh0i
eVv0aj9TfbXU0UDlRzRePpSuiepMzoypVoJFI2MtfACwDRgH3wCMvA3zOjZ2
vk/fO2F8YYOYf2A0lZuC91RupWOyyner/Vrp95F8m+SprGGSHy3t2+Hj3ab+
54KveR7J90t+uLTvgw80gWdT+69Zm1gD1P4iyWuC/J7kN3Rvq4M8jXcn/YzY
9qC+yrNKr/1ggGvU30CdWxnbP31X7QdJXhXkj8HWqj9P9TeTfJXqHyP9dSo/
pne7k97/HOk/A1/q3D3SPyb5U8l7Sr4LPCR5heRmjAfmq+7pHPAWY1ZyL/A1
c1H97aj+Pkjtrw/SufeZu9J3Vt2Z2GbpZ+rcvtJ3qRjf48fjz69V/Rmp8T+6
rjyj2vRU+1HSPZTY32+ND8J81Lnaqr80sz/9usp7SP+A/rdSf4dWjNePy+3f
Vwc7VBnzgn17hzm+i44jVO5eMd4Ak4BNOoXxMhH/J7bPN0HldurnlIo5BfiD
e3W9ReF7TU/tL3Dtjrxz6bvq3ADpDpfcMDO+4VqvqM1DPHtmf/wllXfT/f3D
u67YxkxW+00z2wZsxGaZ1wTGQoMwnz/XPV2h8hHgVrW/VfI2rEeqc53KP+oY
J/k47HKV/yNjI2qovFtmLI7PfWx43i0rttH747uk9l3xYY/M7KfiryLj2+JP
YC9fV53PdL8nS3+j5B46dpVuu8J8ALxAB13/18S+5GSd66NzvTPb9lsq9ifh
a96NzdHA1Vyv/kbzLXUUkk/RMUnlW3WczPtMXMan4frgv39ir+n7ZLbX2K/e
kd/nL4X9177Bn/xO/f+t+pszf1WeBCaWfqjkDoX5Cp7naNU/WPX/SIy3p/CO
eJeF7Wcl2NPtcvsvF0nuBP+jPu+X/ICOgTr3Z2H5vIBHwCXgkw6x+QHwDFgC
TDEgsz3HXl8V+XuBN1jvWPcOU/ubJNereMyv0LVvKLy2scZdX/iaXHtUxXxM
d7V7WOWpOr5I7POA3R4K97yhsH+Nnw03g9+E//Q4a2pinxvfm29wquqk4A2V
H9b1Fkt/i9rXZ7ypz5sLPz9c0GM6d7Hqjim81rLm3ljYH4GvODsxnuqT2F7V
wv7k9gnnB3t3SWbMC/YFg06UPFl1fsee4XeV9qHxpcHgV0g/k3ugf8kHY9uZ
w5J3x79V+RLwb8U++MGlMTvYHQw5OrNPgm8CBh0ueVZhX+LBxHgITAo2xYcd
lhkngZdYn1ivHlT99hWvwffj26l+ndT2q2SsZbaP+8S2p9hLbN8Vkh8pvH4z
16/U0RMMloa5UDH3Mg8+ifmo+nMLc5JLw3pzbWbOjfWnQVgvRoT1ivXyhsyc
HtwenOZ1mecsc/fiyHgfDA2WhpO4XLqHJL/DfJQ8XvKFklsxhnTu2cIYGizN
fLpM51/FBvNuAz6ckRsPL9NxRW6fBd8FH2eM6vwR/CEwz92JfSZ8J3ymcdJP
z+z/1A/+DD4UvhQ+0NjMnOfnYT1jvb1M9/RHbI5wE13vqsJ4pVHgu8ArFWxP
ZDw2ujCWAlNtUtjnWhbW9xszczJwM/gAoyTPLmzrR3ONwj75k2G9HZKZUwF/
7BPwAfgQ7AY+qlnYR8dXh6O5IzOHApcCXpmSmbOBu4FjuR37l5vLqh3W0ysl
r4xsS+HXZut4N3zvW3TuZT3nF7H54ntS3wP3Mioxdpmho21inw3fDQzQjrGS
GBuw5reVfHViLICfgb8Bh4APdD/+QWKfFd91UeU/iPffeGipupvqmhvwR3QP
l6s8UseZcC06Rqn8AD4x3Inq1MmNOQ4EqyTGIvCU8JX4tB+oz1R1prPe6/x9
0t+tYyeVb9O576SbKnlncLXkY0pjQrDYyMRY8XfV6R3b55mY+x2BbYYlfneM
GcbO8MTY7UEdRybmSOBKGPNgo0sSzwXmFO/6vMTYjLHP2jM99noC5mKunJsY
i/GNGctXJv72+MD4wvi8szKPYWzXkMRjG/yM/36O6rTL7BPjG8OhzMw8Jhj7
VyQeK4wZ5tLoxGOJOYUtG5x4rrH+Ml6qsDepeUP4w3PhXML4YKxfnnjsjtfx
b2KOaxnvS3JNyRdK/ojvJflUteuEj4OvVNiXYE1cI/3N0m+i+heo/geSJ5Tm
FLAvR5S24dieyxLb9omlOUI4hx6l5zy2eWiwBXwfbNulief6Jrr2H5Ex2oTU
No25eVFiW1c98MvvJh7rFca45CWSp/NshddD1sUvJe8i/TLGUuB3emTGV/gD
26h8dmlb3jPgraaqv0LyT4F/equw73KXzr0JdpD+a5X/Cvxcg9K+Kzzhz6X9
XPzdcTq3LVhG9X9TuVrgs5tI/kjyt4GP+lJ9XhXWix1V/gC+VfIwye9jT1R/
dWRsQnxjGfyf9MPhhPA1pf9M+rWB/yoKz8cR+B2SG0v/ofTfSP+Z5GaSP5e8
LvBDjSR/IPnrwLeCP1mbLlcfn9FXaVuCTYEfnZL7+/CdfsP3Ks3fweOtLf2c
PO/Jan9J6jm9L7Ym8lzHpsCNfJTY1pyUmOuZrmv+qPLfzAHwc2K+v2ViLHKi
+nslMb+HLXgxcXyhFXaAtU36V/kmrMWx7Qvc2cjctqhDuB59EktgDHEtbBT3
tiyx7cLGV3jfiW3/YZn5YTgNOMKtVf9pxqv63kzjZWRhvAnubF5ljhI+h3v4
MfU9EguBk+TeT4SXjYwJfwhjtjW2O/JY3jHc76rEtgoOaZrk1xJzS6xR1ST3
S7x23VSaozpX597OvEZjr89MvHYTUyIOCcaFWz6j8Fr9dOr4KnwK3CI2+S5s
eWHfuaXk+1R/eer46UjJn6SO0a0L9orYHXEf4j/XR+bfick15t3EjtU9JXlt
xf5X59J8D/GosZI/U/nq3LGEu+HSSnOKzeGpYnONt0neHNupOl8EvLQda01s
/wG+ZhvuLzafQsxzT3iK2LFQ/KGjKrY/xCeIJ8MlEYP6qXCMDh8IvN6kcPzo
A5UbSr9n5hgmvuKggJ/BGGCNWrFjbWAQsMganWtW5RjJASo3jB07gePfyLiM
zP0Tv/1GuoGS91L5XtVpU7FPhW91CT5e8J9X5n7/a2PPsUdSxxDa6f8usWML
w3SsU/nT1PHtlwqvLcT4XiwcI2gPdxc7dkBMI04cEyPWMUTnvosdT/4qt7//
fbj+falj4PXC+yc2ToxqB8mTIseuHs699nyKf5o7RrNjWL+J3RBTaiB5cuRY
05Kwvk8J8+E3tTkhNoc5Ca5c+gifXP/eAZsU7hsOEi7yzdz82z2qM0Z138jt
T0+VfCP2mvi25GmSx4IXwv3DOYyXbpzkqsQ+/Du565SJORDagrHB/oMSY2/w
AL7KwMTY+1bWkNR8cEO4BPCE5Lb49Pg+kk+UfKjkvQqPWdbKhxOPZcYY2P6o
zGMPjI4vcn5i7A4mBZtfnBir8oxFYs6MZwezV1e5f2Isjw+DS3xGYt8GzA6f
0jpgeXysBPyW2PfCp8FE9U3s6+AT1ZB8TmJfiXeYq9wv8rvFp+mv+x2d2tfB
B9tEugGJfTPeKfGc2YnfdX/V/zz2Gvm0dI0kXyP5Rnzx0u/sask3pH6XO+h/
KfkC+LrUmAnsPC4xltqtcKxydvCHyZsgf2KojmtTczpg6zGJuR7WZa7dKHbM
F0wF1h6bGGuBeZpJ1zE1FmIMMFenJx4b5F2QfzFExzVwpKnzEwbruDo1X8B6
XEfyrqkxKvG1pxNj1zt0HKXz7XSuWeGDeD1xe3Q/5o4lMmdvyf1OYul+jPyu
GDPkJ8BlM5bAWMz1+xNjLzAac/mBxNgNjEY+AYMA7MYYJN+AvAPG5rf4HJFj
vl/nzqGBf78jNX8/PKzHrcNa9HZurvjSYL/ep03kGCb2pp7aNFaf3eAQJG9e
5TgP8Z6dJZ+u+iMif3OeZ0DufIrxYX6cJvmyyGOAsfCh5L6RY5rYp7rqr7v6
v1z9rygcc+Sb43MSi9yge9w6NV9A7OpTfPLYHC98wEG5YwP3Sm5XOKbJNz02
cqyTNY+1j/WNXKNzc+eL3By+FzkexMmJl5P7cX7ufIBbAx4mRgbGbh+uT84H
cWTiyeSCbFHlOCvx1qaF1w9yYeDg4Buvzx2LIib1iMqNiUHAwai/mrljLMRa
qHN24W9E3IM1i2+3CzkciXMw+hZeP4lF4YPfnzvfibX1NcknF14TWBs4h66o
cg4AHO83uv/6Vc77If+nceF3wruZK7mLyp0Ll+HU71X/p0p+Iw42O3d+CbEn
zvVReVBuLmhisH8nFb6Xnjp+yB2TIjZFG9qSEwRfOSt2fkn/3OXGel+Tw/fE
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
chLITeA3tMh3/j9s5nKC
            "]], Polygon3DBox[CompressedData["
1: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
nlLfp7H/0l/irJadnAt2indQL+yD2OvjDBprPtY2zvF8R92/Sr8qe17/iuMv
8RSI+a/9l3kaxNoWa5BYcWpsfAf4rNjb8ZHyL/A8jH3h/hX6JX4bxPqHzeSr
xPcQfj6d9Dv6PyP2JqxdnBGzk7N5jzjXxZlXfJzvEb5bYozpFr668u+Uty4j
+e022p+l2cmaXiLeE1/nOE/zbclM3m+854vKRmHvi8vRHOwCVpZ3Q2bSv+hn
fXUN4FslvjTOhHxH+bqnk3Pfpti/xB/Tq+nkN0v8dimr3dXibOUDY93MSM7l
cT5fHd90jAdegu/GWF//OFPE2aJ57D9YF/kLeC7DaiibJffLOH/K7RTPRV1i
/cLGYF3EXUNYX7kr5HbISvyRdyrWA9epcT5V32nxNr76sQ6I2/FtF69JJ79P
4ndKOWWvxdwNrr6OWUlb0ebOWCvj3fK1x3bFekr9+d7JSM6Vcb5spT+l+Epn
Jc8dz58Zv+FiP6U5xqWReFM6maMxV2vEviJuQ2Nir4wxjW8y6sMeivmClcSm
YS3jbIftwK7EpmKtsZFx1sCuwp6NvR67F1uPFY7zSfxO0XajyHN/Y/RRf5vy
3cP3Nl6I78lLkvUp1qn8PAWoRZzL0snvp/gdVS3O1RHTg3J3xTeo7Jk4k2H3
YRsyknU11tc30sn/F+L/DOXlvhnnS6qFfRX9iXNhnE0ptzH6HjunjiniFrF2
xB6NFed/OvYlrF+cozL+f+xPPRxnGn1ci5WhGfFt8vwPKSgUdQ==
            "]], 
           Polygon3DBox[{{1490, 1489, 2111, 1021, 1022, 2112}, {1626, 935, 
            1023, 2113, 1494, 1495}, {1621, 932, 1085, 2125, 1487, 1488}, {
            1627, 936, 1088, 2126, 1496, 1497}}]},
          Annotation[#, "Charting`Private`Tag$149504#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0j9I1GEYB/DnLL1MU4doCYxqEEsTQWippUnwprA/d6amQ6SDpi7eaMs5
uERQtJwuNQThYkSoFFlEZQiWZtaZra5BBBL4+SHce5/n+b7v+/t/sn/48lAq
Ih4ZZ8siknrX3y7z5RF1LPAE7/McZ3iRs8xwOR1xx95T9rWyS/ZZNqJukS1b
Nyg7r26Xbenz+lF1RjZvbU49Kdsx95D/+ITpiojnPMa3rLD2lj091n/RN7Ko
7zwQ8VV/hWu8ynVe4zde5waz/M4cN9nFG8YPdTd/socl9nKLN/mLfdzmxMGI
287Z69y/9Wc4ndy7a1zVn+YSj3KO5XzMv+7pAces/yPL2jNrFJLn774a5FP6
cX3JfJv6qVGyb0BWZb5Zf4kfZTnZAjv4jBdYZDPvsT55V47zn0321PI4Bx1j
hTXJe+IRfmI1P7CK73mY71jJJb4xDqlf0+XGKzp8LNLpYp4eTbykRxUv6Bd3
hQOp/e9rD42cTF0=
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1401, 1695, 866, 1400, 2160, 1586, 1402, 2161, 1587, 1403, 
        2162, 1588, 1404, 2163, 1589, 1405, 2149, 2164, 1984, 1590, 1406, 
        2165, 1591, 1407, 2333, 1853, 1854, 2055, 2332, 1408, 2037, 2038, 
        2375, 1592, 1409, 2166, 1593, 1410, 2167, 1594, 1411, 2168, 1595, 
        1412, 2169, 1596, 1413, 2115, 2170, 1597, 1696}], 
       Line3DBox[{1415, 2056, 2219, 1414, 2057, 2220, 1416, 2171, 1598, 1417, 
        2172, 1599, 1418, 2173, 1600, 1419, 2116, 2174, 1800, 1601, 1920, 
        2353, 1855, 1856, 1602, 1921, 2354, 510, 1698, 2058, 2296, 1986, 1985,
         2059, 2363, 1420, 2175, 1603, 1421, 2176, 1604, 1422, 2177, 1605, 
        1423, 2178, 1606, 1424, 2179, 1607, 1425}], 
       Line3DBox[{1427, 2060, 2221, 1426, 2061, 2222, 1428, 2062, 2223, 1429, 
        2180, 1608, 1430, 2181, 1609, 1431, 2295, 1697, 1801, 1610, 1893, 
        2345, 1667, 1701, 1866, 1867, 1865, 2334, 1894, 1668, 1703, 2063, 
        2279, 1432, 2064, 2224, 1433, 2065, 2225, 1434, 2182, 1611, 1435, 
        2183, 1612, 1436, 2184, 1613, 1437, 2185, 1614, 1438}], 
       Line3DBox[{1440, 2066, 2226, 1439, 2067, 2227, 1441, 2068, 2228, 1442, 
        1705, 1706, 2298, 1443, 2299, 1708, 1709, 1444, 2297, 1699, 1802, 
        1700, 1445, 2280, 1669, 1702, 1670, 1895, 1446, 2139, 2282, 1671, 
        1704, 1672, 2281, 1447, 2069, 2229, 1448, 2070, 2230, 1449, 2071, 
        2231, 1450, 2186, 1615, 1451, 2187, 1616, 1452, 2188, 1617, 1453}], 
       Line3DBox[{1455, 1713, 1714, 2300, 1454, 1715, 1716, 2301, 1456, 1718, 
        1719, 2302, 1457, 1707, 1803, 2232, 2117, 1458, 2118, 2322, 1804, 
        1710, 1459, 2364, 1987, 1989, 1988, 2034, 1460, 2283, 1673, 1711, 
        1674, 1896, 1461, 2346, 1897, 1675, 1712, 1676, 2284, 1462, 1725, 
        1726, 2303, 1463, 1729, 1730, 2305, 1464, 1732, 2233, 2122, 1465, 
        2124, 2234, 1734, 1466, 2306, 1736, 1737, 1467, 2307, 1739, 1740, 
        1468}], Line3DBox[CompressedData["
1:eJwVzDtSAlEQheEm8BWACoqkxoaaKqWJWiaWK6AIfbEHQDHR3ViFCgyKMDK6
FV2D3wR/nT5/973bzdbFbSEizpEtRBwuRRxhC9/IUF+JmNtlixFV/SDv8iuH
T/lN8z6fyhlS/mw5IsGGPnUz4071ESrchJty4d3YXOYS+cn9uXkyD3DDX2PH
3cTu0nyFN7tH/Lr94IeyhnfzK7/upuLNCTfmjuUAa/yLfcLdme/zv/hV2edH
fEPf87bLlfDMD/ldrq13UMQDevjBP638LYE=
        "]], 
       Line3DBox[{1484, 1741, 2189, 1618, 1946, 1742, 2190, 1619, 1949, 1743, 
        2191, 1620, 1952, 1745, 2192, 1621, 1488, 2193, 1622, 1490, 2112, 
        2194, 1753, 1623, 1902, 2140, 2348, 1905, 1754, 1869, 1624, 1868, 
        2141, 2350, 1910, 1755, 1871, 2309, 1625, 1870, 1681, 1756, 2310, 
        1626, 1495, 1750, 2195, 1627, 1497, 1752, 2196, 1628, 2010, 2041, 
        2378, 2159, 2040, 2049, 1629, 1955, 2128, 2197, 1630, 1959, 2129, 
        2198, 1631, 1757}], Line3DBox[CompressedData["
1:eJwVzrkuRHEUB+AjsU2nUBjLDA+gphNbySReQEwUNEYsD0FDpyCEIJaHsFdi
nTtjMINH8d3iyznnd8795w4USzNLTRExS6MlYrwt4pIJ+vnlj7FMxGJ7RN3N
mfmCc/IsyDvtf/QNvt0cq6eckGPSvp7u+LIv+OaBPvNHa0RNNm2+p1dWkVVl
o+Y7EvM2FVneW2tu1inLVtUVBuWJfUm/zLvdldosn/dG2W5Ldqsf4c18o2Z5
0U+p1/T45tXds+xQf8SwN4p23foan+l/8+RmTj5kf2DeJ5v+P1USHt10sKff
pYtNdthI3+AfBLA5tw==
        "]], Line3DBox[CompressedData["
1:eJwVzrkyxEEUxeErsD0Aqkj87SRiQmvKyJUZ+6gitDyGxOAV7DsPgxnGzjP4
OvjVOX3uud2dFTZy6zURkcdjbcR4fUQJE8hwjBO0NkQMNUYc8WW8oIIOnOEc
w+ZzdRGn/CveUEUn5u03mV/yeZ2LdA/tos3yAv/k/ZzeHrrTjuxZNuJcQo9s
QbZJZ50H7W2lv8im6SKdou3ybbqT/iGboW36mTzH78r2nZdo2f0H/DJf4au0
V6dFd4V/5z/whU8c6vbRa9xgVeeKfuMHo/aKOv38He5R1Lmla/Ix8z/+FwOY
xEOapT/Rf7kCNtM=
        "]], 
       Line3DBox[{1514, 1768, 2078, 2311, 1513, 1769, 2079, 2312, 1515, 1770, 
        2080, 2313, 1516, 1771, 2208, 1651, 1517, 2135, 2209, 1652, 1518, 
        2314, 1772, 1653, 1519, 2289, 1685, 1781, 1889, 1890, 1888, 2342, 
        1916, 1686, 1783, 2081, 2290, 1520, 1998, 1999, 2082, 2368, 1521, 
        1776, 1846, 2083, 2315, 1522, 1777, 1848, 2331, 1654, 1523, 1137, 
        1655, 1524, 2316, 1778, 1656, 1525, 2317, 1780, 1657, 1526}], 
       Line3DBox[{1528, 2084, 2247, 1527, 2085, 2248, 1529, 2086, 2249, 1530, 
        2087, 2250, 1531, 2210, 1658, 1532, 2211, 1659, 1533, 2291, 1687, 
        1782, 1688, 1917, 1534, 2143, 2293, 1689, 1784, 1690, 2292, 1535, 
        1791, 2000, 1792, 2369, 2150, 1536, 1785, 1847, 1786, 2318, 1537, 
        1787, 1849, 1788, 2319, 1538, 2212, 1660, 1539, 2213, 1661, 1540, 
        2214, 1662, 1541}], 
       Line3DBox[{1543, 2088, 2251, 1542, 2089, 2252, 1544, 2090, 2253, 1545, 
        2091, 2254, 1546, 2092, 2255, 1547, 2215, 1663, 1548, 2294, 1691, 
        1789, 1692, 1918, 1549, 2352, 1919, 1693, 1790, 1694, 2343, 1550, 
        1793, 1850, 1794, 2320, 1551, 2050, 2051, 2380, 1552, 2093, 2256, 
        1553, 2094, 2257, 1554, 2216, 1664, 1555, 2217, 1665, 1556}], 
       Line3DBox[{1558, 2095, 2258, 1557, 2096, 2259, 1559, 2097, 2260, 1560, 
        2098, 2261, 1561, 2099, 2262, 1562, 2151, 2263, 2001, 1563, 2321, 
        1795, 1851, 1942, 1941, 1564, 2379, 2042, 2043, 1891, 1981, 1982, 
        1980, 2358, 1565, 1796, 1852, 2045, 2044, 2376, 1566, 2053, 2054, 
        2052, 2264, 2156, 1567, 2100, 2265, 1568, 2101, 2266, 1569, 2102, 
        2267, 1570, 2218, 1666, 1571}], 
       Line3DBox[{1585, 1799, 2278, 2137, 1584, 2277, 2110, 1583, 2276, 2109, 
        1582, 2275, 2108, 1581, 2157, 2274, 2046, 2048, 2047, 1580, 2158, 
        2377, 2039, 2003, 2002, 1579, 1371, 2033, 2036, 2035, 2374, 1578, 
        2031, 2032, 1892, 2344, 2138, 1577, 2273, 2107, 1576, 2272, 2106, 
        1575, 2271, 2105, 1574, 2270, 2104, 1573, 2269, 2103, 1572, 2136, 
        2268, 1797, 1798}], Line3DBox[CompressedData["
1:eJwVzjlSQmEQReE2cNqBUhqoGOEs7sEYAQGnKmIFJXUJzkCouBBylqGWCpgo
VLEBP4JT9/Z53X+9pXI1U5mIiAxGUxGN6Ygm6thDn3sc99mIB1kzp+XrTEQe
9/odrvhd2eJyuNVvcMkn3O7oPf1nMqIq57ltbqD3uY6bRfT0oVzAn29NXNtb
tX8iz3CK3/G/YmCv66aib/Ev5iy+uQtuk3s2H+CLO+fmvLXBf+oleYwjJPl1
+cEfyhVzURawhnc+K5f5vMwhhTf+Se6jjX/5dyvr
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{695, 867, 2160, 696, 2220, 879, 722, 2222, 891, 734, 2227, 
        903, 746, 1060, 2301, 914, 757, 2356, 1268, 1269, 1267, 1298, 922, 
        766, 2359, 1300, 1301, 1299, 930, 2190, 775, 1099, 1313, 1314, 939, 
        2362, 786, 1315, 1316, 1195, 1196, 2339, 946, 793, 1124, 2312, 953, 
        801, 2248, 961, 814, 2252, 974, 827, 2259, 987, 840, 2269, 999, 853}],
        Line3DBox[{697, 868, 2161, 698, 880, 2171, 723, 2223, 892, 735, 2228, 
        904, 747, 1061, 2302, 915, 758, 1271, 2235, 1062, 1270, 1302, 1303, 
        1306, 2360, 1305, 1084, 1304, 931, 2191, 776, 1100, 1317, 1318, 1319, 
        2325, 1321, 1320, 1101, 1197, 1198, 2340, 1199, 794, 1125, 2313, 954, 
        802, 2249, 962, 815, 2253, 975, 828, 2260, 988, 841, 2270, 1000, 
        854}], Line3DBox[{699, 869, 2162, 700, 881, 2172, 724, 893, 2180, 736,
         1051, 2298, 905, 748, 2232, 1052, 916, 759, 2236, 1063, 923, 767, 
        2240, 1085, 932, 2192, 777, 1102, 940, 2326, 787, 1103, 947, 2328, 
        795, 1126, 955, 2208, 803, 2250, 963, 816, 2254, 976, 829, 2261, 989, 
        842, 2271, 1001, 855}], 
       Line3DBox[{701, 870, 2163, 702, 882, 2173, 725, 894, 2181, 737, 1053, 
        2299, 1054, 1157, 2322, 1055, 1056, 1158, 2323, 1064, 1065, 768, 2241,
         933, 2193, 778, 1104, 1105, 2199, 1164, 1106, 1107, 2204, 1168, 1127,
         1128, 2209, 804, 964, 2210, 817, 2255, 977, 830, 2262, 990, 843, 
        2272, 1002, 856}], 
       Line3DBox[{703, 1333, 1334, 2164, 1335, 1042, 1043, 2174, 1155, 1044, 
        2295, 1045, 1156, 1047, 2297, 1263, 1048, 1344, 1342, 2364, 1343, 760,
         2237, 924, 769, 2242, 1021, 1022, 2194, 1095, 1024, 1025, 2200, 1165,
         1108, 1109, 2205, 1169, 1129, 2314, 1130, 805, 965, 2211, 818, 978, 
        2215, 831, 2263, 1352, 1353, 844, 2273, 1003, 857}], 
       Line3DBox[{704, 871, 2165, 705, 1178, 1259, 2353, 1179, 1180, 1327, 
        1328, 1208, 2345, 1010, 1049, 1012, 2280, 1378, 1013, 1057, 1015, 
        2283, 1379, 1016, 1066, 1018, 2285, 1019, 1086, 2308, 1329, 1330, 
        1225, 1227, 1226, 2348, 1096, 1331, 1332, 1234, 1236, 1235, 2351, 
        1110, 1027, 2287, 1028, 1131, 1030, 2289, 1031, 1142, 1033, 2291, 
        1034, 1146, 1036, 2294, 1037, 1173, 1149, 2321, 1354, 1356, 1355, 
        1207, 2344, 1181, 1182, 858}], Line3DBox[CompressedData["
1:eJwV0LsrhXEcx/GvW/EPGBRxioFIJiabks1yBuQQm4jF4P8Qk1uZXaLcOa4D
xUC5369hs3ud4dX7eX6fZ/k9Zd0Drf1ZEZEinR0xmhtRXBAxpuPU50U08O35
lzrbjxaywioTrFNiW9MiNtjkKz9iUrfZIsEOlb5N6xR77FLFfqa2A53miEMa
OabadqIznHFKjbNmPeeCWa4odX6pSa65YY47ym232sc9D8zzRIXtUYd55oU/
91jQN14Z4Z1a337oYuaufLLEoH/WYhvSZe9dmqKTHppsvdpBO205Ef+/YT0s

        "]], 
       Line3DBox[{709, 1382, 873, 2375, 710, 1338, 2363, 884, 727, 2224, 896, 
        739, 2229, 907, 750, 1068, 2303, 918, 762, 1069, 2304, 926, 771, 2243,
         1023, 935, 2310, 780, 1026, 942, 2201, 789, 2246, 949, 797, 1349, 
        2368, 957, 807, 1350, 1351, 2369, 1284, 967, 820, 1148, 2320, 980, 
        833, 1396, 2376, 1397, 1384, 1385, 992, 846, 2377, 1388, 1389, 1387, 
        1005, 861}], 
       Line3DBox[{711, 874, 2166, 712, 885, 2175, 728, 2225, 897, 740, 2230, 
        908, 751, 1070, 2305, 919, 763, 2238, 1071, 927, 772, 2244, 1088, 936,
         2195, 781, 943, 2202, 790, 1133, 950, 2329, 798, 1134, 2315, 958, 
        808, 1144, 2318, 968, 821, 1399, 2380, 981, 834, 2264, 1383, 993, 847,
         2274, 1386, 1006, 862}], 
       Line3DBox[{713, 875, 2167, 714, 886, 2176, 729, 898, 2182, 741, 2231, 
        909, 752, 2233, 1072, 920, 764, 2239, 1073, 1272, 928, 773, 2245, 
        1089, 1357, 937, 2196, 782, 1112, 1363, 944, 2327, 791, 1113, 1276, 
        951, 2330, 799, 1135, 959, 2331, 809, 1145, 2319, 969, 822, 2256, 982,
         835, 2265, 994, 848, 2275, 1007, 863}], 
       Line3DBox[{715, 876, 2168, 716, 887, 2177, 730, 899, 2183, 742, 910, 
        2186, 753, 2234, 1074, 1075, 1159, 1345, 2365, 1076, 1273, 1077, 1286,
         1162, 1358, 2373, 1370, 1090, 1392, 1091, 1398, 1391, 2378, 1390, 
        1114, 1364, 1115, 2203, 1365, 1166, 1290, 1116, 1277, 1117, 2206, 
        1278, 1170, 1136, 1137, 810, 970, 2212, 823, 2257, 983, 836, 2266, 
        995, 849, 2276, 1008, 864}], 
       Line3DBox[{717, 877, 2169, 718, 888, 2178, 731, 900, 2184, 743, 911, 
        2187, 754, 1078, 2306, 1079, 1160, 1346, 2366, 1080, 1274, 1081, 1287,
         1163, 2324, 1359, 1092, 1307, 1093, 2197, 783, 1118, 1322, 1119, 
        1366, 2371, 1167, 1291, 1120, 1279, 1121, 2207, 1280, 1171, 1138, 
        2316, 1139, 811, 971, 2213, 824, 984, 2216, 837, 2267, 996, 850, 2277,
         1009, 865}], 
       Line3DBox[{719, 1040, 1041, 2170, 720, 889, 2179, 732, 901, 2185, 744, 
        912, 2188, 755, 1082, 2307, 1083, 1161, 1347, 2367, 1348, 1275, 1289, 
        1288, 1362, 2370, 1360, 1361, 1308, 1094, 2198, 784, 1122, 1323, 1368,
         1367, 2372, 1369, 1292, 1293, 1281, 1283, 2357, 1282, 1172, 1140, 
        2317, 1141, 812, 972, 2214, 825, 985, 2217, 838, 997, 2218, 851, 2278,
         1151, 1152, 1153}], 
       Line3DBox[{852, 998, 1150, 2268, 839, 986, 2258, 826, 973, 2251, 813, 
        960, 2247, 800, 952, 2311, 1123, 792, 945, 2338, 1194, 1193, 1312, 
        1311, 785, 938, 2361, 1310, 1309, 1098, 774, 2189, 929, 1295, 1297, 
        1296, 765, 921, 1294, 1264, 1266, 2355, 1265, 756, 913, 2300, 1059, 
        745, 902, 2226, 733, 890, 2221, 721, 878, 2219, 694, 866, 1039, 
        1154}], Line3DBox[{860, 1004, 1371, 845, 991, 1395, 1285, 1326, 2358, 
        1325, 832, 979, 1374, 1324, 1204, 2343, 1038, 819, 966, 2292, 1035, 
        806, 956, 2290, 1032, 796, 948, 2288, 1029, 788, 941, 2337, 1192, 
        1191, 1240, 1239, 779, 2309, 934, 1189, 1188, 1231, 2335, 1230, 770, 
        925, 2286, 1020, 761, 917, 2284, 1017, 749, 906, 2281, 1014, 738, 895,
         2279, 1011, 726, 883, 2296, 1339, 1341, 1340, 708, 872, 2332, 1175, 
        707}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
/uP57zzY9m7tfbJ+63NPMzIPlrw6f5Cs36+ZR+ZNdFm3TYzMg8vDban9Q9nO
bLyN8ci9puZTdEViZj4d/H7dQwDjd1btTd+F50GBiWQKv/zn1VFG2N/+evG6
r3genM+bR/mbHGaluBzzozszL6ONzHmZ05Sar+mC/Hi+PoTnQdoMnzEHSr7j
eZy+ewzW43mc9ncef7he7exAewD9S06OMZ7faX/n94l9PYF43qfPQSX78LwP
fcx533h+uPKbuQuRkPBiL9mGY1B3e+Z+YG9qlIPjKkk0fuH7b3K/Ub24nbpP
+G52S9G/1AKdlDSwIfcbp4ojqfsHznjthT4aSegjKt1E7jfMit9R9xUdMgob
Girf/eP5kJSvPLnfkHo1/Nkbr58YW7WU3G8c/VP3mqx3WlRN7k9Q8EXFZ+R+
Y9nKR9T+B2/fziN4nL2p+xaE05PCY3wjc201xi+2+EPG6YZjKE56Br/PPa2g
I9hft5n7HMSqO+Ov4Mz9D515/0P/e//DvC+iM++L6H/vi26oGU48ermFPj4N
xUlbtGl/75e+enWzmR67Sk+ZgGPFkZG0v/dR19+e0YoejaTXF1vxuma00f7e
Xz1a/+bcpsoO+rmc5oLDcptBg3nftXdu0X6hKl5UY5V9jCPwEig0ztyPHXuf
UlRdq4fohRtyyX1dEosLdZ+m5C1bq/YnDnWu89Mn93Vvaweo+7eGjqLp6+zl
/3h+rH9VntzXeb82bSTrj9o/1iP3dXO8R6j1KTP3gYh5H4j+3gfabRwLIHii
NUSfk/s624IZPDkFXMHbMX6prOZJkNuM0jRn8HfO3E/SmfeT9L/3k3oz95l0
5n0m/e99JiPxkMbBg1vp4xSP1//d1w0sW2LCPoqgrOZrOXd+JfwU8HrgfXcA
XqjZWhP7ieaKWmxHZoXa9sRuvuyDTnRpFsxVGJQ8y10NjaqQzHdpAIKsS88R
+/pGrqPYjuh19yn7arrrh5OSL4FmVl14UvITbPfrSYyBAfitV/KW2GPtOHFM
f0LrPHiSiX2j35X8oWNx8HpB2J3SJTXwhDc0QY5vAIJFO/OIXevaK2tsR6df
N8UR+8M+qaxXL5zhTOPouc/cnZBT5jDtwNUBoo3bjkbxecHtJdfOLLGogU9n
7OcObB2AMf+fa4hd4rMOsaNTMc6UvSHLLpPssyQyXBHvgyT4aqbIPs7zD1Vi
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
no898z0fS+Z7Pp6W/CY/61JBfr3gQznTRtQbAs2ubP1Q75HleCj9GTQrCwlc
SWpAptXHf6Sd6Iec799/OSR4gQdvU7WWUSVSWFR9GpUMQNfnr/6monchirf7
foZqPprvLr6OMwHH4TeuSoJHzGZDF8aDRJMiIwkeu7E0QVWM/8AdN7+DhcFI
qrCOwv863X3oD/bXkmOq4RYd92vXblH+Sh67NrRd6QqsKODZdaI6F0qPzX19
oATPmzHurrpShkA//HPr0RulcHJ5sVW2Ks5HnRLxqS/3wFlArL4SPkHer/n7
+y8NgCnzvaMdzPeO3jLfO1I/37d2yuIpRFer/1IdaoMulT+NdW+7we6H9o6S
088hbCPM7edvRpeWs9+e4u2Dzb8C2q22PIVLfjqK4SbfkKW4WkuRejcsfCu1
ry/IHy7eUi9OvdyGzk5+8JnY3wOVzPeRypjvI8kx30fy7mop9ey3gOJlxSFO
77tgc5bJxrUi3yH8/7jXevV/vC80+qt/fKeCJ5g8vjJ4aLgbzm4S7A9+3QZK
CzO3lx3yB7Hqbs6PhzqhXqgp0Gd2B1wsELhkph8KvLLfGxIVW1DHljCXl7a9
kNK6JIBR4wfsInrVPJ6d6FCjRsLUs3bYvcoiyI7VE/Rnc6ff2d6DFgkc8a00
bIPg/+N9JGafw9K1W27h4v0MMFdecaPa//0/u8vbE95yXQPw7U//yXTfin/2
0yd/Gd01HoAA0d9C71L+vVfMcmJN/27as37Iy37KIcJd/8/uvUZ/86fFffBz
6aX256XN/+zdIXFvC/NbkNIAir0u2fvP7tNffvrJly6UrLIx/MK27//sm+Id
yT7IwPfn9//cJ/X7gj34uWjrXq7/eu7lxdIEP5qTN/5f+IVmSRN/0VKXG5S/
tdYXlnn1WyAO96UW5Hw1Eixlyfnm/R/3UZv/j/emzltvu4PPC0k25NaR86r+
2OxKzqtu39Mt+HxRWL7Bcny+yCk0OpScb4m85iCOB3Qj3qkTxwMKEbIcI/HQ
/n+8T2VTuchkh9IVJDQeUiuN80sr5UgGya8bJhaeOL+QS2A4ksT55anYZEfy
6zur/WacX8hczy+E5Ndz84rDJL+Kme87KTDfd/rOfN/pVUoOySMkujpnog/n
0ZLisyYkj5IK1LbgvENzZJJ6cN6hoG6PbyTvuLZ1CuM8QlzvDNNJHo10Xwkn
ebSN+b5TF/N9J2Hm+07bx8aXTt7lR2fb7GyxboDdPBNKN6wO/lHGOoNSD9wW
wDoDsKqP0hkB0aZ2rEuIh7X1NdHJW8nzKZ303n83FesYquPcfAnrGHh4ZK0n
OhZcd2yeY4IXck09k4V1Dxb9uXmO6N4RVREPrJPIo15uE9ZJYGOp/UV0sitk
/j2sq+jzbCdroqtLVwe3EF1dmd+wLJ7lGRr9KhsiXdeIPr+s2+DM2g+C835K
vlviie6lJF17eKwSxZRlG/CUDwAw37N69j/vWTmNPFynjPEvLnSqJ7o6aF9A
6eqwYQfXZezvurELb4muGvN8pPxVuy18gvBz07er2QjrqpjXXYqf3W2uLNUs
U/TBeZK9l3H91dafqTv1815V4DqFgoSW5g7g+vvGf6ZO2eu+mYXrL5rL82Ux
rmtw27ieqmtDne+scR1E+9OFtEj9lcjbQdVBzmdn+HHdREfP8L/DdRP22T82
I3UzTfKXEa6z6L0UWzmus1Dp/8yW1FmWN6yluC6jo6+qoklddrikcZPU5fB9
FQnxIaEIbVBOdmwtR9aZ7w4uHh8A349nxMj+2+/FDJG6LLGLjdpfYerLHYLn
kHZUPKnL7gPjVD/Ab1ihQvBP22tHk7r8flclhZ9FI+vRBPb3eq342CCuy6lJ
pjP+cpZPd2J+1Bfqi+niuixYNtOfuP9ObcL9DN3KVXMn7mdgD7OfsZc6wRaX
8pPOT3vfkY77umVJM/2Prn0k6euQ2SOnp7hfAsknM/1SaczgOO6v0LFtdyNx
fwWnLkVS/dWUB9eSW7Um6EHc0ZWkr3PdsvQ+6ceM/dby4P4NLV9O48H9G3gI
X6kn/duZu0XvW56ko4c3NbS2GVUhgdunOzY7DsDHW43qZYp+6EJBzDcNqzeI
Mbl6nU4K7mMXDbQ0PjJA1Vs5WMSan6LVQyZ1GuMM8OsJja/CeDayWkvF4n4v
rcaLwpN/uJH3Nsa/dGpzViDu90SuHabw/3whtTgE+/skW6ssjPR74zP+Rmn+
Gs1OLKXLuM+aBtzv8bHP8LMpMaoa98n0HO1azyo8l/3tk1k2r6vH/Ta9u8lg
Je63oYLZb1vzL3yB+3YUk2vug/t2sKTP9O0nuqTv4v4fBVaxa+H+H2T2z/T/
rhxHyvAcgcq/TpeRuUloiS41R0TISPeo+PmitT9GPjjtT4f8b/X1h9oYIKzQ
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
x4a9mtHlqBRL0CeVX8OP6IOTdSpngz6Hl19qBf2HZmEXoj/uNg1tA/2jedcJ
jNddxD7yvGdgXHddZ3N8IvLSE3PTSD+4TMHkKozrq0vbOujn3t4lP8i4cGan
ogWMK8Z9xw8Y1+fhjrdET3yp/v4HGNebTWXOoGd72HpMxoWPj2/oJuNCKDA9
AMblPUOtgMRrnCkpK0HiNZp7LrIL4rUump8J/XhKlkM/+GLaLaqfXpucr/C7
7fU58Lv4+FWTYfjdhA9x0aDnnEfcoCfmYDYTBj0v/4lfDuNKPtoP48JlDrXs
MC7u4avMxJ/xOX8+ZvDn+zFdGjC/v4R+PSL+gD25MwXBn1ktMi+DP0Re+spG
/BlrfrgdCv5sPPx+H/hPQvvBP8Tf8Mofi5aAPyeMNXiAv538xYmJf2KVKs+L
4M/dwXV94J+3tWN1iD9jyVtbaog/ozKPXXvBn1tCGh5D+7bQTGiP7ZgyqPb1
Y5lt0H/MlU/QP14Qd5jq/3Ff9wjxZ2zl0BgA/vxI3e4A6CNXVRYP+t9/4igE
/uy+ciel/1qJE63En3GGaudvL+LPT5K8NGG8kZ4lwWS944T9HoJkveNz83wO
wno/SeP25DTcPqcXs4LgBk5jTxIkuIHXZqmLAm440ridMg23PyhHrCK4hKv9
Ek4SXMIrDX60Ai6Z8W+CvBJXzkN/SV6Jkj0jqLwyknlWOsE3nP/2lx/BN/z7
xiiFbwvlz7EcHy9EuvmPZklrPMFnjXewpR4eRG8ehLe9CX2D4tRklhicLsWp
PdItzFkkfiX9AXxGsV/vnwF87jMQofDZ1tytF/LZrp0vZtaQ3/0rsIj63ZC5
Ypzw/XTPDDVf+A44q2U89f30cFruTcvn0HLeqBl55SU2aI/qpC3sHyZ5+grB
/uFZ5vBNLXyXkHyrctMWsx4ssladpWN+G8oXT5gF+42P1D7DfiNSzZbWhva2
wu0XSHucPPtaDmmPrknXS0B72VxnM5DjeXkgx5EdFyj5eZrvFU3je47OtpuP
vHn7r+7lSi43dT7bJtryDPajuKVvw34U6lmXRO0nLHNqbTLeTdrva1ffdTwN
LSgQNctwHpy2v8349+2fPJfmsaE0j53ivTZyEvS+Tc5/7XtfkuOj+a0MzW89
V6xUDBqL/Hcel++eQdXnDL3ytc+OjsB4+Dxrj2YZYmcZMhDoH0Cc5ydnThqF
4IbJyQdQt7PDQcUd6nakYpUeDy0Jx33NTYdXPK3Fe27fbPqr1o/2L5Xr+a5v
hn81e2VCndglOe/dUAf1ifuNMvBJjWypF4RPIlXRTxSfrKPl2rRchZa3tH/R
0r1/Gd8ry2x4hGrQwdBd1lBntZ5+H2Aj/T6AK/0+gAgt3zRNvu1b3LssMRcs
dP/scahDeym1twjquF66CBRnFzjiW2KT5k6zmxDvnKXW8D3ZLFruRMuX0HK+
qXqzf3Zj1Jsl13AWwn6XrkXpjdMqBeiA4iwD2O9KoeXKtPwgLT94ZmVdSUfG
v34s7JdQdYAczpWGsA82JGoI+4Eoeb0otQ8WavGmRtg3A+dXZRa5cKQjHy+p
juicQRQ4tY4wvY7wBL2Oru/2aCfrESsED3OQ9Yh62WOo9bjDZuR9n10Kktcp
hzoB9MezlqoT+L5x/2fwQ8PvfUrED/Gby1GUH5r9V13oWzlGXei+cJ1Mog/6
GLT3Dehz50o8pc9auyvJIBdj5X9P5DhySSIlX/6TQ5XYAdm7nIL9QKR+5yO1
H8hHy+/T8oO0PCj05VmQz6nyjoD9w7vSzJQ8gJaL0PJgWj7N/xHD/4WVY7LZ
WiKRWfgj6rxjQPkxdd4xcFtpA/FzxDXflvLzuBTmk+DnjPVSQq+vu/T68mab
CId+9uqb6pJ+cI1MBNXPp3N6K6Ef2y/s80k/+PoKX2q98NP38R3p+/iH6fv4
/haZbmS9oI63ZbqwXiZaZRthvTDW9QJ6ncrS69TLaf7Pv2TdCRQqP4T6OhHV
ZdS66zCujIF1d3hV1hHSDzo42kr1wz81Xhw/NV7MGO+zSf/DsK6TeC1hvHjr
6nFKT8Y+rRW9T1tJ79PmLV5cBP6WeO9JOcyj/9hBah4ZdT5T9k6VY9T56C45
XUn8B/eHZIL/IAexd5T/LHl7+yPIY0/2UH61RaSPkt/YHBVvq5uMRB5nH4G6
ixcep0ShjuL3VN3FP/xk1F1I889eDN9x1jwWxbWJ4MP8CgV7wAdxWn5wmvwd
fc+6nr5n7U/fs+ZKCY2E70cPz++Mh3UdX3TpFKzrBbR8kJYn0HITuXB2iDtb
pLWCAOdzTphTcec8Ld86Tf5gQ3s1xCPPfnY7iC/8o1eoeCRUFLcD4pHLuH8j
xJfSEJ05EEfmnP75GHBphPUU4BKO7d9H4dJ6lmvZgD9fqvach+9cx/j6UPhj
ZuANdafYO6S5nuAhZkq/QOEh492wb/R96k30feqk4JYPgMPKwtbZUI+qIziX
wuEgOq8vnpbXW9BxrXhaXHNwO8cBcvOjodIQf2cmjK4A+XVabjJNbk/LzabJ
h9F96juw0vwWCgMpeUjCYSX1HdgBWq5Fy8Vp+bXCSq0Ui4toBnPdjptbelCZ
1IVBnlNtqMuLx5vIsUBU3gqQRwmNr1xC5Hqyz79BHeaBX02VUJ95Pv9wM9Rh
Tt8fi6P3x5K86yZK59iizMMXvB/d7kG/3E31WT+3IjGVr3sPvbJF83NLKpa/
60FPc55lNji1/p/7aUcfy+bcVL+G7rMwqf+17EVf5uyrfHqxBbmP+gxYSVxH
qkwGZ98F9KL7cddklsu2/Dvvnn4+zjMvbo9w/y0kNLk0Es5/5+U5u8H5b//2
+Ie/dt5CXppLWV3re9GJzjlGf641/6/zaIY+Xy5ntq7wvIEaNdsWwznszgD7
B3AOG7owWP7Wp5so+fXxZ30Nvbja5sh6Wbtm1N7p3xa89ybisF57VbGoF+t5
Pzb2y27+P8+1b0XmMZ9yvIweOLelw3nutcicCDjPtQ9L6/UWuIpufN5SqGVM
5AHzFyxxb0HJM5QeRKtdQfuFVOY6yffiQ29OmRq9b0H7ihfthfkVPbEP5hdv
lJH9BvObuux2r5uOHfZhlvrJkdiDrrLfiYD6W7ly9e0f59hibsckS5ivZVFy
7jBfUWtyPMl84WKu1RkwX3qPR9phvp6n6B7Ch+zxsXOG5lAvLbMy9ALU9972
kf5L5gtHGdXIwXy9Nuj4AfNldn7XFmuJ65jLXEsL5ot7vEoH5kuJxffLhi2O
2Hx8zlWor+5rM14D9cPpWYqvybzgF9vmj7mQedE8K+4P8zJWy68Iv3tqkx78
Lk5NiKV+13vLSS1if+y36G802L9dQO4Y2P95yvyZd/fexPyfr5mC/TUqb4aB
/T2aNrSCHa51rwA74KLol5QdUtO4RHwEruJNd/uTwc6XT/RvBTt3X6sfJnbG
ivwrhhyJnXey/74NduauznSE9XLX+RisF5x597YArJdrS68mwv6VZbLUkYam
XHTGTfwb7F/tb6na9NI2E5cUZCUObanAx3vb5DMcB5AeLS+eJtec1v4YLZ8Y
tHGAeJf35zUVp5xkuqk4ZbPUnKuNKxBpTaq05iW9QJ27Z2rL1xBeoXFxBtT/
+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
yIsoIeQGMNMWCyXkBnS+wkZHcmPVH/B7SdivF8R+vTD26+14jl8i5DDMOJmj
SchhoD42JYe3HJNsJOQ23Dh8aRcht4HUjXBSbjsHfnhHyHnYv+1X6/atsaCL
3YuU87nYj3ak+NFmg592EvqC3mKTP+jhtwN8q5zSFz++xnFvTVsCKxe3LiX0
C6Av9Cf1S0LdTQVCH8Et2vrChD4CJtGZpD7aYrVB7O0PQ3jdqHfwOf0mKAMH
Sf01hv1oDwqf75WeTfsI/Qgjdt7TIvQjXHNj0h/pR3nsR3tR/Oi5zsoSAwol
dAHpzmtcZfOAHNazMfp5ZoReputHDr3/XCMDDn6Y0svJrq8qCD0O6YcWl5a8
NQLFVVN6POP5xruE3ocFcxf+VHFyB8Gl7KTef2Weu5ywE6Cg3qgBYScA1dkC
pJ1wDtufDIr9GZcWvPn8/ZPQ8NdNzkrOGLhM44heCrHOx+lgsXGUFlQoaU12
l7wGB2zPk3ZLP/O8jiJNBPLvlRw0MzwKXa0YpJ3Tjv1uW4rfvR77F1UU/4Jv
HbcE56wK+qru8juEfQWeYvvqSljzGGGP0XtpSiaEPQYuxEzZY8/q9qcS9huc
8VqPjbDfQE79lP32ul6L2FdzSDOpuETYe4DX9jZp751cJTLiKx8KlyWa9f3U
yAIPJmQOafUwgYVe3alH4QdhY+j81ocR3vAvNVotqssRvUD/NWGXwpc+7Afu
pZ2CB9+XknbpV92Nlq/k2eBrvfB8f1Ua/BI8Zccae/4SjTCsootN2b3QHdu9
A9hvKqb4Tfrv3fy2leaA2eYM2glfQn8FFf+8KMWYrkeqTqlHat/90Wnj6mww
KhPmGLarGU7Y555iuH+e9rPibtB/b+Cumfazts+KC7DakAGMjwtuM21oAez2
hom0wkHgKnnlgv7sDHDwzYEkkdIW+OH0xNOiokFQke2w+PObJKCUnHnVKbkN
mDKaDx6bOwhevK3kRu0SenO9iXY46U0j22UZQyuJdhj1S8Udfe/+TMsQtU9k
MjhR+9xUVdQOkysPk+3Lgovsif/ClpxZd4n/gi5xV4j+mySZ5ojaZ1duiUXj
MWtdXYTaVY3PuhPzhSfljtsS8wX3n0icQfNV+kZzQ+3z1v2wRusg/ciObFfA
/uCtsbqB8xzV0/7gwtGwAGKdoSVvyVZinQH7V8YvtM4BbxxatFZEgdz7OZIr
Z1WB4U2S7xfrMkHL04qfS3geA7Gcj12VL+tgflbmnPwixjTfwWrMd2CO+Q7u
4fy7J5T8uxkKp0v3PPMG84YjBGlS5WBIWffDpStMsI6vSTPJYTeYezBOb+Pv
+6BXrlfAhrDz+7L/+tqRYwQapebVfbqZAWI01IVjB5lgNc5TW0nJU+u5tqX0
7893geCCQ/uktNuhhVZsulznwHT+1xAl/2sZzvOSo+R5HRsP7EP/3UITaCH+
C1sHNpD/1Q3dugKNM3m9+R5inFAujEGOMxL7vx7Y/32H/V+WX98f8wDxNkID
BvwXb6O1Yujnl8i+hekmQqR9O4f9mhLRP4x40Ty4gViH7O5Ngqh/Vz8l7s4c
I+h3cWY0WofIkVxyPO9xXLcPx3UbcFy3IXDlS2Id4NYure3EOoBMbs/HaB0E
cPy2D8dvL+H47ffbrbqof3Gh8gdovo+Cb5H9l233d0PjkfkwNkSMBy7/vZYc
z3ETsQJiH2H/nlQOYh+h7GHlj2gfnTAeOJWCBx6yiO4izhU0qOblJc4V9Dot
34rO1RGho2x8PI/hi98ZrcS5Ar48t7nRueLC8bEeHB/7ieNjElkJmUjv737l
tB7ZyU9zXV2R3uejvIe+xO+h6n+IV7yl4NWfYby60R/w5xkY7y2C8d4PMN67
peVIBrLb6ws4VyA7hH2zjx8aTyPGb8dh/PZCjN+2wDjqDIyjlsQ46p/Hp959
KinvPh24nm0m/0qfBWdLC/lwPVsW7jey5uWNHbU1hSzcr+AfeHmuY/ytC/vK
OFvbl4Us/K0Sfo8IxO8Rsvg9IjTq4pVx19OwOdFhqJ69Bogpemg2rGP+D96V
xZNV6V/cgvwRM3VPA2TXVdlud0Z2HT/Gr9qlC8APMi8LWfhVFh61+5TKtX1l
tYUsPKqkQHT8ubYcqGl+W9zOox4+SzX4+5E0A3jheFoMJZ62kCc5ivgezOFI
Rt+Dyvxz5Pencd3L+9vKnFD/rLqXq3D9xiJGUP2/x8O6p5cxv+przK/Kqiv4
PajhIVo3Vl1BVlwuMPBT3kDZP7yrun/gJyrGdbRii6vJ/WLV0QKt1yaRXHUY
zu5E539scy0pV0cxLlHxgk5mxc/qQhYu0aTkxjFiX8CiaG/jBmJf6OmeO9C+
1FDieyz84YEflw6hfcw42vad2Ec43K5M7uO77FCPo2dyYNnITnv746/gdrk7
q9+nMoAfBT8Wj/FjzpR44ACOB1LfuRLwO5clBdfEh3FN2vj9MYLy/nji1I1K
JLe3etL3I3nF6bCNlNu6gbFFyF9IcyxF/gKUuZNC+gu0P+Be2i1fk+uzOk7Z
glgfuEC0QwXNV2R+TS2Sh/2lfyF5CONtPUh5yOJtWULhbeHHcUUNHFdk4rji
yT/gBAAlrrgSxxX/hOsoxPWpwn0knCy5qgtZ9amyQpvG5X18wcdYTaWJznTo
KBNJxvEO4XdwEco7+E7XrEgzbh9YPHreJts+HbpvPVNjz/gnDsmqT16B65OP
4DpjMlynY/59rjTwu/Z8yrv2/wHdwFqb
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["\[CapitalDelta]\[FinalSigma]", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\[Mu]", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{385.2607188934257, 299.9704326463903},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-20, 20}, {-1, 1}, {0., 0.9999999979388345}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.084215386953994, -1.9921462979260038`, 1.771270546371709},
  ViewVertical->{-0.37840450401595127`, 0.36168868942840315`, 
   0.8520512445152616}]], "Output",
 CellChangeTimes->{3.926020803704755*^9, 3.9260208601904917`*^9, 
  3.9260209436881733`*^9, 3.92606538279916*^9, 3.9260664241074333`*^9, 
  3.927741200956066*^9, 3.927741306724876*^9, 3.927741496113158*^9, 
  3.927742320097568*^9},
 CellLabel->
  "Out[337]=",ExpressionUUID->"9edd30ad-4965-4a7b-99a5-5e8a14584bf1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mease\[CloseCurlyQuote]s Penalty", "Subsection",
 CellChangeTimes->{{3.926001580708625*^9, 
  3.9260015890717783`*^9}},ExpressionUUID->"79716170-3173-43b3-bfaa-\
29c11389349f"],

Cell[TextData[{
 "With the single pair components defined for the 3 study methods, we can \
turn to Mease\[CloseCurlyQuote]s penalty (Eq. 3). Although formulated as \
adding a dummy item, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "0"], TraditionalForm]],ExpressionUUID->
  "eb2f2144-042b-449b-bfdd-8c33838b39ab"],
 ", that is given one win and one loss against every other item, because ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[FinalSigma]", "0"], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"36afe6e8-e295-4d93-80e3-d8cb688eff24"],
 ", can simply set the equations to be relative to 0.  For a single term, \
this gives us the following equations:"
}], "Text",
 CellChangeTimes->{{3.926001600257964*^9, 3.9260017377356863`*^9}, {
  3.926001789023692*^9, 3.926001865252285*^9}, {3.926600546733995*^9, 
  3.926600547723978*^9}},ExpressionUUID->"b89e9554-862a-419d-b798-\
93fe707f37c1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["L", "0"], "[", "\[FinalSigma]k_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"\[FinalSigma]k", ",", "0"}], "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"0", ",", "\[FinalSigma]k"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", "0"], "[", 
   RowBox[{"\[FinalSigma]k_", ",", " ", "\[Lambda]_"}], "]"}], " ", ":=", " ", 
  RowBox[{"\[Lambda]", " ", "*", " ", 
   RowBox[{
    SubscriptBox["L", "0"], "[", "\[FinalSigma]k", "]"}]}]}]}], "Input",
 CellChangeTimes->{3.9260016594828453`*^9},
 CellLabel->
  "In[338]:=",ExpressionUUID->"a6aef504-b345-4a09-9f8b-741105868da2"],

Cell["\<\
It is often instructive to have a very small penalty which helps to uniquely \
identify the solutions. Here, we use 1E-6:\
\>", "Text",
 CellChangeTimes->{{3.9260037185555363`*^9, 
  3.9260037725000477`*^9}},ExpressionUUID->"24a31a83-db58-4fb3-9efb-\
efdb9f7e5023"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Lambda]", "Default"], ":=", " ", "1*^-6"}]], "Input",
 CellLabel->
  "In[340]:=",ExpressionUUID->"95bca153-bb01-4902-9ec1-dd2082db8b04"],

Cell[TextData[StyleBox["A quick remark about Mease\[CloseCurlyQuote]s Penalty \
and \[Lambda]", "Subsubsection"]], "Text",
 CellChangeTimes->{{3.926001698743165*^9, 3.926001712571149*^9}, 
   3.926001749996009*^9},ExpressionUUID->"b84a73ad-db81-4eb3-a587-\
55dcae34f2c1"],

Cell[TextData[{
 "Mathematically, Mease\[CloseCurlyQuote]s ",
 StyleBox["penalty  is similar to |\[FinalSigma]|, and thus may be many times \
larger than loss due to changes in probability, such as in the examples \
above.", "Text",
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.926001758908704*^9, 3.92600178737617*^9}, {
  3.926001869299631*^9, 3.926001874716403*^9}, {3.926065103795432*^9, 
  3.926065104330092*^9}},ExpressionUUID->"f58b89cb-7366-4f1e-aea2-\
08be55f30ac3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "0"], "[", "\[FinalSigma]", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[FinalSigma]", ",", " ", 
     RowBox[{"-", "100"}], ",", " ", "100"}], "}"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Penalty versus \[Stigma]\>\""}], ",", 
   
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.9260654090813427`*^9, {3.9260655118141747`*^9, 3.926065623009295*^9}, {
   3.926065677785656*^9, 3.926065740374031*^9}, {3.926065898086527*^9, 
   3.9260659082842484`*^9}},
 CellLabel->
  "In[341]:=",ExpressionUUID->"349448b3-453f-43d6-afdc-3da52eddbc3e"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Ht6eLVf63076z38B/16bew==
       "]]},
     Annotation[#, "Charting`Private`Tag$149547#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[FinalSigma]", HoldForm], TraditionalForm], None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Penalty versus \[Stigma]\"", TraditionalForm],
  PlotRange->{{-100, 100}, {0., 99.99999591836735}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.926065728024527*^9, 3.926065741039176*^9}, {
   3.926065899692184*^9, 3.926065908620398*^9}, 3.926066424132873*^9, 
   3.927741200990685*^9, 3.927741306755604*^9, 3.927741496146304*^9, 
   3.927742320131486*^9},
 CellLabel->
  "Out[341]=",ExpressionUUID->"faec6eaf-130f-42bf-ac72-cf9b56600ee8"]
}, Open  ]],

Cell[TextData[StyleBox["Depending on the relative number of decisions, this \
regularization can be very strong . We can generalize the penalty by \
introducing a scaling factor \[Lambda], where the original version \
corresponds to \[Lambda] = 1.",
 FontFamily->"Source Sans Pro",
 FontSize->15,
 FontWeight->"Regular"]], "Text",
 CellChangeTimes->{{3.926001891819571*^9, 3.926001908099865*^9}, 
   3.9260656379703093`*^9},ExpressionUUID->"57ed383e-0a43-46a1-b4d5-\
7d2519f97cc1"],

Cell[TextData[{
 StyleBox["A small value for \[Lambda] can be appropriate", "Text",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 StyleBox[" because",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 StyleBox[" the point of \[Lambda] is simply to uniquely identify the \
solution and avoid discontinuous items.  The problem with Mease\
\[CloseCurlyQuote]s formulation is that with a large value of \[Lambda], \
decisions with equivalent sampled probabilities are not proportional in the \
final solution", "Text",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 StyleBox[".",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"]
}], "Text",
 CellChangeTimes->{3.92600190991886*^9, 
  3.926065635859879*^9},ExpressionUUID->"0f38092e-498b-4b46-9d02-\
4e76e5a176bf"],

Cell[TextData[{
 "Consider an example with 4 stimuli ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    SubscriptBox["s", "1"]}], TraditionalForm]],ExpressionUUID->
  "9842fd1d-1e06-49fb-9999-a55822a2bce9"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]],ExpressionUUID->
  "3df8271c-3b90-4c02-95a9-94cb17f1567b"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "3"], TraditionalForm]],ExpressionUUID->
  "cf00ec77-92ed-477d-aa43-06ae264b756b"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "4"], TraditionalForm]],ExpressionUUID->
  "01569e5b-d6d9-4325-a519-98d3ac112654"],
 StyleBox["}, and two pairs {(",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "30daaed1-ee09-462a-b2fa-c5954bb06bc3"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]],ExpressionUUID->
  "dcd78590-4635-4051-af03-c360114dd3ee"],
 StyleBox["), (",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "31a6d528-9b91-494d-a1e2-2f23ba988c04"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "3"], TraditionalForm]],ExpressionUUID->
  "18682a9f-f9c5-4d6d-9543-1a00de80fb62"],
 StyleBox["),(",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "3"], TraditionalForm]],ExpressionUUID->
  "07964969-9b26-4949-8f8e-97e099a7f968"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "4"], TraditionalForm]],ExpressionUUID->
  "21f4fdbc-f71c-4e19-bff3-282ffe84067b"],
 StyleBox[")} where (",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "535f4d28-dab0-4aff-87e0-2a8f1ebbf3a3"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]],ExpressionUUID->
  "315f4b56-6798-413b-b563-e48089f17f55"],
 StyleBox[") and (",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "3"], TraditionalForm]],ExpressionUUID->
  "740ae0b1-fc27-45a7-94c2-37f3a952bbc4"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "4"], TraditionalForm]],ExpressionUUID->
  "edd263ba-ec9f-45a0-ab21-4f341e7d2fe9"],
 StyleBox[") share the same 2/3 votes (66%) and (",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "3728388a-41a8-41af-b3dc-204107621836"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "3"], TraditionalForm]],ExpressionUUID->
  "cae58c78-7067-4f52-b4fc-00f8fc11719c"],
 StyleBox[") retains its unanimity (100%). We expect (",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "4563f42e-37be-488c-947b-45e5d304ff72"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]],ExpressionUUID->
  "66e71636-3ae9-4ef5-935b-e10e2a50c1f1"],
 StyleBox[") and (",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "3"], TraditionalForm]],ExpressionUUID->
  "4fdc6843-16ee-4361-886f-34b055d048f0"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "4"], TraditionalForm]],ExpressionUUID->
  "728fb7f5-85d4-4a89-97ec-be162feba159"],
 StyleBox[") to have approximately the same distance on the latent scale \
because they have the vote fraction.  This follows from Thrustone\
\[CloseCurlyQuote]s Law of Comparable Judgements.",
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.92600193724776*^9, 
  3.926001946042945*^9}},ExpressionUUID->"49934b18-fc5a-4443-b3c6-\
5edf003f34df"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "BTL"], "Mease"], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", "\[FinalSigma]3_", ",", 
    " ", "\[FinalSigma]4_", ",", " ", "\[Lambda]_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"3", "*", 
    RowBox[{
     SubscriptBox["L", "BTL"], "[", 
     RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]1"}], "]"}]}], " ", "+", 
   " ", 
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2"}], "]"}], " ", "+", " ", 
   RowBox[{"2", "*", 
    RowBox[{
     SubscriptBox["L", "BTL"], "[", 
     RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1"}], "]"}]}], " ", "+", 
   " ", 
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]4"}], "]"}], " ", "+", " ", 
   RowBox[{"2", "*", 
    RowBox[{
     SubscriptBox["L", "BTL"], "[", 
     RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3"}], "]"}]}], "+", " ", 
   RowBox[{"\[Lambda]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}], "+", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]3", "]"}], "+", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]4", "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.926001963714851*^9, 3.926001966006027*^9}},
 CellLabel->
  "In[342]:=",ExpressionUUID->"69140906-f843-4680-805f-f4809c945296"],

Cell[TextData[{
 "For convenience, we will the final likelihood in minMease0 and the scale \
values in solMease0, where the 0 references ",
 StyleBox["\[Lambda] = 0",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 ". We solve for the minimum using the same limits as in the paper [-100, \
100]."
}], "Text",
 CellChangeTimes->{{3.9260019877256403`*^9, 
  3.926002086241837*^9}},ExpressionUUID->"2c718a82-807c-4269-8db0-\
b919463f5cbb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minMease0", ",", " ", "solMease0"}], "}"}], " ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "BTL"], "Mease"], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", " ", 
        "\[FinalSigma]3", ",", " ", "\[FinalSigma]4", ",", " ", "0"}], "]"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",",
       " ", "\[FinalSigma]4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.9260020499396563`*^9, {3.926002091824319*^9, 3.926002095914441*^9}},
 CellLabel->
  "In[343]:=",ExpressionUUID->"0b6dd4bd-33be-433a-8278-da38b5aefb54"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.8190854842624953`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "8.176389297731225`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "7.48324211696605`"}]}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", "7.483240578802031`"}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", "8.176387759137492`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.926002088995886*^9, 3.9260020993704643`*^9}, 
   3.9260653830619373`*^9, 3.9260664242435617`*^9, 3.927741201105803*^9, 
   3.9277413067781887`*^9, 3.927741496169981*^9, 3.9277423201565866`*^9},
 CellLabel->
  "Out[343]=",ExpressionUUID->"790bba9a-da65-46b6-a03d-666dc96352ea"]
}, Open  ]],

Cell["The differences in the latent scale are:", "Text",
 CellChangeTimes->{
  3.926002116733509*^9},ExpressionUUID->"71c4e8ba-c1d4-426e-ac13-\
90d5fab9c3fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", " ", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"\[FinalSigma]2", "-", "\[FinalSigma]1"}], "]"}], ",", 
    RowBox[{"N", "[", 
     RowBox[{"\[FinalSigma]4", "-", "\[FinalSigma]3"}], "]"}]}], "}"}], "  ", 
  "/.", " ", "solMease0"}]], "Input",
 CellChangeTimes->{{3.926002269283821*^9, 3.9260022713208027`*^9}, {
  3.9260093621103897`*^9, 3.9260094187117853`*^9}},
 CellLabel->
  "In[344]:=",ExpressionUUID->"63992611-d885-4c8c-874f-33bbd80d41b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.693147180765175`", ",", "0.6931471803354619`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.926002121934478*^9, 3.926002277884054*^9, {3.9260093714397078`*^9, 
   3.926009419230352*^9}, 3.926065383067378*^9, 3.9260664242475243`*^9, 
   3.927741201109949*^9, 3.92774130678341*^9, 3.927741496173662*^9, 
   3.92774232016055*^9},
 CellLabel->
  "Out[344]=",ExpressionUUID->"8852a34b-ab6c-438b-9ec0-217e5e25767a"]
}, Open  ]],

Cell["Which yields the following probabilities:", "Text",
 CellChangeTimes->{
  3.9260021328075438`*^9},ExpressionUUID->"3f3425b1-e0e0-4fcb-af9e-\
cef24affb203"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["Pr", "BTL"], "[", 
     RowBox[{"\[FinalSigma]2", ",", " ", "\[FinalSigma]1"}], "]"}], ",", " ", 
    
    RowBox[{
     SubscriptBox["Pr", "BTL"], "[", 
     RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]1"}], "]"}], ",", 
    RowBox[{
     SubscriptBox["Pr", "BTL"], "[", 
     RowBox[{"\[FinalSigma]4", " ", ",", " ", "\[FinalSigma]3"}], "]"}]}], 
   "}"}], "  ", "/.", " ", "solMease0"}]], "Input",
 CellChangeTimes->{{3.926002272378942*^9, 3.926002275244597*^9}, {
  3.9260093845741673`*^9, 3.926009401025876*^9}},
 CellLabel->
  "In[345]:=",ExpressionUUID->"7cde4460-495e-4795-98ff-f0604a3fac82"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6666666667122733`", ",", "0.9999998418354729`", ",", 
   "0.6666666666167814`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.926002136993541*^9, 3.926002278972937*^9, {3.9260093965038233`*^9, 
   3.9260094027417707`*^9}, 3.926065383076461*^9, 3.92606642425657*^9, 
   3.92774120112642*^9, 3.927741306795825*^9, 3.927741496185779*^9, 
   3.9277423201748943`*^9},
 CellLabel->
  "Out[345]=",ExpressionUUID->"589a39f8-a7c1-41d6-8916-a6f5041928bc"]
}, Open  ]],

Cell[TextData[{
 "These are the results we expect: the order is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    SubscriptBox["s", "1"]}], TraditionalForm]],ExpressionUUID->
  "df2c3034-b79c-4d2a-a86f-02623c91289f"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]],ExpressionUUID->
  "f455b3aa-4579-484d-a8b5-0ef5f6348135"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "3"], TraditionalForm]],ExpressionUUID->
  "c2a7e17d-55d8-461b-8fbc-febf4dd77257"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "4"], TraditionalForm]],ExpressionUUID->
  "d5121abc-af4b-4547-af73-1b89887a5061"],
 "], ",
 StyleBox["(",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "2a5a1698-2936-4b74-9ad5-c654431c7100"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]],ExpressionUUID->
  "754a99eb-d74a-423f-b145-1cdb983dfcac"],
 StyleBox[") and (",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "3"], TraditionalForm]],ExpressionUUID->
  "40f2f47b-fc20-459c-aef7-0d19fe594eaa"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "4"], TraditionalForm]],ExpressionUUID->
  "7a4a46f8-734a-492a-b009-8500eed83402"],
 StyleBox[") have approximately the same distance on the latent scale, and \
thus, the recovered probabilities match the input values.",
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{
  3.926002145840893*^9},ExpressionUUID->"5c9c5d20-5f85-4084-8fcd-\
36e1f156bcd6"],

Cell[TextData[{
 "This changes when we use a larger value for ",
 StyleBox["\[Lambda].  Let\[CloseCurlyQuote]s repeat the process, but setting \
", "Text",
  FontWeight->"Plain"],
 StyleBox["\[Lambda] = 1",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 StyleBox[". ",
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.926002150138875*^9, 
  3.926002168656084*^9}},ExpressionUUID->"f60108e8-57b9-44b9-a8af-\
04e65ffe27c4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minMease1", ",", " ", "solMease1"}], "}"}], " ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "BTL"], "Mease"], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", " ", 
        "\[FinalSigma]3", ",", " ", "\[FinalSigma]4", ",", " ", "1"}], "]"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",",
       " ", "\[FinalSigma]4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9260021774153957`*^9, 3.92600218512554*^9}},
 CellLabel->
  "In[346]:=",ExpressionUUID->"6b1b6108-7be4-48a0-b0a6-ace4e805c703"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10.488075514944954`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "1.0139178359603096`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "0.18158505756891655`"}]}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", "0.4620399964638264`"}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", "0.6881717660493979`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.926002186499322*^9, 3.9260022804679937`*^9, 
  3.926065383096059*^9, 3.926066424275981*^9, 3.9277412011472263`*^9, 
  3.9277413068164577`*^9, 3.9277414962062407`*^9, 3.927742320196121*^9},
 CellLabel->
  "Out[346]=",ExpressionUUID->"7c06a569-7519-4300-9cc6-315515a04d07"]
}, Open  ]],

Cell["The differences in the latent scale are now:", "Text",
 CellChangeTimes->{{3.926002192714265*^9, 
  3.9260021984607*^9}},ExpressionUUID->"6cb6e6c1-4bcf-4946-a0e7-75c13549f360"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"\[FinalSigma]2", " ", "-", "\[FinalSigma]1"}], "]"}], ",", " ", 
    
    RowBox[{"N", "[", 
     RowBox[{"\[FinalSigma]4", " ", "-", "\[FinalSigma]3"}], "]"}]}], "}"}], "/.",
   " ", "solMease1"}]], "Input",
 CellChangeTimes->{{3.926002262745216*^9, 3.926002264893029*^9}, {
  3.926009430387953*^9, 3.926009443293537*^9}},
 CellLabel->
  "In[347]:=",ExpressionUUID->"60f47eec-c895-480e-b987-e301e80dfe7a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8323327783913931`", ",", "0.22613176958557152`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.926002203171327*^9, 3.926002282047917*^9, 
  3.926009444099207*^9, 3.926065383099794*^9, 3.926066424279904*^9, 
  3.927741201150729*^9, 3.92774130682025*^9, 3.9277414962110977`*^9, 
  3.927742320201561*^9},
 CellLabel->
  "Out[347]=",ExpressionUUID->"05c20506-df6a-4c84-9531-ee9336b5e8a2"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Even though we expected the relative distance between the pairs (",
  
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "62453571-a1a5-4a93-8da4-2ab403dcda04"],
 StyleBox[", ",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]],ExpressionUUID->
  "35a1d80b-57a3-41e3-a071-9ecc2dacec4c"],
 StyleBox[") and (",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "3"], TraditionalForm]],ExpressionUUID->
  "27bd2847-bde7-4368-b27e-b429128ef964"],
 StyleBox[", ",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "4"], TraditionalForm]],ExpressionUUID->
  "b176c154-cf97-45e3-919c-6cdc3154a7c2"],
 StyleBox[") to be approximately the same, they no longer are: the difference \
in (",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "3049f962-b270-4b1b-a3a7-8bd313da32d3"],
 StyleBox[", ",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]],ExpressionUUID->
  "21988689-03d6-45ef-ba6e-f970c996834b"],
 StyleBox[") is almost 4 times as large as the difference in (",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "3"], TraditionalForm]],ExpressionUUID->
  "ca8ff84c-4edb-438e-97fe-e4ce92806cae"],
 StyleBox[", ",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "4"], TraditionalForm]],ExpressionUUID->
  "3a56c239-d770-441c-80a2-b9b7f0755b18"],
 StyleBox[").  All we changed about the problem was whether or not we \
enforced the penalty.",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"]
}], "Text",
 CellChangeTimes->{{3.9260022096998167`*^9, 3.9260022419587317`*^9}, {
   3.9260023695242157`*^9, 3.926002386277821*^9}, 
   3.9260661207407303`*^9},ExpressionUUID->"fbb2aa3b-cf1c-41fb-a998-\
3e114526090e"],

Cell["This yields the following probabilities:", "Text",
 CellChangeTimes->{
  3.926002248401285*^9},ExpressionUUID->"a000191c-f831-4049-af77-\
a4aedc20ccb0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["Pr", "BTL"], "[", 
     RowBox[{"\[FinalSigma]2", " ", ",", " ", "\[FinalSigma]1"}], "]"}], ",", 
    
    RowBox[{
     SubscriptBox["Pr", "BTL"], "[", 
     RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]1"}], "]"}], ",", 
    RowBox[{
     SubscriptBox["Pr", "BTL"], "[", 
     RowBox[{"\[FinalSigma]4", " ", ",", " ", "\[FinalSigma]3"}], " ", 
     "]"}]}], "}"}], "/.", " ", "solMease1"}]], "Input",
 CellChangeTimes->{{3.9260022584517717`*^9, 3.9260022617615232`*^9}, {
  3.926009447982305*^9, 3.92600946294881*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"384a4c49-d4f4-4e0d-a317-a50353e3c79f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6968479574917017`", ",", "0.8139612586807027`", ",", 
   "0.5562932642099703`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.92600225270625*^9, 3.926002283462707*^9, {3.9260094591474457`*^9, 
   3.926009463780364*^9}, 3.926065383107048*^9, 3.9260664242868834`*^9, 
   3.927741201166615*^9, 3.927741306833145*^9, 3.9277414962233143`*^9, 
   3.927742320215958*^9},
 CellLabel->
  "Out[348]=",ExpressionUUID->"f6001a05-03e9-4911-bbb8-0ea7e5e988dd"]
}, Open  ]],

Cell["\<\
We will show more detailed computation later, but this should provide some \
insight into what happens with Table 1 in Section 4.3.\
\>", "Text",
 CellChangeTimes->{{3.926002285569542*^9, 3.9260023543299313`*^9}, {
  3.9260023905809937`*^9, 
  3.9260024956021023`*^9}},ExpressionUUID->"75cddfd4-0572-4a19-abc8-\
f5c3df5ee905"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Section 3: Core Behavior", "Section",
 CellChangeTimes->{{3.926067255505762*^9, 
  3.926067275721777*^9}},ExpressionUUID->"860190aa-0eb2-4285-bae3-\
60ec9a6ddc16"],

Cell[TextData[{
 "With the foundations complete, we show the core behavior with two parties, ",
 StyleBox["(",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "1"], TraditionalForm]],ExpressionUUID->
  "a3a650ad-adae-46df-b834-c6ca63a06d29"],
 StyleBox[", ",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "2"], TraditionalForm]],ExpressionUUID->
  "06e48cf4-cc9e-45bd-9ea4-cd1f4cf36bec"],
 StyleBox[")",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 ", and a single decision between two stimuli, ",
 StyleBox["(",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],ExpressionUUID->
  "b3a400bb-6d54-485b-b4ec-f1cfc79fe89f"],
 StyleBox[", ",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]],ExpressionUUID->
  "d71f2373-fb2c-4ff2-8cc1-50f09859951d"],
 StyleBox[") .  To make these numerically tractable, we restrict the values \
to lie in \[Stigma] \[Element] [-10, 10].",
  FontFamily->"Source Sans Pro",
  FontSize->15,
  FontWeight->"Regular"]
}], "Text",
 CellChangeTimes->{{3.926067278805705*^9, 3.926067452391719*^9}, {
  3.926067786285036*^9, 3.926067828950248*^9}, {3.926067933171186*^9, 
  3.9260679338401737`*^9}},ExpressionUUID->"0ab9b951-fe95-4e6d-81b7-\
852e64a9ecfd"],

Cell[CellGroupData[{

Cell["Agreement", "Subsubsection",
 CellChangeTimes->{{3.926067454847067*^9, 
  3.926067461989991*^9}},ExpressionUUID->"f8e72742-6689-4fcb-84c3-\
e0be2c23d93e"],

Cell["Starting with the BTL, we have:", "Text",
 CellChangeTimes->{{3.926067574297426*^9, 
  3.926067584237142*^9}},ExpressionUUID->"03e1ec8a-3fd9-4e24-9630-\
2f225a5a881e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "BTL"], "Agree"], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", " ", "\[Lambda]_"}], "]"}],
   " ", ":=", " ", 
  RowBox[{
   RowBox[{"2", "*", " ", 
    RowBox[{
     SubscriptBox["L", "BTL"], "[", 
     RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1"}], "]"}]}], " ", "+", 
   " ", 
   RowBox[{"\[Lambda]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9260676044446697`*^9, 3.9260676374818363`*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"624d50bd-3879-49ed-aaa5-c074c205f1b1"],

Cell["\<\
We solve for the minimum and the scale values for \[Lambda] = {0, 1}.  We set \
the precision goal to be larger than the default because otherwise the solver \
will exit before reaching the limit, even though doing  so is optimal.  Note \
that with \[Lambda] = 1, as expected, the penalty prevents the \[Stigma] \
values from reaching the limits.\
\>", "Text",
 CellChangeTimes->{{3.9260676540923233`*^9, 3.926067673398035*^9}, {
  3.926067987640441*^9, 
  3.926068132990131*^9}},ExpressionUUID->"d552948e-e244-4dc4-9ed9-\
558cff5fd4bb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minBTLAgree0", ",", " ", "solBTLAgree0"}], "}"}], "  ", "=", " ", 
  
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "BTL"], "Agree"], "[", 
       RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2", ",", " ", "0"}], 
       "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]", 
       "10"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[FinalSigma]1", ",", " ", "\[FinalSigma]2"}], "}"}], ",", " ", 
    
    RowBox[{"PrecisionGoal", "\[Rule]", "20"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minBTLAgree1", ",", " ", "solBTLAgree1"}], "}"}], "  ", "=", " ", 
  
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "BTL"], "Agree"], "[", 
       RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2", ",", " ", "1"}], 
       "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]", 
       "10"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[FinalSigma]1", ",", " ", "\[FinalSigma]2"}], "}"}], ",", " ", 
    
    RowBox[{"PrecisionGoal", "\[Rule]", "20"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.926067676174848*^9, 3.92606772623344*^9}, {
  3.926067806994578*^9, 3.9260678382713623`*^9}, {3.926067873850963*^9, 
  3.926067891290382*^9}, {3.926067937300599*^9, 3.926067970241397*^9}, {
  3.9260680067699003`*^9, 3.926068009963047*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"57606192-c189-4151-aeeb-0145b0cd26a8"],

Cell[BoxData[
 TemplateBox[{
  "FindMinimum", "acceptlev", "\"Solved to acceptable level.\"", 2, 350, 30, 
   24962651052596380464, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.926068007325334*^9, 3.9260680104195213`*^9}, 
   3.927741201216299*^9, 3.927741306857339*^9, 3.92774149625051*^9, 
   3.927742320243252*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"2c9be5a3-130d-4738-b7fa-664f8188fd7f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.1223073885838545`*^-9", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "10.`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", "10.`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.926067728323667*^9, {3.926067814841403*^9, 3.926067840000298*^9}, {
   3.926067883241102*^9, 3.926067891763978*^9}, {3.926067945655766*^9, 
   3.9260679731390867`*^9}, {3.926068007331441*^9, 3.9260680104233103`*^9}, 
   3.927741201219245*^9, 3.9277413068605967`*^9, 3.927741496254488*^9, 
   3.9277423202474947`*^9},
 CellLabel->
  "Out[350]=",ExpressionUUID->"cc15ebba-dbd3-45ca-b9c7-3f7a6c878855"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.450269659214187`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "0.7563076126159649`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", "0.7563076126159648`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.926067728323667*^9, {3.926067814841403*^9, 3.926067840000298*^9}, {
   3.926067883241102*^9, 3.926067891763978*^9}, {3.926067945655766*^9, 
   3.9260679731390867`*^9}, {3.926068007331441*^9, 3.9260680104233103`*^9}, 
   3.927741201219245*^9, 3.9277413068605967`*^9, 3.927741496254488*^9, 
   3.92774232026159*^9},
 CellLabel->
  "Out[351]=",ExpressionUUID->"9d381201-447d-422d-891d-b2611a3aab6d"]
}, Open  ]],

Cell["For Chen et al.\[CloseCurlyQuote]s Crowd-BT we have:", "Text",
 CellChangeTimes->{{3.926068147641263*^9, 
  3.926068161289341*^9}},ExpressionUUID->"259c0e90-67ec-4502-abb8-\
04c4164e47f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "CrowdBT"], "Agree"], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", " ", "\[Eta]1_", ",", 
    "\[Eta]2_", ",", " ", "\[Lambda]_"}], "]"}], " ", ":=", "  ", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", "\[Eta]1"}], " ", 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", "\[Eta]2"}], " ", 
    "]"}], "+", 
   RowBox[{"\[Lambda]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9260682068734913`*^9, 3.926068229697653*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"a249f895-a9b8-4520-ad7a-cc5890e742ab"],

Cell[TextData[{
 "We define an ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Eta]", "Initial"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "497b8896-07f1-4825-9f58-d1b9305e8906"],
 "because Crowd-BT is often sensitive to this value.  Here, it is not all \
that important, but it plays a more significant role later in the notebook.  \
A value slightly smaller than 1 is typically helpful."
}], "Text",
 CellChangeTimes->{{3.926068243063572*^9, 3.9260683888581743`*^9}, {
  3.926068766109335*^9, 
  3.926068805267617*^9}},ExpressionUUID->"5cad4608-219f-40f9-a170-\
fdf6d7b72db1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Eta]", "Initial"], "=", " ", "0.9"}], ";"}]], "Input",
 CellLabel->
  "In[353]:=",ExpressionUUID->"2f2fe7de-0460-4e1a-b86b-7ea850331e44"],

Cell["Solving yields:", "Text",
 CellChangeTimes->{{3.926068396257543*^9, 
  3.926068398928432*^9}},ExpressionUUID->"db967a87-a3ae-4e70-895a-\
19c0005b3d7a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minCrowdBTAgree0", ",", " ", "solCrowdBTAgree0"}], "}"}], "  ", 
  "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "CrowdBT"], "Agree"], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[Eta]1", ",", 
        "\[Eta]2", ",", " ", "0"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]1", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]2", "\[LessEqual]", "1"}]}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]1", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]2", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"PrecisionGoal", "\[Rule]", "20"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minCrowdBTAgree1", ",", " ", "solCrowdBTAgree1"}], "}"}], "  ", 
  "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "CrowdBT"], "Agree"], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[Eta]1", ",", 
        "\[Eta]2", ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]1", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]2", "\[LessEqual]", "1"}]}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]1", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]2", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"PrecisionGoal", "\[Rule]", "20"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.92606840201895*^9, 3.926068500061204*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"6e4a6ddd-fe0b-4e60-919b-1da93d2d9f55"],

Cell[BoxData[
 TemplateBox[{
  "FindMinimum", "acceptlev", "\"Solved to acceptable level.\"", 2, 354, 31, 
   24962651052596380464, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9260684726328087`*^9, 3.926068501133542*^9}, 
   3.927741201281307*^9, 3.9277413069032803`*^9, 3.927741496305806*^9, 
   3.92774232030472*^9},
 CellLabel->
  "During evaluation of \
In[354]:=",ExpressionUUID->"64165c28-44b6-4cb8-ada4-7ef164d2725f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.1223073885838545`*^-9", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "10.`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", "10.`"}], ",", 
     RowBox[{"\[Eta]1", "\[Rule]", "1.`"}], ",", 
     RowBox[{"\[Eta]2", "\[Rule]", "1.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.926068472666231*^9, 3.9260685011374207`*^9}, 
   3.927741201284156*^9, 3.927741306906227*^9, 3.9277414963088713`*^9, 
   3.92774232030795*^9},
 CellLabel->
  "Out[354]=",ExpressionUUID->"961e2b4c-a524-4ca8-b066-98e5a85c12fe"],

Cell[BoxData[
 TemplateBox[{
  "FindMinimum", "sdir", "\"Search direction has become too small.\"", 2, 355,
    32, 24962651052596380464, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9260684726328087`*^9, 3.926068501133542*^9}, 
   3.927741201281307*^9, 3.9277413069032803`*^9, 3.927741496305806*^9, 
   3.92774232032742*^9},
 CellLabel->
  "During evaluation of \
In[354]:=",ExpressionUUID->"32af69a8-7507-4b69-af7a-e1428038306f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.450269659214187`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "0.7563076169083904`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", "0.7563076169083904`"}], ",", 
     RowBox[{"\[Eta]1", "\[Rule]", "1.`"}], ",", 
     RowBox[{"\[Eta]2", "\[Rule]", "1.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.926068472666231*^9, 3.9260685011374207`*^9}, 
   3.927741201284156*^9, 3.927741306906227*^9, 3.9277414963088713`*^9, 
   3.927742320330703*^9},
 CellLabel->
  "Out[355]=",ExpressionUUID->"6ad6e0b2-3a83-48e7-8d39-3e58de1c1a7e"]
}, Open  ]],

Cell["This is, as expected, the same result as the BTL solution.", "Text",
 CellChangeTimes->{{3.926068518224369*^9, 
  3.926068532112208*^9}},ExpressionUUID->"84412282-2d2d-46bb-861c-\
cd5ce10a599b"],

Cell["O\[CloseCurlyQuote]Donovan et al\[CloseCurlyQuote]s solution is similar \
to Crowd-BT", "Text",
 CellChangeTimes->{{3.926068534859661*^9, 
  3.926068550442767*^9}},ExpressionUUID->"a04b7856-7425-486c-a3f1-\
9b079f673925"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "ODonovan"], "Agree"], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", " ", "\[Mu]1_", ",", 
    "\[Mu]2_", ",", " ", "\[Lambda]_"}], "]"}], " ", ":=", "  ", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", "\[Mu]1"}], " ", 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", "\[Mu]2"}], "]"}], 
   "+", 
   RowBox[{"\[Lambda]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9260685562038393`*^9, 3.926068605865802*^9}},
 CellLabel->
  "In[356]:=",ExpressionUUID->"5e97eb87-02c8-43a7-8b2b-5ac9b0a587a4"],

Cell["\<\
Unlike Crowd-BT, O\[CloseCurlyQuote]Donovan et al\[CloseCurlyQuote]s solution \
is not as sensitive to the initial value of \[Mu].  We typically set it to 1, \
since this would be equivalent to the BTL.\
\>", "Text",
 CellChangeTimes->{{3.9260687087079268`*^9, 
  3.926068760451193*^9}},ExpressionUUID->"3337bb25-c29c-4237-ae6a-\
ea2bc633ac7b"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    FormBox[
     SubscriptBox["\[Mu]", "Initial"],
     TraditionalForm], " ", "=", " ", "1"}], ";"}]}]], "Input",
 CellLabel->
  "In[357]:=",ExpressionUUID->"e6a57d46-a51f-4dda-9c87-724a38794c57"],

Cell["\<\
We restrict the value of \[Mu] to [-2, 2] because, as before, the solver will \
reach an acceptable value well before hitting the theoretical minimum.\
\>", "Text",
 CellChangeTimes->{{3.926068940671549*^9, 
  3.926069001268868*^9}},ExpressionUUID->"a747a057-e5b8-4403-b5cf-\
076943c9efb3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minODonovanAgree0", ",", " ", "solODonovanAgree0"}], "}"}], "  ", 
  "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "ODonovan"], "Agree"], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[Mu]1", ",", "\[Mu]2", 
        ",", " ", "0"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{
       RowBox[{"-", "2"}], "\[LessEqual]", "\[Mu]1", "\[LessEqual]", "2"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "2"}], "\[LessEqual]", "\[Mu]2", "\[LessEqual]", "2"}]}], 
     "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]1", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]2", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"PrecisionGoal", "\[Rule]", "20"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minODonovanAgree1", ",", " ", "solODonovanAgree1"}], "}"}], "  ", 
  "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "ODonovan"], "Agree"], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[Mu]1", ",", "\[Mu]2", 
        ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{
       RowBox[{"-", "2"}], "\[LessEqual]", "\[Mu]1", "\[LessEqual]", "2"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "2"}], "\[LessEqual]", "\[Mu]2", "\[LessEqual]", "2"}]}], 
     "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]1", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]2", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"PrecisionGoal", "\[Rule]", "20"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.926068672583762*^9, 3.926068675746009*^9}, {
  3.926068816617331*^9, 3.92606893267312*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"169a28ef-2e5d-4678-9491-7364da7f7853"],

Cell[BoxData[
 TemplateBox[{
  "FindMinimum", "acceptlev", "\"Solved to acceptable level.\"", 2, 358, 33, 
   24962651052596380464, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9260688924919643`*^9, 3.9260689332191353`*^9}, 
   3.9277412013944807`*^9, 3.927741306964081*^9, 3.927741496370228*^9, 
   3.9277423203701363`*^9},
 CellLabel->
  "During evaluation of \
In[358]:=",ExpressionUUID->"d5329a4d-898d-4941-968e-e34b3b38c997"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.660893644839303`*^-13", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "8.365250059079978`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", "8.335358666922286`"}], ",", 
     RowBox[{"\[Mu]1", "\[Rule]", "1.8034665980136693`"}], ",", 
     RowBox[{"\[Mu]2", "\[Rule]", "1.8034665980136693`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.926068892499074*^9, 3.926068933223014*^9}, 
   3.927741201397478*^9, 3.927741306967146*^9, 3.9277414963733683`*^9, 
   3.927742320373238*^9},
 CellLabel->
  "Out[358]=",ExpressionUUID->"1cc3db4a-47c4-4517-a0a0-d07a0d5e3d8b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.1225818498587348`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "0.6254590572641379`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", "0.6254590572641379`"}], ",", 
     RowBox[{"\[Mu]1", "\[Rule]", "2.`"}], ",", 
     RowBox[{"\[Mu]2", "\[Rule]", "2.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.926068892499074*^9, 3.926068933223014*^9}, 
   3.927741201397478*^9, 3.927741306967146*^9, 3.9277414963733683`*^9, 
   3.927742320391169*^9},
 CellLabel->
  "Out[359]=",ExpressionUUID->"1c9a2619-4489-4760-9071-ea105c42ca3d"]
}, Open  ]],

Cell["\<\
To show this is the case, we can plug in the known theoretical solution and \
compare it to the numerically computed one.\
\>", "Text",
 CellChangeTimes->{{3.926069068526558*^9, 
  3.92606909639566*^9}},ExpressionUUID->"d799a3de-7b6f-4ef3-a598-\
91eb1fedbf7a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{
     SubscriptBox[
      SubscriptBox["L", "ODonovan"], "Agree"], "[", 
     RowBox[{
      RowBox[{"-", "10"}], ",", " ", "10", ",", " ", "2", ",", " ", "2", ",", 
      " ", "0"}], "]"}], "]"}], "<", 
   RowBox[{"N", "[", 
    RowBox[{
     SubscriptBox[
      SubscriptBox["L", "ODonovan"], "Agree"], "[", 
     RowBox[{
     "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[Mu]1", ",", "\[Mu]2", 
      ",", " ", "0"}], "]"}], "]"}]}], "/.", "solODonovanAgree0"}]], "Input",
 CellChangeTimes->{{3.926069004607933*^9, 3.926069063459931*^9}},
 CellLabel->
  "In[360]:=",ExpressionUUID->"da2a37b8-ee26-45f3-a631-a69da3c88306"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.926069020993449*^9, 3.926069064144005*^9}, 
   3.927741201421217*^9, 3.927741306986392*^9, 3.9277414963954153`*^9, 
   3.9277423203948927`*^9},
 CellLabel->
  "Out[360]=",ExpressionUUID->"6655a042-3fa7-49e8-8fb9-57be7db54664"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Disagreement", "Subsubsection",
 CellChangeTimes->{{3.926069131576396*^9, 
  3.9260691334811077`*^9}},ExpressionUUID->"50c3da7b-1e49-4964-abeb-\
67067df988a9"],

Cell["\<\
The disagreement works similarly to the agreement values above, but we will \
start the solution with \[FinalSigma]1=-0.1 and \[FinalSigma]2=0.1 so that \
the results are predictable.\
\>", "Text",
 CellChangeTimes->{{3.9260691402118597`*^9, 3.926069253259986*^9}, {
  3.926070211458417*^9, 
  3.926070214420826*^9}},ExpressionUUID->"7f4ee7cb-1639-4d9b-ad5e-\
82a1eb35a3aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "BTL"], "Disagree"], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", " ", "\[Lambda]_"}], "]"}],
   " ", ":=", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1"}], "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2"}], "]"}], "+", " ", 
   RowBox[{"\[Lambda]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.926069272831205*^9, 3.926069287745022*^9}},
 CellLabel->
  "In[361]:=",ExpressionUUID->"7dd1d160-9ac7-40ec-947b-2688bfdec79e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minBTLDisagree0", ",", " ", "solBTLDisagree0"}], "}"}], "  ", "=",
   " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "BTL"], "Disagree"], "[", 
       RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2", ",", " ", "0"}], 
       "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]", 
       "10"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]1", ",", 
        RowBox[{"-", "0.1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]2", ",", "0.1"}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"PrecisionGoal", "\[Rule]", "20"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minBTLDisagree1", ",", " ", "solBTLDisagree1"}], "}"}], "  ", "=",
   " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "BTL"], "Disagree"], "[", 
       RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2", ",", " ", "1"}], 
       "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]", 
       "10"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]1", ",", 
        RowBox[{"-", "0.1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]2", ",", "0.1"}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"PrecisionGoal", "\[Rule]", "20"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.926069300730998*^9, 3.926069362599155*^9}, {
  3.926070170455764*^9, 3.926070174749126*^9}},
 CellLabel->
  "In[362]:=",ExpressionUUID->"19dc9e0a-cf2a-4dee-8450-b19c1a4ad862"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.3862943611198906`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", "1.0239860699247783`*^-16"}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", "8.639275705252743`*^-17"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.926069363504242*^9, 3.9260693664532423`*^9}, 
   3.926070181876813*^9, 3.927741201451692*^9, 3.927741307011672*^9, 
   3.927741496420375*^9, 3.92774232041232*^9},
 CellLabel->
  "Out[362]=",ExpressionUUID->"0af2b4cf-ad2f-41e3-be4f-6ada6b233d6b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.1588830833596715`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "4.83566139648919`*^-18"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "3.3419067098544967`*^-17"}]}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.926069363504242*^9, 3.9260693664532423`*^9}, 
   3.926070181876813*^9, 3.927741201451692*^9, 3.927741307011672*^9, 
   3.927741496420375*^9, 3.9277423204284897`*^9},
 CellLabel->
  "Out[363]=",ExpressionUUID->"0d9f891e-da1f-4e4c-8e01-aa48dc13ee40"]
}, Open  ]],

Cell["\<\
As expected, the BTL solution converges to both stimuli having the same value.\
\>", "Text",
 CellChangeTimes->{{3.926069378290827*^9, 
  3.926069412221444*^9}},ExpressionUUID->"83997f9d-5ff1-4b3f-800f-\
992af369711e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "CrowdBT"], "Disagree"], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", " ", "\[Eta]1_", ",", 
    "\[Eta]2_", ",", " ", "\[Lambda]_"}], "]"}], " ", ":=", "  ", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", "\[Eta]1"}], " ", 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[Eta]2"}], " ", 
    "]"}], "+", 
   RowBox[{"\[Lambda]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9260694700045958`*^9, 3.9260694768906*^9}},
 CellLabel->
  "In[364]:=",ExpressionUUID->"c0e78c19-e047-4874-8c90-1018ea3ee2e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minCrowdBTDisagree0", ",", " ", "solCrowdBTDisagree0"}], "}"}], 
  "  ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "CrowdBT"], "Disagree"], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[Eta]1", ",", 
        "\[Eta]2", ",", "0"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]1", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]2", "\[LessEqual]", "1"}]}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]1", ",", " ", 
        RowBox[{"-", "0.1"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]2", ",", " ", "0.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]1", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]2", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.92606942045252*^9, 3.9260694574595613`*^9}, {
  3.926069508796015*^9, 3.926069561918988*^9}, {3.9260701781794567`*^9, 
  3.926070179344451*^9}},
 CellLabel->
  "In[365]:=",ExpressionUUID->"92d27f9e-8293-466b-b06c-0a05196e4300"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.179558847492933`*^-6", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "7.245536122302612`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", "7.245536122989046`"}], ",", 
     RowBox[{"\[Eta]1", "\[Rule]", "0.999999919090923`"}], ",", 
     RowBox[{"\[Eta]2", "\[Rule]", "8.09090769283881`*^-8"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.926069422061721*^9, 3.9260694490869904`*^9}, 
   3.926069563417821*^9, 3.9260701834944067`*^9, 3.927741201569701*^9, 
   3.927741307049049*^9, 3.9277414964573383`*^9, 3.927742320456255*^9},
 CellLabel->
  "Out[365]=",ExpressionUUID->"eb3d3196-5b07-416f-ac93-952e3ea0f120"]
}, Open  ]],

Cell["\<\
As noted in the paper, the symmetry means that our starting conditions \
controls which judge is reliable and which is not.  Here, we flip the sign of \
the starting values for \[Stigma], which results in the judges switching \
reliability estimates.\
\>", "Text",
 CellChangeTimes->{{3.926069591035699*^9, 
  3.926069672891493*^9}},ExpressionUUID->"6edd7dfa-8f54-4a8b-946e-\
45830e1c4a08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox[
       SubscriptBox["L", "CrowdBT"], "Disagree"], "[", 
      RowBox[{
      "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[Eta]1", ",", "\[Eta]2",
        ",", "0"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]", 
      "10"}], ",", 
     RowBox[{
      RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]", 
      "10"}], ",", 
     RowBox[{"0", "\[LessEqual]", "\[Eta]1", "\[LessEqual]", "1"}], ",", " ", 
     
     RowBox[{"0", "\[LessEqual]", "\[Eta]2", "\[LessEqual]", "1"}]}], "}"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[FinalSigma]1", ",", " ", "0.1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[FinalSigma]2", ",", " ", 
       RowBox[{"-", "0.1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Eta]1", ",", 
       SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Eta]2", ",", 
       SubscriptBox["\[Eta]", "Initial"]}], "}"}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.926069575561523*^9, 3.926069588199977*^9}, 
   3.926070019049472*^9, {3.926070189334156*^9, 3.926070190961968*^9}},
 CellLabel->
  "In[366]:=",ExpressionUUID->"4f34f984-5fe1-41a2-9ce8-e49aeb9f20db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.179558847492933`*^-6", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", "7.245536122302607`"}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "7.245536122989051`"}]}], ",", 
     RowBox[{"\[Eta]1", "\[Rule]", "8.09090769283881`*^-8"}], ",", 
     RowBox[{"\[Eta]2", "\[Rule]", "0.999999919090923`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.926070019603941*^9, 3.926070191461648*^9, 
  3.9277412015948753`*^9, 3.9277413070706043`*^9, 3.927741496480905*^9, 
  3.927742320479594*^9},
 CellLabel->
  "Out[366]=",ExpressionUUID->"3807b384-23e8-4573-8f7c-f6661ba55487"]
}, Open  ]],

Cell["The case is similar for O\[CloseCurlyQuote]Donovan et al.\
\[CloseCurlyQuote]s method", "Text",
 CellChangeTimes->{{3.926070035986394*^9, 
  3.9260700453565283`*^9}},ExpressionUUID->"6aaf3277-4be5-4bef-a8d8-\
8605718983e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "ODonovan"], "Disagree"], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", " ", "\[Mu]1_", ",", 
    "\[Mu]2_", ",", " ", "\[Lambda]_"}], "]"}], " ", ":=", "  ", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", "\[Mu]1"}], " ", 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[Mu]2"}], "]"}], 
   "+", 
   RowBox[{"\[Lambda]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.926070061024023*^9, 3.9260700668288107`*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"9c0606ab-46df-4845-ad07-50bf621aa73c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minODonovanDisagree0", ",", " ", "solODonovanDisagree0"}], "}"}], 
  "  ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "ODonovan"], "Disagree"], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[Mu]1", ",", "\[Mu]2", 
        ",", " ", "0"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{
       RowBox[{"-", "2"}], "\[LessEqual]", "\[Mu]1", "\[LessEqual]", "2"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "2"}], "\[LessEqual]", "\[Mu]2", "\[LessEqual]", "2"}]}], 
     "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]1", ",", 
        RowBox[{"-", "0.1"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]2", ",", "0.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]1", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]2", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"PrecisionGoal", "\[Rule]", "20"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minODonovanDisagree1", ",", " ", "solODonovanDisagree1"}], "}"}], 
  "  ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "ODonovan"], "Disagree"], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[Mu]1", ",", "\[Mu]2", 
        ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]", 
       "10"}], ",", 
      RowBox[{
       RowBox[{"-", "2"}], "\[LessEqual]", "\[Mu]1", "\[LessEqual]", "2"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "2"}], "\[LessEqual]", "\[Mu]2", "\[LessEqual]", "2"}]}], 
     "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]1", ",", 
        RowBox[{"-", "0.1"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]2", ",", "0.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]1", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]2", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"PrecisionGoal", "\[Rule]", "20"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.926070083779505*^9, 3.9260701118010807`*^9}, {
  3.926070195447729*^9, 3.9260701984875507`*^9}},
 CellLabel->
  "In[368]:=",ExpressionUUID->"d801d7dc-f1a7-4b96-898b-dd61ef662063"],

Cell[BoxData[
 TemplateBox[{
  "FindMinimum", "acceptlev", "\"Solved to acceptable level.\"", 2, 368, 34, 
   24962651052596380464, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926070113446558*^9, 3.926070199557794*^9, 
  3.9277412016270847`*^9, 3.927741307100225*^9, 3.9277414965104218`*^9, 
  3.927742320509266*^9},
 CellLabel->
  "During evaluation of \
In[368]:=",ExpressionUUID->"3eb614eb-9b08-48d5-936f-df5b04bf0e83"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.7785772854495798`*^-13", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "8.272061267921114`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", "8.338255080197865`"}], ",", 
     RowBox[{"\[Mu]1", "\[Rule]", "1.8095332852813284`"}], ",", 
     RowBox[{"\[Mu]2", "\[Rule]", 
      RowBox[{"-", "1.8087776276391554`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9260701134542103`*^9, 3.92607019956386*^9, 
  3.927741201630114*^9, 3.927741307103416*^9, 3.92774149651366*^9, 
  3.927742320512546*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"835d0fd2-0ad8-4c70-b3d2-23feab679351"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.1225818498587343`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "0.6254590572641379`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", "0.6254590572641379`"}], ",", 
     RowBox[{"\[Mu]1", "\[Rule]", "2.`"}], ",", 
     RowBox[{"\[Mu]2", "\[Rule]", 
      RowBox[{"-", "2.`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9260701134542103`*^9, 3.92607019956386*^9, 
  3.927741201630114*^9, 3.927741307103416*^9, 3.92774149651366*^9, 
  3.927742320531002*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"2178a0c5-132b-455a-baef-f0fb869d9f77"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Section 4: Creating Dictators", "Section",
 CellChangeTimes->{{3.926002853496553*^9, 3.926002862417021*^9}, {
  3.9260029678152*^9, 
  3.926002977041287*^9}},ExpressionUUID->"c676b1a4-14ff-498b-9124-\
4621fd857848"],

Cell[TextData[{
 "This example corresponds to Section 4 in the paper, where  we have ",
 StyleBox["n",
  FontSlant->"Italic"],
 " judges and ",
 StyleBox["n+1",
  FontSlant->"Italic"],
 " stimuli.  All of the judges have a single ",
 "\[OpenCurlyDoubleQuote]",
 StyleBox["error",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote]",
 StyleBox[" ",
  FontSlant->"Italic"],
 " that corresponds to their index.  Conceptually each judge should be \
equally reliable since they make an equally bad error.  Unfortunately, this \
will not be the result."
}], "Text",
 CellChangeTimes->{{3.926002987319954*^9, 
  3.9260030462861156`*^9}},ExpressionUUID->"d55dcf44-37a5-4a4b-9e12-\
9828ebe7fd41"],

Cell[TextData[{
 "We identify the equations using the label ",
 Cell[BoxData[
  FormBox["\"\<[method\!\(
\*SubscriptBox[\(]\), \(Dictators, \([n]\)\)]\)\>", TraditionalForm]],
  ExpressionUUID->"3bf854ae-776c-45c5-9af1-dce77c1b910b"],
 "\[CloseCurlyDoubleQuote] where [method] will be {BTL, CrowdBT, ODonovan} \
corresponding to the model being used and [n] is the number of judges."
}], "Text",
 CellChangeTimes->{{3.926003201384911*^9, 
  3.9260033877584553`*^9}},ExpressionUUID->"d43a7ace-d6e0-49e4-ae79-\
7b897dacebc0"],

Cell[CellGroupData[{

Cell["Bradley-Terry-Luce", "Subsection",
 CellChangeTimes->{{3.926003117705494*^9, 
  3.9260031221692657`*^9}},ExpressionUUID->"752b864c-77bb-4cc5-ba69-\
a48b1f97d7ef"],

Cell["\<\
With four different judges, for every pair, we always have three judges who \
agree and one that disagrees.\
\>", "Text",
 CellChangeTimes->{{3.926003168995023*^9, 3.926003198183095*^9}, {
  3.92600349359769*^9, 
  3.9260034992482347`*^9}},ExpressionUUID->"dcfad2ba-158e-4055-bc9b-\
288ad3748655"],

Cell["\<\
We can create the patterns for 4 and 5 judges, since this will be the region \
of interest for the other methods. Note that we can simply scale the (n-1) \
decisions where the judges agree to simplify the equations.\
\>", "Text",
 CellChangeTimes->{{3.9260035018691597`*^9, 3.9260035337262487`*^9}, {
  3.9260035976492643`*^9, 
  3.9260036467517*^9}},ExpressionUUID->"8085375b-9472-4531-bff9-6596fa276dc0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "BTL"], 
    RowBox[{"Dictators", ",", "4"}]], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", "\[FinalSigma]3_", ",", 
    " ", "\[FinalSigma]4_", ",", " ", "\[FinalSigma]5_", ",", " ", 
    "\[Lambda]_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"3", "*", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "BTL"], "[", 
       RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1"}], "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "BTL"], "[", 
       RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2"}], "]"}], " ", "+", 
      RowBox[{
       SubscriptBox["L", "BTL"], "[", 
       RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3"}], "]"}], "+", 
      RowBox[{
       SubscriptBox["L", "BTL"], "[", 
       RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4"}], "]"}]}], ")"}]}], 
   " ", "+", 
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2"}], "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]3"}], "]"}], "+", " ", 
   RowBox[{"+", " ", 
    RowBox[{
     SubscriptBox["L", "BTL"], "[", 
     RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]4"}], "]"}]}], "+", 
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]5"}], "]"}], " ", "+", " ", 
   RowBox[{"\[Lambda]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}], "+", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]3", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]4", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]5", "]"}]}], 
     ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "BTL"], 
    RowBox[{"Dictators", ",", "5"}]], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", "\[FinalSigma]3_", ",", 
    " ", "\[FinalSigma]4_", ",", " ", "\[FinalSigma]5_", ",", 
    "\[FinalSigma]6_", ",", "  ", "\[Lambda]_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"4", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "BTL"], "[", 
       RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1"}], "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "BTL"], "[", 
       RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2"}], "]"}], " ", "+", 
      RowBox[{
       SubscriptBox["L", "BTL"], "[", 
       RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3"}], "]"}], "+", 
      RowBox[{
       SubscriptBox["L", "BTL"], "[", 
       RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4"}], "]"}], "+", 
      RowBox[{
       SubscriptBox["L", "BTL"], "[", 
       RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5"}], "]"}]}], ")"}]}], 
   " ", "+", 
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2"}], "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]3"}], "]"}], "+", " ", 
   RowBox[{"+", " ", 
    RowBox[{
     SubscriptBox["L", "BTL"], "[", 
     RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]4"}], "]"}]}], "+", 
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]5"}], "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]6"}], "]"}], " ", "+", " ", 
   RowBox[{"\[Lambda]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}], "+", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]3", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]4", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]5", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]6", "]"}]}], 
     ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.926003229589149*^9, 3.926003244043271*^9}, {
   3.926003283906713*^9, 3.926003284064908*^9}, {3.92600356033736*^9, 
   3.9260035627113457`*^9}, 3.9260040676207533`*^9},
 CellLabel->
  "In[370]:=",ExpressionUUID->"2990a8c9-f04a-4b30-8c0e-5d521c2e09b1"],

Cell["Now we can solve for the minimum and the scale values", "Text",
 CellChangeTimes->{{3.926003421965642*^9, 
  3.926003436780438*^9}},ExpressionUUID->"a02c2460-069e-4d47-a1b4-\
5bdfca008103"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Lambda]", 
    SubscriptBox["BLT", "Dictators"]], "=", " ", 
   SubscriptBox["\[Lambda]", "Default"]}], ";"}]], "Input",
 CellChangeTimes->{{3.926003910400674*^9, 3.926003970763114*^9}, {
  3.9260041052962303`*^9, 3.926004136031054*^9}, {3.9260095499256372`*^9, 
  3.926009558816906*^9}},
 CellLabel->
  "In[372]:=",ExpressionUUID->"9396b232-1f53-46b6-8206-47bbde6edef3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minBTLDictators4", ",", " ", "solBTLDictators4"}], "}"}], "  ", 
  "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "BTL"], 
        RowBox[{"Dictators", ",", "4"}]], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
        " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", 
        SubscriptBox["\[Lambda]", 
         SubscriptBox["BLT", "Dictators"]]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]",
        "100"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", " ", "\[FinalSigma]3",
       ",", "\[FinalSigma]4", ",", "\[FinalSigma]5"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.926003441331234*^9, 3.9260034652428293`*^9}, 
   3.92600378140904*^9, {3.9260038694148703`*^9, 3.926003887789467*^9}, 
   3.9260039479130163`*^9, {3.926004756499962*^9, 3.9260047567101727`*^9}, {
   3.9260095121364517`*^9, 3.9260095138621683`*^9}},
 CellLabel->
  "In[373]:=",ExpressionUUID->"d2925fa9-ff72-40c2-ba81-f199f4b247f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8.997371864036275`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "2.1971784596607535`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "1.0985672378866176`"}]}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", "0.000043316987160174625`"}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", "1.0986538718778804`"}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", "2.197265093675795`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.926003439336894*^9, 3.9260034657589073`*^9}, 
   3.926003785422956*^9, 3.9260038975144577`*^9, {3.926003951943516*^9, 
   3.926003974135323*^9}, {3.926004107970674*^9, 3.9260041152870626`*^9}, 
   3.926004147244154*^9, 3.9260095165406837`*^9, 3.9260095607606897`*^9, 
   3.926065383142652*^9, 3.9260664243226633`*^9, 3.927741201704165*^9, 
   3.92774130715839*^9, 3.927741496570938*^9, 3.927742320573867*^9},
 CellLabel->
  "Out[373]=",ExpressionUUID->"89afc7f2-334c-4837-869e-7371e2f40a8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minBTLDictators5", ",", " ", "solBTLDictators5"}], "}"}], "  ", 
  "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "BTL"], 
        RowBox[{"Dictators", ",", "5"}]], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
        " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", 
        "\[FinalSigma]6", ",", " ", 
        SubscriptBox["\[Lambda]", 
         SubscriptBox["BLT", "Dictators"]]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]6", "\[LessEqual]",
        "100"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", " ", "\[FinalSigma]3",
       ",", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", "\[FinalSigma]6"}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.926003664927368*^9, 3.9260037834595013`*^9, {3.9260038921006937`*^9, 
   3.9260038954591703`*^9}, 3.926003950679291*^9, {3.926004072430188*^9, 
   3.926004085021412*^9}, 3.926004754635384*^9, {3.926009508397554*^9, 
   3.9260095094593887`*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"540fd9bb-035d-47a2-bb1b-c89b8958c6dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12.510075281175748`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "3.465629889030305`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "2.0793367024215272`"}]}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", 
      RowBox[{"-", "0.693044488541277`"}]}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", "0.693247308275539`"}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", "2.0795395222465665`"}], ",", 
     RowBox[{"\[FinalSigma]6", "\[Rule]", "3.4658327089141943`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.926003978717989*^9, 3.926004053152602*^9, {3.926004085869398*^9, 
   3.926004118177021*^9}, 3.9260041482700567`*^9, 3.926009517784446*^9, {
   3.926009551626464*^9, 3.9260095620989723`*^9}, 3.926065383169175*^9, 
   3.926066424350567*^9, 3.927741201731475*^9, 3.927741307184647*^9, 
   3.927741496598509*^9, 3.9277423206019087`*^9},
 CellLabel->
  "Out[374]=",ExpressionUUID->"fb5eaf26-ae24-4cec-8007-644c9e33c2a9"]
}, Open  ]],

Cell[TextData[{
 "We can see that the optimal latent scale is symmetric about 0 using the \
virtual node formulation, and we can see that the distances between the \
values are approximately uniform.  We say approximately because with the \
\[Lambda] penalty, the scale gets compressed a bit toward 0; when \
\[Lambda]=0, the resulting absolute values may vary, but the distances \
between the stimuli will be uniform.  Try changing ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", 
    SubscriptBox["BTL", "Dictators"]], TraditionalForm]],ExpressionUUID->
  "c00b08e2-1098-4e19-9c2a-ce54da2995b0"],
 " to see this effect."
}], "Text",
 CellChangeTimes->{{3.926003814495462*^9, 3.926003838701858*^9}, {
  3.926004157949133*^9, 
  3.926004179577317*^9}},ExpressionUUID->"d74429e5-afa9-4af3-abd6-\
9ace92038f98"],

Cell["\<\
The following expressions compute the distance between neighboring scale \
values:\
\>", "Text",
 CellChangeTimes->{{3.9260041923503437`*^9, 
  3.926004213455674*^9}},ExpressionUUID->"eb3143fa-cfa8-46e3-bfb9-\
b96849c6d339"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"\[FinalSigma]2", " ", "-", "\[FinalSigma]1"}], "]"}], ",", " ", 
    
    RowBox[{"N", "[", 
     RowBox[{"\[FinalSigma]4", " ", "-", "\[FinalSigma]3"}], " ", "]"}], ",", 
    
    RowBox[{"N", "[", 
     RowBox[{"\[FinalSigma]5", " ", "-", "\[FinalSigma]4"}], " ", "]"}]}], 
   "}"}], "/.", " ", "solBTLDictators4"}]], "Input",
 CellChangeTimes->{{3.9260039968093348`*^9, 3.926004023430827*^9}, {
  3.926009483984816*^9, 3.9260095044948883`*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"9562e18c-d800-41bd-9298-0263b9519b01"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.098611221774136`", ",", "1.0986105548907203`", ",", 
   "1.0986112217979145`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.926004015138411*^9, {3.926004097644751*^9, 3.926004119102007*^9}, 
   3.9260041493213043`*^9, 3.926009520073884*^9, {3.926009554131464*^9, 
   3.9260095641908712`*^9}, 3.926065383172804*^9, 3.9260664243542747`*^9, 
   3.927741201735471*^9, 3.927741307188306*^9, 3.9277414966023293`*^9, 
   3.927742320605644*^9},
 CellLabel->
  "Out[375]=",ExpressionUUID->"d43be31e-96c7-4f08-b44c-bf130a990b00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"\[FinalSigma]2", " ", "-", "\[FinalSigma]1"}], " ", "]"}], ",", 
    " ", 
    RowBox[{"N", "[", 
     RowBox[{"\[FinalSigma]4", " ", "-", "\[FinalSigma]3"}], "]"}], ",", 
    RowBox[{"N", "[", 
     RowBox[{"\[FinalSigma]5", " ", "-", "\[FinalSigma]4"}], "]"}], ",", 
    RowBox[{"N", "[", 
     RowBox[{"\[FinalSigma]6", " ", "-", "\[FinalSigma]5"}], "]"}]}], "}"}], "/.",
   " ", "solBTLDictators5"}]], "Input",
 CellChangeTimes->{{3.926004030084119*^9, 3.926004048749813*^9}, {
  3.926009524141032*^9, 3.9260095439119253`*^9}},
 CellLabel->
  "In[376]:=",ExpressionUUID->"c4caf227-bac7-48ab-9087-1b284ef273e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.386293186608778`", ",", "1.386291796816816`", ",", "1.3862922139710274`",
    ",", "1.3862931866676278`"}], "}"}]], "Output",
 CellChangeTimes->{{3.926004038778062*^9, 3.9260040543491793`*^9}, {
   3.9260040926603603`*^9, 3.926004150269416*^9}, {3.926009545233821*^9, 
   3.926009567948338*^9}, 3.926065383179867*^9, 3.926066424361868*^9, 
   3.927741201752351*^9, 3.927741307199601*^9, 3.927741496614463*^9, 
   3.9277423206199083`*^9},
 CellLabel->
  "Out[376]=",ExpressionUUID->"3f8cb8b3-a937-4f39-a8ad-f9fb0ddf7796"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chen el al.\[CloseCurlyQuote]s Crowd-BT", "Subsection",
 CellChangeTimes->{{3.9260031282236147`*^9, 
  3.92600313752748*^9}},ExpressionUUID->"693a091e-a5d8-4379-a857-\
bc2af52f78ce"],

Cell[TextData[{
 "We now compute the results from Section 4.1.  Unlike in the BTL case above, \
we enumerate all of the votes because of the judge reliabilities. Because \
Crowd-BT will no exhibit the equality behavior, we show the results for \
n={4,5,6}.  We have additional cases in ",
 StyleBox["julia/input/dictators/symmetric",
  FontSlant->"Italic"],
 " to demonstrate the results with n={10, 25}. "
}], "Text",
 CellChangeTimes->{{3.926006341535802*^9, 3.926006411409342*^9}, {
   3.926006474257887*^9, 3.9260064951476307`*^9}, {3.9260164718531446`*^9, 
   3.9260165063506393`*^9}, 
   3.926065811479617*^9},ExpressionUUID->"f3009a25-9ace-4c11-91e6-\
175303b39e3d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "CrowdBT"], 
    RowBox[{"Dictators", ",", "4"}]], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", "\[FinalSigma]3_", ",", 
    " ", "\[FinalSigma]4_", ",", " ", "\[FinalSigma]5_", ",", " ", "\[Eta]1_",
     ",", "\[Eta]2_", ",", "\[Eta]3_", ",", " ", "\[Eta]4_", ",", 
    "\[Lambda]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2", ",", " ", "\[Eta]1"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Eta]1"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Eta]1"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Eta]1"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Eta]2"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]3", ",", " ", "\[Eta]2"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Eta]2"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Eta]2"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Eta]3"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Eta]3"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]4", ",", " ", "\[Eta]3"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Eta]3"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Eta]4"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Eta]4"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", "\[Eta]4"}], "]"}], 
   " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", "\[Eta]4"}], 
    "]"}], "+", " ", 
   RowBox[{"\[Lambda]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}], "+", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]3", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]4", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]5", "]"}]}], 
     ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "CrowdBT"], 
    RowBox[{"Dictators", ",", "5"}]], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", "\[FinalSigma]3_", ",", 
    " ", "\[FinalSigma]4_", ",", " ", "\[FinalSigma]5_", ",", " ", 
    "\[FinalSigma]6_", ",", "\[Eta]1_", ",", "\[Eta]2_", ",", "\[Eta]3_", ",",
     " ", "\[Eta]4_", ",", "\[Eta]5_", ",", "\[Lambda]_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2", ",", " ", "\[Eta]1"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Eta]1"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Eta]1"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Eta]1"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Eta]1"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Eta]2"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]3", ",", " ", "\[Eta]2"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Eta]2"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Eta]2"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Eta]2"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Eta]3"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Eta]3"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]4", ",", " ", "\[Eta]3"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Eta]3"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Eta]3"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Eta]4"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Eta]4"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", "\[Eta]4"}], "]"}], 
   " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", "\[Eta]4"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Eta]4"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Eta]5"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Eta]5"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", "\[Eta]5"}], "]"}], 
   " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Eta]5"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Eta]5"}], 
    "]"}], "+", "  ", 
   RowBox[{"\[Lambda]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}], "+", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]3", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]4", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]5", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]6", "]"}]}], 
     ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "CrowdBT"], 
    RowBox[{"Dictators", ",", "6"}]], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", "\[FinalSigma]3_", ",", 
    " ", "\[FinalSigma]4_", ",", " ", "\[FinalSigma]5_", ",", " ", 
    "\[FinalSigma]6_", ",", "\[FinalSigma]7_", ",", "\[Eta]1_", ",", 
    "\[Eta]2_", ",", "\[Eta]3_", ",", " ", "\[Eta]4_", ",", "\[Eta]5_", ",", 
    "\[Eta]6_", ",", "\[Lambda]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2", ",", " ", "\[Eta]1"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Eta]1"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Eta]1"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Eta]1"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Eta]1"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]7", ",", "\[FinalSigma]6", ",", " ", "\[Eta]1"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Eta]2"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]3", ",", " ", "\[Eta]2"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Eta]2"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Eta]2"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Eta]2"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]7", ",", "\[FinalSigma]6", ",", " ", "\[Eta]2"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Eta]3"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Eta]3"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]4", ",", " ", "\[Eta]3"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Eta]3"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Eta]3"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]7", ",", "\[FinalSigma]6", ",", " ", "\[Eta]3"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Eta]4"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Eta]4"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", "\[Eta]4"}], "]"}], 
   " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", "\[Eta]4"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Eta]4"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]7", ",", "\[FinalSigma]6", ",", " ", "\[Eta]4"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Eta]5"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Eta]5"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", "\[Eta]5"}], "]"}], 
   " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Eta]5"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Eta]5"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]7", ",", "\[FinalSigma]6", ",", " ", "\[Eta]5"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Eta]6"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Eta]6"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", "\[Eta]6"}], "]"}], 
   " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Eta]6"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]6", ",", " ", "\[Eta]6"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]7", ",", " ", "\[Eta]6"}], 
    "]"}], "+", " ", 
   RowBox[{"\[Lambda]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}], "+", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]3", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]4", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]5", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]6", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]7", "]"}]}], 
     ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.926006439665278*^9, 3.926006442786991*^9}, {
  3.926006575974016*^9, 3.926006580787324*^9}},
 CellLabel->
  "In[377]:=",ExpressionUUID->"dba31148-3f02-49b7-9abe-c0070a99aaac"],

Cell["\<\
As before, we set a value of \[Lambda] to uniquely identify the solution.  \
Values of {0, 1} will produce similar results. Particularly when using the \
\[Lambda] = 1, more precision may be required.  This can be set by adding \
something like WorkingPrecision\[Rule]10.\
\>", "Text",
 CellChangeTimes->{{3.926006618288892*^9, 3.9260066495333443`*^9}, {
  3.9260070008173523`*^9, 3.9260070156164083`*^9}, {3.926007109523445*^9, 
  3.926007154663986*^9}},ExpressionUUID->"9dad19b0-3c50-464e-af9f-\
8b716c984571"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Lambda]", 
    SubscriptBox["CrowdBT", "Dictators"]], "=", " ", 
   SubscriptBox["\[Lambda]", "Default"]}], ";"}]], "Input",
 CellChangeTimes->{{3.926006600211051*^9, 3.926006602070195*^9}, {
   3.926006955840597*^9, 3.926006971631549*^9}, 3.926007171921062*^9, {
   3.926007317548996*^9, 3.926007323939247*^9}, {3.926007661893881*^9, 
   3.926007681735897*^9}, {3.9260077235348577`*^9, 3.926007767374309*^9}, {
   3.9260082795632257`*^9, 3.926008290377157*^9}},
 CellLabel->
  "In[380]:=",ExpressionUUID->"10114c1c-64ba-4769-b971-244c0e86b7ae"],

Cell[TextData[{
 "We can also define an initial guess for \[Eta]. Note that Crowd-BT is often \
sensitive to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Eta]", "Initial"], TraditionalForm]],ExpressionUUID->
  "5c46b353-ab37-432e-8890-e697ba3c40ad"],
 ".  This is because there are many regions of fairly low curvature. \
Increasing the solution tolerances or running it with random start values.  \
We use the value ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Eta]", "Initial"], TraditionalForm]],ExpressionUUID->
  "7c158a7c-9212-4ef2-ab44-69262a09b880"],
 " = 0.9 for the Julia code and reproduce that here.  For a demonstration of \
the divergent values, try setting ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Eta]", "Initial"], TraditionalForm]],ExpressionUUID->
  "c005d2e1-ad8a-4393-b2bf-3729f7220ece"],
 " = 0.8."
}], "Text",
 CellChangeTimes->{{3.926007769944428*^9, 3.9260078854169703`*^9}, {
  3.926007940372209*^9, 3.926007941254333*^9}, {3.926008215105555*^9, 
  3.926008234197504*^9}, {3.926008308375184*^9, 3.926008366787203*^9}, {
  3.926065816899211*^9, 
  3.926065819025895*^9}},ExpressionUUID->"740ca24f-7d68-4b1c-9c04-\
47df18fbba88"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Eta]", "Initial"], "=", " ", "0.9"}], ";"}]], "Input",
 CellChangeTimes->{{3.926007912502887*^9, 3.926007912915889*^9}, {
  3.926007951410572*^9, 3.926007972996683*^9}, {3.9260082895328293`*^9, 
  3.9260083055541697`*^9}, {3.926008348862825*^9, 3.926008369304092*^9}},
 CellLabel->
  "In[381]:=",ExpressionUUID->"05b5f70c-f1bb-45d1-8298-fa92c51eb150"],

Cell["And now we solve the minimums.", "Text",
 CellChangeTimes->{{3.9260066127410583`*^9, 3.926006616516988*^9}, {
  3.9260066521288567`*^9, 
  3.926006665057269*^9}},ExpressionUUID->"1e6bd4ab-0d0f-4e2a-bf1b-\
a08ec85ddab3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minCrowdBTDictators4", ",", " ", "solCrowdBTDictators4"}], "}"}], 
  "  ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "CrowdBT"], 
        RowBox[{"Dictators", ",", "4"}]], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
        " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", "\[Eta]1", ",", 
        "\[Eta]2", ",", "\[Eta]3", ",", " ", "\[Eta]4", ",", 
        SubscriptBox["\[Lambda]", 
         SubscriptBox["CrowdBT", "Dictators"]]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]1", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]2", "\[LessEqual]", "1"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]3", "\[LessEqual]", "1"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]4", "\[LessEqual]", "1"}]}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", " ", "\[FinalSigma]3",
       ",", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]1", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]2", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]3", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{"\[Eta]4", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.926006752606535*^9, 3.9260068262377853`*^9}, {
  3.926007338968679*^9, 3.926007355478466*^9}, {3.926066278619666*^9, 
  3.926066280352769*^9}},
 CellLabel->
  "In[382]:=",ExpressionUUID->"c16ef0cc-aa3f-4114-85da-00b8d8320dc2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8.317801466861564`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "14.460042227128833`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", "0.012629218451919007`"}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", 
      RowBox[{"-", "6.348461479326308`*^-8"}]}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", 
      RowBox[{"-", "0.01262934542121181`"}]}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", "14.466181330205847`"}], ",", 
     RowBox[{"\[Eta]1", "\[Rule]", "0.4968429671797373`"}], ",", 
     RowBox[{"\[Eta]2", "\[Rule]", "0.9999999645418102`"}], ",", 
     RowBox[{"\[Eta]3", "\[Rule]", "0.9999999645418102`"}], ",", 
     RowBox[{"\[Eta]4", "\[Rule]", "0.49684296717982307`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.9260069736254663`*^9, 3.926007173852762*^9, 3.926007357346973*^9, {
   3.926007665325355*^9, 3.926007685553856*^9}, {3.926007726065565*^9, 
   3.9260077523122253`*^9}, 3.9260079148603773`*^9, {3.926007961812264*^9, 
   3.92600797482815*^9}, 3.9260080506224117`*^9, {3.926008294237916*^9, 
   3.926008321286367*^9}, {3.926008352686013*^9, 3.9260083720363007`*^9}, 
   3.9260653008786907`*^9, 3.926065383275339*^9, 3.926066424463255*^9, 
   3.927741201858547*^9, 3.927741307291663*^9, 3.927741496707345*^9, 
   3.927742320717251*^9},
 CellLabel->
  "Out[382]=",ExpressionUUID->"a03b75fb-b561-4ce6-93eb-c43393e233b8"]
}, Open  ]],

Cell["\<\
Below, we solve the problem allowing Mathematica to set initial values for \
\[Eta]. Note that this solution may be different from the one above, \
sometimes quite dramatically.\
\>", "Text",
 CellChangeTimes->{{3.9260079837617903`*^9, 
  3.926008037657111*^9}},ExpressionUUID->"07f9b4be-82e6-4362-a317-\
06dc4c5ee16f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox[
       SubscriptBox["L", "CrowdBT"], 
       RowBox[{"Dictators", ",", "4"}]], "[", 
      RowBox[{
      "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
       " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", "\[Eta]1", ",", 
       "\[Eta]2", ",", "\[Eta]3", ",", " ", "\[Eta]4", ",", 
       SubscriptBox["\[Lambda]", 
        SubscriptBox["CrowdBT", "Dictators"]]}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]", 
      "100"}], ",", 
     RowBox[{
      RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]", 
      "100"}], ",", 
     RowBox[{
      RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]", 
      "100"}], ",", 
     RowBox[{
      RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]", 
      "100"}], ",", 
     RowBox[{
      RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]", 
      "100"}], ",", 
     RowBox[{"0", "\[LessEqual]", "\[Eta]1", "\[LessEqual]", "1"}], ",", " ", 
     
     RowBox[{"0", "\[LessEqual]", "\[Eta]2", "\[LessEqual]", "1"}], ",", 
     RowBox[{"0", "\[LessEqual]", "\[Eta]3", "\[LessEqual]", "1"}], ",", 
     RowBox[{"0", "\[LessEqual]", "\[Eta]4", "\[LessEqual]", "1"}]}], "}"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", " ", "\[FinalSigma]3", 
     ",", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", "\[Eta]1", ",", 
     "\[Eta]2", ",", "\[Eta]3", ",", " ", "\[Eta]4"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.926007893147513*^9, 3.9260079074123983`*^9}},
 CellLabel->
  "In[383]:=",ExpressionUUID->"84330c04-9528-4048-a5a5-17400255f800"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8.31780146574335`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "14.495600514253416`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", "0.012692045684853336`"}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", "1.6394516977968048`*^-8"}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", 
      RowBox[{"-", "0.012692012895802742`"}]}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", "14.49560092170411`"}], ",", 
     RowBox[{"\[Eta]1", "\[Rule]", "0.4968272796976954`"}], ",", 
     RowBox[{"\[Eta]2", "\[Rule]", "0.9999999645466296`"}], ",", 
     RowBox[{"\[Eta]3", "\[Rule]", "0.9999999645466296`"}], ",", 
     RowBox[{"\[Eta]4", "\[Rule]", "0.49682727969768403`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9260079095019093`*^9, 3.9260079176133327`*^9}, {
   3.926007956150434*^9, 3.9260079768741713`*^9}, 3.926008051937085*^9, {
   3.926008296122361*^9, 3.926008373926979*^9}, 3.92606526717743*^9, 
   3.926065302231514*^9, 3.9260653833544283`*^9, 3.9260664245481253`*^9, 
   3.927741201934781*^9, 3.927741307371408*^9, 3.927741496784193*^9, 
   3.927742320793133*^9},
 CellLabel->
  "Out[383]=",ExpressionUUID->"50ba513b-e1c7-47d3-91ce-ec37bd0d8843"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["Judges", 
    RowBox[{"CrowdBT", ",", "4"}]], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Eta]1", ",", "\[Eta]2", ",", "\[Eta]3", ",", " ", "\[Eta]4"}],
      " ", "}"}], " ", "/.", " ", "solCrowdBTDictators4"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Min", "[", 
    SubscriptBox["Judges", 
     RowBox[{"CrowdBT", ",", "4"}]], "]"}], ",", 
   RowBox[{"Max", "[", 
    SubscriptBox["Judges", 
     RowBox[{"CrowdBT", ",", "4"}]], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.9260068453546247`*^9, 3.926006860566115*^9}, {
   3.926065229688839*^9, 3.926065259744323*^9}, 3.9260662934768457`*^9},
 CellLabel->
  "In[384]:=",ExpressionUUID->"78d24f3e-3d9b-4749-94e1-cfc554eb3e57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.4968429671797373`", ",", "0.9999999645418102`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.926007367403858*^9, 3.9260076874632883`*^9, {3.926008045654498*^9, 
   3.9260080546547537`*^9}, 3.92600832510891*^9, 3.9260083649437*^9, {
   3.9260652601413393`*^9, 3.926065268217465*^9}, 3.926065303798233*^9, 
   3.9260653834280252`*^9, 3.926066424552319*^9, 3.927741201939378*^9, 
   3.927741307375404*^9, 3.927741496788022*^9, 3.9277423207969093`*^9},
 CellLabel->
  "Out[385]=",ExpressionUUID->"8bb98b0f-766b-43bc-b4f6-e4ba9921a2ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minCrowdBTDictators5", ",", " ", "solCrowdBTDictators5"}], "}"}], 
  " ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "CrowdBT"], 
        RowBox[{"Dictators", ",", "5"}]], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
        " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", 
        "\[FinalSigma]6", ",", "\[Eta]1", ",", "\[Eta]2", ",", "\[Eta]3", ",",
         " ", "\[Eta]4", ",", "\[Eta]5", ",", 
        SubscriptBox["\[Lambda]", 
         SubscriptBox["CrowdBT", "Dictators"]]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]6", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]1", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]2", "\[LessEqual]", "1"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]3", "\[LessEqual]", "1"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]4", "\[LessEqual]", "1"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]5", "\[LessEqual]", "1"}]}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", " ", "\[FinalSigma]3",
       ",", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", "\[FinalSigma]6", 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]1", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]2", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]3", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{"\[Eta]4", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{"\[Eta]5", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.926006827807508*^9, 3.926006829045229*^9}, {
   3.926007093476762*^9, 3.926007104891873*^9}, {3.92600715715458*^9, 
   3.926007165477108*^9}, {3.9260073730758247`*^9, 3.9260073774642076`*^9}, 
   3.926007517191915*^9, {3.926066297656636*^9, 3.926066298838543*^9}},
 CellLabel->
  "In[386]:=",ExpressionUUID->"bb372ce6-aba3-488a-af87-2631a7370778"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9.791037965297782`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "15.489693748342102`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "14.206424497200704`"}]}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", 
      RowBox[{"-", "0.4109756582022129`"}]}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", "0.8722920343292414`"}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", "2.155560258692669`"}], ",", 
     RowBox[{"\[FinalSigma]6", "\[Rule]", "17.454550375790095`"}], ",", 
     RowBox[{"\[Eta]1", "\[Rule]", "0.9999999014287863`"}], ",", 
     RowBox[{"\[Eta]2", "\[Rule]", "0.7490182344869128`"}], ",", 
     RowBox[{"\[Eta]3", "\[Rule]", "0.9999999014295714`"}], ",", 
     RowBox[{"\[Eta]4", "\[Rule]", "0.9999999014293035`"}], ",", 
     RowBox[{"\[Eta]5", "\[Rule]", "0.999999988191983`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.926006832576049*^9, {3.9260069640289307`*^9, 3.926006984250238*^9}, 
   3.926007095162239*^9, {3.926007159282501*^9, 3.926007176419512*^9}, 
   3.926007380915262*^9, 3.926007688703351*^9, 3.926007727623774*^9, {
   3.926065295556666*^9, 3.9260653055237713`*^9}, 3.926065383527779*^9, 
   3.926066424649032*^9, 3.927741202039878*^9, 3.9277413074775143`*^9, 
   3.927741496893674*^9, 3.927742320895419*^9},
 CellLabel->
  "Out[386]=",ExpressionUUID->"2bd40e41-2516-4437-b228-f9e805ec284b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["Judges", 
    RowBox[{"CrowdBT", ",", "5"}]], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Eta]1", ",", "\[Eta]2", ",", "\[Eta]3", ",", " ", "\[Eta]4", ",", 
      "\[Eta]5"}], " ", "}"}], " ", "/.", " ", "solCrowdBTDictators5"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Min", "[", 
    SubscriptBox["Judges", 
     RowBox[{"CrowdBT", ",", "5"}]], "]"}], ",", 
   RowBox[{"Max", "[", 
    SubscriptBox["Judges", 
     RowBox[{"CrowdBT", ",", "5"}]], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.9260069082419357`*^9, 3.926006931750266*^9}, 
   3.92606630088022*^9},
 CellLabel->
  "In[387]:=",ExpressionUUID->"6fa4092b-a83d-473b-bc3b-aadf77de2e84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7490182344869128`", ",", "0.999999988191983`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.9260069338929768`*^9, {3.9260069650422297`*^9, 3.926006985274826*^9}, 
   3.9260070968383303`*^9, {3.926007162689229*^9, 3.926007177650209*^9}, 
   3.926007382950831*^9, 3.926007691730981*^9, 3.926007729986144*^9, 
   3.926065306510305*^9, 3.926065383531863*^9, 3.926066424722076*^9, 
   3.927741202044551*^9, 3.927741307481532*^9, 3.927741496915114*^9, 
   3.927742320917037*^9},
 CellLabel->
  "Out[388]=",ExpressionUUID->"4018f5e9-d60b-4862-ba7a-c67bd0a7ae84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minCrowdBTDictators6", ",", " ", "solCrowdBTDictators6"}], "}"}], 
  "  ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "CrowdBT"], 
        RowBox[{"Dictators", ",", "6"}]], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
        " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", 
        "\[FinalSigma]6", ",", "\[FinalSigma]7", ",", "\[Eta]1", ",", 
        "\[Eta]2", ",", "\[Eta]3", ",", " ", "\[Eta]4", ",", "\[Eta]5", ",", 
        "\[Eta]6", ",", 
        SubscriptBox["\[Lambda]", 
         SubscriptBox["CrowdBT", "Dictators"]]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]6", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]7", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]1", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]2", "\[LessEqual]", "1"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]3", "\[LessEqual]", "1"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]4", "\[LessEqual]", "1"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]5", "\[LessEqual]", "1"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]6", "\[LessEqual]", "1"}]}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", " ", "\[FinalSigma]3",
       ",", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", "\[FinalSigma]6", 
      ",", "\[FinalSigma]7", ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]1", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]2", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]3", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{"\[Eta]4", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{"\[Eta]5", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{"\[Eta]6", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.926006671001418*^9, 3.926006745673032*^9}, {
  3.926007387268824*^9, 3.926007400717778*^9}, {3.926066303804205*^9, 
  3.926066304881156*^9}},
 CellLabel->
  "In[389]:=",ExpressionUUID->"38075d9a-7130-4988-8411-feab19222023"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"14.1413815308253`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "4.404322439041816`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "2.9725441830967974`"}]}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", 
      RowBox[{"-", "1.5407670533404003`"}]}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", 
      RowBox[{"-", "0.10899073100000452`"}]}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", "1.3227855234172718`"}], ",", 
     RowBox[{"\[FinalSigma]6", "\[Rule]", "15.936958334764292`"}], ",", 
     RowBox[{"\[FinalSigma]7", "\[Rule]", "31.28350446619248`"}], ",", 
     RowBox[{"\[Eta]1", "\[Rule]", "0.9999999271453288`"}], ",", 
     RowBox[{"\[Eta]2", "\[Rule]", "0.9999999271457051`"}], ",", 
     RowBox[{"\[Eta]3", "\[Rule]", "0.9999999271459749`"}], ",", 
     RowBox[{"\[Eta]4", "\[Rule]", "0.9999999271459976`"}], ",", 
     RowBox[{"\[Eta]5", "\[Rule]", "0.9999999919784414`"}], ",", 
     RowBox[{"\[Eta]6", "\[Rule]", "0.5620467890935277`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.926007401738751*^9, {3.9260076692403307`*^9, 3.92600769304574*^9}, {
   3.926007729140408*^9, 3.926007736617483*^9}, 3.9260653100349007`*^9, 
   3.926065383659913*^9, 3.926066424852799*^9, 3.927741202171907*^9, 
   3.927741307607149*^9, 3.9277414970438347`*^9, 3.927742321047173*^9},
 CellLabel->
  "Out[389]=",ExpressionUUID->"3488d4a4-cd2a-4a9c-b6cf-26e35a01d793"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["Judges", 
    RowBox[{"CrowdBT", ",", "6"}]], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Eta]1", ",", "\[Eta]2", ",", "\[Eta]3", ",", " ", "\[Eta]4", ",", 
      "\[Eta]5", ",", "\[Eta]6"}], " ", "}"}], " ", "/.", " ", 
    "solCrowdBTDictators6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Min", "[", 
    SubscriptBox["Judges", 
     RowBox[{"CrowdBT", ",", "6"}]], "]"}], ",", 
   RowBox[{"Max", "[", 
    SubscriptBox["Judges", 
     RowBox[{"CrowdBT", ",", "6"}]], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.926006918435766*^9, 3.9260069258097687`*^9}, 
   3.926066306737049*^9},
 CellLabel->
  "In[390]:=",ExpressionUUID->"69f3bd6e-f0d3-4150-ae7e-c63863ac4f6f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5620467890935277`", ",", "0.9999999919784414`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.926006927207573*^9, 3.926006990657177*^9}, 
   3.926007181052238*^9, {3.926007397033676*^9, 3.926007402845544*^9}, {
   3.9260076709594107`*^9, 3.9260076948262587`*^9}, 3.926007737582944*^9, 
   3.926065311780246*^9, 3.926065383664063*^9, 3.9260664248566017`*^9, 
   3.927741202176257*^9, 3.927741307627269*^9, 3.927741497048045*^9, 
   3.927742321051271*^9},
 CellLabel->
  "Out[391]=",ExpressionUUID->"9a376cd4-a047-4cb2-b71c-f8667c597d01"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using BTL as the initializer", "Subsubsection",
 CellChangeTimes->{{3.926007215802434*^9, 
  3.92600722062877*^9}},ExpressionUUID->"78f03ee8-01b8-4e8d-abdc-\
fc1b9d840c7a"],

Cell["\<\
The recommended initialization for Crowd-BT is using the BTL solution as the \
initial guess.  We do that here. \
\>", "Text",
 CellChangeTimes->{{3.926007479515354*^9, 3.926007510043071*^9}, {
  3.926065826042521*^9, 
  3.926065829924425*^9}},ExpressionUUID->"ff1cb89d-0917-4517-bf4b-\
40a8949b7289"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "minCrowdBTDictators4BTLInitialized", ",", " ", 
    "solCrowdBTDictators4BTLInitialized"}], "}"}], "  ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "CrowdBT"], 
        RowBox[{"Dictators", ",", "4"}]], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
        " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", "\[Eta]1", ",", 
        "\[Eta]2", ",", "\[Eta]3", ",", " ", "\[Eta]4", ",", 
        SubscriptBox["\[Lambda]", 
         SubscriptBox["CrowdBT", "Dictators"]]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]1", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]2", "\[LessEqual]", "1"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]3", "\[LessEqual]", "1"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]4", "\[LessEqual]", "1"}]}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]1", ",", 
        RowBox[{"\[FinalSigma]1", " ", "/.", " ", "solBTLDictators4"}]}], 
       "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]2", ",", 
        RowBox[{"\[FinalSigma]2", " ", "/.", " ", "solBTLDictators4"}]}], 
       "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]3", ",", 
        RowBox[{"\[FinalSigma]3", " ", "/.", "  ", "solBTLDictators4"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]4", ",", " ", 
        RowBox[{"\[FinalSigma]4", " ", "/.", " ", "solBTLDictators4"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]5", ",", " ", 
        RowBox[{"\[FinalSigma]5", " ", "/.", " ", "solBTLDictators4"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]1", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]2", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]3", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{"\[Eta]4", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}]}], "}"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.926007226116534*^9, 3.926007256374295*^9}, {
  3.926007415495935*^9, 3.926007423986685*^9}, {3.926007518887424*^9, 
  3.926007570514661*^9}, {3.926065857414567*^9, 3.9260658662599373`*^9}, {
  3.926066308439472*^9, 3.926066309891704*^9}},
 CellLabel->
  "In[392]:=",ExpressionUUID->"ebf7a871-900a-4adf-8b88-a50650106ee4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8.317801514224552`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "14.453280747753483`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", "0.012631903499546309`"}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", "2.9445311739995038`*^-6"}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", 
      RowBox[{"-", "0.012626014434253242`"}]}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", "14.202668027849603`"}], ",", 
     RowBox[{"\[Eta]1", "\[Rule]", "0.49684304791891915`"}], ",", 
     RowBox[{"\[Eta]2", "\[Rule]", "0.9999999645418103`"}], ",", 
     RowBox[{"\[Eta]3", "\[Rule]", "0.9999999645418103`"}], ",", 
     RowBox[{"\[Eta]4", "\[Rule]", "0.4968430479166543`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.926007575815255*^9, {3.926007672484283*^9, 3.926007696236528*^9}, 
   3.926007739468343*^9, 3.926065383798181*^9, 3.926065870831697*^9, 
   3.9260664249312267`*^9, 3.927741202251011*^9, 3.9277413077019167`*^9, 
   3.927741497122733*^9, 3.9277423211241007`*^9},
 CellLabel->
  "Out[392]=",ExpressionUUID->"e007c1af-89eb-4f63-8946-c8389506629d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "minCrowdBTDictators5BTLInitialized", ",", " ", 
    "solCrowdBTDictators5BTLInitialized"}], "}"}], " ", "=", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "CrowdBT"], 
        RowBox[{"Dictators", ",", "5"}]], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
        " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", 
        "\[FinalSigma]6", ",", " ", "\[Eta]1", ",", "\[Eta]2", ",", "\[Eta]3",
         ",", " ", "\[Eta]4", ",", "\[Eta]5", ",", 
        SubscriptBox["\[Lambda]", 
         SubscriptBox["CrowdBT", "Dictators"]]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]6", "\[LessEqual]",
        "100"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]1", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]2", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]3", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]4", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]5", "\[LessEqual]", "1"}]}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]1", ",", 
        RowBox[{"\[FinalSigma]1", " ", "/.", " ", "solBTLDictators5"}]}], 
       "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]2", ",", 
        RowBox[{"\[FinalSigma]2", " ", "/.", " ", "solBTLDictators5"}]}], 
       "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]3", ",", 
        RowBox[{"\[FinalSigma]3", " ", "/.", "  ", "solBTLDictators5"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]4", ",", " ", 
        RowBox[{"\[FinalSigma]4", " ", "/.", " ", "solBTLDictators5"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]5", ",", " ", 
        RowBox[{"\[FinalSigma]5", " ", "/.", " ", "solBTLDictators5"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]6", ",", " ", 
        RowBox[{"\[FinalSigma]6", " ", "/.", "solBTLDictators5"}]}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Eta]1", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Eta]2", ",", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]3", ",", " ", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Eta]4", ",", " ", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]5", ",", " ", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.926007571511436*^9, 3.9260075732300987`*^9}, {
  3.926065873156698*^9, 3.926065879028597*^9}, {3.926066312261771*^9, 
  3.926066313370895*^9}},
 CellLabel->
  "In[393]:=",ExpressionUUID->"e6b43902-9525-4649-a6c9-a141d74dcbb2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9.718107991649868`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "21.846041475178712`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "7.727378567966821`"}]}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", 
      RowBox[{"-", "6.542733466245798`"}]}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", "6.507835175252344`"}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", "7.692480276875986`"}], ",", 
     RowBox[{"\[FinalSigma]6", "\[Rule]", "22.8849685975127`"}], ",", 
     RowBox[{"\[Eta]1", "\[Rule]", "0.7657825470843426`"}], ",", 
     RowBox[{"\[Eta]2", "\[Rule]", "0.9999999461883237`"}], ",", 
     RowBox[{"\[Eta]3", "\[Rule]", "0.7657837610544648`"}], ",", 
     RowBox[{"\[Eta]4", "\[Rule]", "0.9999999461883228`"}], ",", 
     RowBox[{"\[Eta]5", "\[Rule]", "0.9999999892831339`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.92600742216741*^9, 3.9260074365879707`*^9}, 
   3.92600746896665*^9, {3.9260075609279947`*^9, 3.9260075772255363`*^9}, {
   3.92600767430788*^9, 3.926007698069108*^9}, 3.92600774112566*^9, 
   3.926065383821432*^9, 3.926065879967815*^9, 3.926066425026236*^9, 
   3.9277412023448963`*^9, 3.9277413077951403`*^9, 3.927741497217514*^9, 
   3.927742321220167*^9},
 CellLabel->
  "Out[393]=",ExpressionUUID->"4f4ea573-d2aa-4cc1-af67-19089e1d02d5"]
}, Open  ]],

Cell["\<\
We can compare them to see the difference.  It should be slight.\
\>", "Text",
 CellChangeTimes->{{3.92600758528607*^9, 3.9260075923851*^9}, {
  3.9260076480610123`*^9, 3.9260076531530933`*^9}, {3.9260664814367*^9, 
  3.926066481980918*^9}},ExpressionUUID->"954c4e89-c9f3-444c-916f-\
05f250510b6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
    "minCrowdBTDictators4", "-", " ", "minCrowdBTDictators4BTLInitialized"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Abs", "[", 
    RowBox[{
    "minCrowdBTDictators5", " ", "-", " ", 
     "minCrowdBTDictators5BTLInitialized"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.9260075968711853`*^9, 3.9260076403569403`*^9}, {
  3.926066315757436*^9, 3.926066319198305*^9}},
 CellLabel->
  "In[394]:=",ExpressionUUID->"e17280cb-e3e3-43ae-a971-ae3365b05e73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.736298819807416`*^-8", ",", "0.07292997364791454`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.926066425029902*^9, 3.927741202348357*^9, 
  3.9277413077988567`*^9, 3.927741497221417*^9, 3.927742321224107*^9},
 CellLabel->
  "Out[394]=",ExpressionUUID->"a6991a90-b2c5-4274-a7f8-22b4ed493303"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["O\[CloseCurlyQuote]Donovan et al.", "Subsection",
 CellChangeTimes->{{3.9260031496795397`*^9, 
  3.9260031522473593`*^9}},ExpressionUUID->"5fb32112-e3eb-4060-99c7-\
6131d38545ec"],

Cell["\<\
This shows the results from Section 4.2. We will not attempt to pick a \
dictator, so the judge chosen may differ depending on the parameters used.  \
The important result is that with 4 judges, a dictator will form, while with \
5, equality will be preferred.\
\>", "Text",
 CellChangeTimes->{{3.926004519210997*^9, 
  3.926004591480213*^9}},ExpressionUUID->"19efe22d-89e0-417c-bc64-\
95a70d05b4f9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "ODonovan"], 
    RowBox[{"Dictators", ",", "4"}]], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", "\[FinalSigma]3_", ",", 
    " ", "\[FinalSigma]4_", ",", " ", "\[FinalSigma]5_", ",", " ", "\[Mu]1_", 
    ",", "\[Mu]2_", ",", "\[Mu]3_", ",", " ", "\[Mu]4_", ",", "\[Lambda]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2", ",", " ", "\[Mu]1"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Mu]1"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Mu]1"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Mu]1"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Mu]2"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]3", ",", " ", "\[Mu]2"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Mu]2"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Mu]2"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Mu]3"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Mu]3"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]4", ",", " ", "\[Mu]3"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Mu]3"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Mu]4"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Mu]4"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Mu]4"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", "\[Mu]4"}], 
    "]"}], "+", " ", 
   RowBox[{"\[Lambda]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}], "+", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]3", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]4", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]5", "]"}]}], 
     ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "ODonovan"], 
    RowBox[{"Dictators", ",", "5"}]], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", "\[FinalSigma]3_", ",", 
    " ", "\[FinalSigma]4_", ",", " ", "\[FinalSigma]5_", ",", " ", 
    "\[FinalSigma]6_", ",", " ", "\[Mu]1_", ",", "\[Mu]2_", ",", "\[Mu]3_", 
    ",", " ", "\[Mu]4_", ",", "\[Mu]5_", ",", "\[Lambda]_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2", ",", " ", "\[Mu]1"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Mu]1"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Mu]1"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Mu]1"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Mu]1"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Mu]2"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]3", ",", " ", "\[Mu]2"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Mu]2"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Mu]2"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Mu]2"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Mu]3"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Mu]3"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]4", ",", " ", "\[Mu]3"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Mu]3"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Mu]3"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Mu]4"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Mu]4"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Mu]4"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", "\[Mu]4"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Mu]4"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Mu]5"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Mu]5"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Mu]5"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Mu]5"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]6", ",", " ", "\[Mu]5"}], 
    "]"}], "+", 
   RowBox[{"\[Lambda]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}], "+", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]3", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]4", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]5", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]6", "]"}]}], 
     ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.926004630314044*^9, 3.926004653794922*^9}},
 CellLabel->
  "In[395]:=",ExpressionUUID->"ddc30b3d-8a9f-4d60-953f-3a0f51f8d3ad"],

Cell["\<\
As with Crowd-BT we enumerate the votes individually because of the varying \
judge reliabilities. \
\>", "Text",
 CellChangeTimes->{{3.926004658707162*^9, 3.926004726612506*^9}, {
   3.92600486404245*^9, 3.926004865141528*^9}, 3.926008258156975*^9, 
   3.9260661363429193`*^9},ExpressionUUID->"33bd5ba4-919f-4a0a-b60d-\
15e356b9d25f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Lambda]", 
    SubscriptBox["ODonovan", "Dictators"]], "=", " ", 
   SubscriptBox["\[Lambda]", "Default"]}], ";"}]], "Input",
 CellChangeTimes->{{3.926004741973589*^9, 3.9260047427487087`*^9}, {
   3.926004987446652*^9, 3.926005025483732*^9}, 3.926008273720332*^9, 
   3.926008381486608*^9},
 CellLabel->
  "In[397]:=",ExpressionUUID->"0da86f84-c3fc-4806-bae5-05a02561fa53"],

Cell[TextData[{
 "Unlike the case with Crowd-BT, O\[CloseCurlyQuote]Donovan et al.\
\[CloseCurlyQuote]s method is not all that sensitive to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "Initial"], TraditionalForm]],ExpressionUUID->
  "7bcb7ff1-d300-40aa-9e9d-f600c1fe20e7"],
 ".  We set it  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "Initial"], TraditionalForm]],ExpressionUUID->
  "bf73d8d7-f0ba-4d44-81f2-18cb5a63eec8"],
 " = 1 to match the Julia settings."
}], "Text",
 CellChangeTimes->{{3.9260080794088507`*^9, 
  3.926008153213873*^9}},ExpressionUUID->"0e9172c2-6a90-4ae1-81f1-\
8fa1687bc691"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    FormBox[
     SubscriptBox["\[Mu]", "Initial"],
     TraditionalForm], " ", "=", " ", "1"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.926008261722412*^9, 3.926008270926551*^9}, 
   3.926008383250966*^9},
 CellLabel->
  "In[398]:=",ExpressionUUID->"b6ed756b-532e-4774-9f0a-92cdd21dabe8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minODonovanDictators4", ",", " ", "solODonovanDictators4"}], 
   "}"}], "  ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "ODonovan"], 
        RowBox[{"Dictators", ",", "4"}]], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
        " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", "\[Mu]1", ",",
         "\[Mu]2", ",", "\[Mu]3", ",", " ", "\[Mu]4", ",", " ", 
        SubscriptBox["\[Lambda]", 
         SubscriptBox["ODonovan", "Dictators"]]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]",
        "100"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]1", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]2", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]3", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]4", "\[LessEqual]", 
       "10"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", " ", "\[FinalSigma]3",
       ",", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Mu]1", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]2", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]3", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Mu]4", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.926004775134942*^9, 3.926004848092448*^9}, 
   3.926005002307143*^9, {3.9260054749500027`*^9, 3.9260054759815283`*^9}, {
   3.926008242672744*^9, 3.926008244345676*^9}, {3.926008395771307*^9, 
   3.926008406255368*^9}, {3.9260663431168013`*^9, 3.926066344365045*^9}},
 CellLabel->
  "In[399]:=",ExpressionUUID->"bd448598-ec5f-4c94-be4b-cfa0cc376cbb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6.280078159336851`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "99.99880379547992`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "99.3587530536465`"}]}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", 
      RowBox[{"-", "99.99919503943612`"}]}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", 
      RowBox[{"-", "99.35999583217466`"}]}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", "99.99942098764518`"}], ",", 
     RowBox[{"\[Mu]1", "\[Rule]", "0.032105731111642936`"}], ",", 
     RowBox[{"\[Mu]2", "\[Rule]", "9.999971420353317`"}], ",", 
     RowBox[{"\[Mu]3", "\[Rule]", "0.03211863252445911`"}], ",", 
     RowBox[{"\[Mu]4", "\[Rule]", 
      RowBox[{"-", "0.032124571289052654`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.926004870122961*^9, {3.926004990578705*^9, 3.926005028902424*^9}, 
   3.926005477247027*^9, 3.926008408248313*^9, 3.926065383908738*^9, 
   3.9260664251120977`*^9, 3.927741202440071*^9, 3.9277413078909807`*^9, 
   3.927741497308649*^9, 3.9277423213135233`*^9},
 CellLabel->
  "Out[399]=",ExpressionUUID->"8b6a3bcc-10e1-4a92-abf5-b9ee4e43f267"]
}, Open  ]],

Cell["\<\
We can compute the range for the 4 judge solution.  Notice the difference \
between the min and max result. As before, feel free to experiment with \
different values of \[Lambda].\
\>", "Text",
 CellChangeTimes->{{3.9260049592420464`*^9, 3.926004981795526*^9}, {
  3.926005030941324*^9, 
  3.926005050899914*^9}},ExpressionUUID->"0f85e490-9942-4009-ade3-\
d2e288466ea0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["Judges", 
    RowBox[{"ODonovan", ",", "4"}]], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Mu]1", ",", " ", "\[Mu]2", ",", " ", "\[Mu]3", " ", ",", " ", 
      "\[Mu]4"}], " ", "}"}], " ", "/.", " ", "solODonovanDictators4"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Min", "[", 
    SubscriptBox["Judges", 
     RowBox[{"ODonovan", ",", "4"}]], "]"}], ",", 
   RowBox[{"Max", "[", 
    SubscriptBox["Judges", 
     RowBox[{"ODonovan", ",", "4"}]], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.9260052484698067`*^9, 3.926005328273699*^9}, 
   3.926066346293083*^9},
 CellLabel->
  "In[400]:=",ExpressionUUID->"3eac879d-0a5b-467c-8364-8bcff8d42180"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.032124571289052654`"}], ",", "9.999971420353317`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.92600528332586*^9, 3.9260053290162907`*^9, 
  3.9260054828626423`*^9, 3.926008412592354*^9, 3.926065383912611*^9, 
  3.926066425115752*^9, 3.927741202443706*^9, 3.9277413078947573`*^9, 
  3.927741497312356*^9, 3.9277423213171453`*^9},
 CellLabel->
  "Out[401]=",ExpressionUUID->"337b9414-bd7e-4dcd-8cfb-ccec3362c1c2"]
}, Open  ]],

Cell["Now we compute the results for the 5 judge solution:", "Text",
 CellChangeTimes->{{3.926005063243346*^9, 
  3.926005073663679*^9}},ExpressionUUID->"c78414f0-03b7-44fc-ab2b-\
ed25313ec935"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"minODonovanDictators5", ",", " ", "solODonovanDictators5"}], 
   "}"}], " ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "ODonovan"], 
        RowBox[{"Dictators", ",", "5"}]], "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
        " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", 
        "\[FinalSigma]6", ",", " ", "\[Mu]1", ",", "\[Mu]2", ",", "\[Mu]3", 
        ",", " ", "\[Mu]4", ",", "\[Mu]5", ",", " ", 
        SubscriptBox["\[Lambda]", 
         SubscriptBox["ODonovan", "Dictators"]]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]6", "\[LessEqual]",
        "100"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]1", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]2", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]3", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]4", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]5", "\[LessEqual]", 
       "10"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", " ", "\[FinalSigma]3",
       ",", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", "\[FinalSigma]6", 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]1", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]2", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]3", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Mu]4", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]5", ",", 
        SubscriptBox["\[Mu]", "Initial"]}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.926004783198042*^9, 3.9260047998136806`*^9}, 
   3.92600485608635*^9, 3.926005004402001*^9, {3.926005485015525*^9, 
   3.926005486432325*^9}, {3.9260084192695704`*^9, 3.926008425901657*^9}, 
   3.926017059583356*^9, {3.926066200232723*^9, 3.926066203524255*^9}, {
   3.926066348568903*^9, 3.926066349844798*^9}},
 CellLabel->
  "In[402]:=",ExpressionUUID->"93862ab6-a430-430f-bc52-61cdc7653a73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12.510069149613024`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "0.5931113550030683`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "0.35586678987376524`"}]}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", 
      RowBox[{"-", "0.11862225922341828`"}]}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", "0.11862225982651319`"}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", "0.35586679047686015`"}], ",", 
     RowBox[{"\[FinalSigma]6", "\[Rule]", "0.5931113556061632`"}], ",", 
     RowBox[{"\[Mu]1", "\[Rule]", "5.84331260230444`"}], ",", 
     RowBox[{"\[Mu]2", "\[Rule]", "5.84331336802745`"}], ",", 
     RowBox[{"\[Mu]3", "\[Rule]", "5.843313625654327`"}], ",", 
     RowBox[{"\[Mu]4", "\[Rule]", "5.8433133680274505`"}], ",", 
     RowBox[{"\[Mu]5", "\[Rule]", "5.843312602304438`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.926005098186116*^9, 3.926005487373252*^9, 
  3.9260084270492783`*^9, 3.926065384133093*^9, 3.9260664253192863`*^9, 
  3.927741202655057*^9, 3.927741308112987*^9, 3.9277414975277042`*^9, 
  3.927742321536015*^9},
 CellLabel->
  "Out[402]=",ExpressionUUID->"3e3428db-00ed-4593-ab44-73e71a9ecfe8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["Judges", 
    RowBox[{"ODonovan", ",", "5"}]], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Mu]1", ",", " ", "\[Mu]2", ",", " ", "\[Mu]3", " ", ",", " ", 
      "\[Mu]4", ",", " ", "\[Mu]5"}], "}"}], " ", "/.", " ", 
    "solODonovanDictators5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Min", "[", 
    SubscriptBox["Judges", 
     RowBox[{"ODonovan", ",", "5"}]], "]"}], ",", 
   RowBox[{"Max", "[", 
    SubscriptBox["Judges", 
     RowBox[{"ODonovan", ",", "5"}]], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.926005079586124*^9, 3.926005094999715*^9}, {
   3.926005341227507*^9, 3.926005359159958*^9}, 3.926066351911924*^9},
 CellLabel->
  "In[403]:=",ExpressionUUID->"5fe76273-0623-407b-9566-72022c18e64d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.843312602304438`", ",", "5.843313625654327`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.9260048714621677`*^9, {3.9260050960905733`*^9, 3.926005099329196*^9}, 
   3.926005360769228*^9, 3.9260054906192207`*^9, 3.926008428365695*^9, 
   3.92606538413689*^9, 3.926066425322916*^9, 3.9277412026818323`*^9, 
   3.9277413081170063`*^9, 3.927741497531785*^9, 3.927742321540107*^9},
 CellLabel->
  "Out[404]=",ExpressionUUID->"ca944e6e-6f0c-4d3d-96d9-6a9eddf5afbb"]
}, Open  ]],

Cell["\<\
Notice that the equality solution is now preferred, as expected.\
\>", "Text",
 CellChangeTimes->{{3.926005385541367*^9, 
  3.926005417945936*^9}},ExpressionUUID->"5250f79d-6195-4691-8229-\
6cd2c0dd588e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Section 4.3 Breaking the Symmetry ", "Subsection",
 CellChangeTimes->{{3.926005576144506*^9, 
  3.9260055858774242`*^9}},ExpressionUUID->"77e44972-6a8f-4d59-b9de-\
d68f2d73c428"],

Cell[TextData[{
 "Now we show a paradoxical result: giving a judge one additional \
\[OpenCurlyDoubleQuote]",
 StyleBox["error",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote] can elevate that judge\[CloseCurlyQuote]s \
reliability, potentially even into the dictatorship."
}], "Text",
 CellChangeTimes->{{3.926005587548389*^9, 3.926005631917338*^9}, {
  3.926016146130027*^9, 3.926016278685443*^9}, {3.9260661416761293`*^9, 
  3.9260661438539762`*^9}},ExpressionUUID->"c78316c3-3572-44d0-8e40-\
b796a0426cd2"],

Cell[TextData[{
 "Although we only show the case for u1 agreeing with u4, as in the paper, \
the files in",
 StyleBox[" julia/input/dictators/broken ",
  FontSlant->"Italic"],
 "provide all possible combination."
}], "Text",
 CellChangeTimes->{{3.9260163334082108`*^9, 3.926016447584475*^9}, {
  3.926016521645164*^9, 
  3.926016566413978*^9}},ExpressionUUID->"a6fb080a-2c44-4aca-a752-\
273ab173948e"],

Cell[CellGroupData[{

Cell["Bradley-Terry-Luce", "Subsubsection",
 CellChangeTimes->{{3.926018077494543*^9, 
  3.926018084699663*^9}},ExpressionUUID->"22061e5b-f8da-4824-978a-\
3d905604cab8"],

Cell["\<\
We first compute the BTL solution so that we can use this later as the \
initialization for Crowd-BT\
\>", "Text",
 CellChangeTimes->{{3.926018135344728*^9, 
  3.9260181611769533`*^9}},ExpressionUUID->"59940fe0-788d-40fe-82eb-\
1248da6978b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "BTL"], 
    RowBox[{"Dictators", ",", "5", ",", "ExtraErrorInU1ToAgreeWithU4"}]], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", "\[FinalSigma]3_", ",", 
    " ", "\[FinalSigma]4_", ",", " ", "\[FinalSigma]5_", ",", 
    "\[FinalSigma]6_", ",", "  ", "\[Lambda]_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"4", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "BTL"], "[", 
       RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1"}], "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "BTL"], "[", 
       RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2"}], "]"}], " ", "+", 
      RowBox[{
       SubscriptBox["L", "BTL"], "[", 
       RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4"}], "]"}], "+", 
      RowBox[{
       SubscriptBox["L", "BTL"], "[", 
       RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5"}], "]"}]}], ")"}]}], 
   " ", "+", 
   RowBox[{"3", "*", 
    RowBox[{
     SubscriptBox["L", "BTL"], "[", 
     RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3"}], "]"}]}], "+", 
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2"}], "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]3"}], "]"}], "+", " ", 
   RowBox[{
    RowBox[{"+", " ", "2"}], "*", 
    RowBox[{
     SubscriptBox["L", "BTL"], "[", 
     RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]4"}], "]"}]}], "+", 
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]5"}], "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "BTL"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]6"}], "]"}], " ", "+", " ", 
   RowBox[{"\[Lambda]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}], "+", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]3", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]4", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]5", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]6", "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.926018197603953*^9, 3.926018289527417*^9}},
 CellLabel->
  "In[405]:=",ExpressionUUID->"d2bdaf2a-8f3f-413a-8775-ecc2e5e6e9dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"BTLExtraMin", ",", " ", "BTLExtraSol"}], "}"}], " ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "BTL"], 
        RowBox[{"Dictators", ",", "5", ",", "ExtraErrorInU1ToAgreeWithU4"}]], 
       "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
        " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", 
        "\[FinalSigma]6", ",", " ", "0"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]6", "\[LessEqual]",
        "100"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[FinalSigma]1", ",", " ", "\[FinalSigma]2", ",", " ", "\[FinalSigma]3",
       ",", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", "\[FinalSigma]6"}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.9260180991797333`*^9},
 CellLabel->
  "In[406]:=",ExpressionUUID->"030705d5-4f65-4798-b645-2f3886ef6a86"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"13.373106805810043`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "2.1160884390825703`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "0.7297940780303606`"}]}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", "0.6565002829857258`"}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", "1.0619653910216158`"}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", "2.448259752037702`"}], ",", 
     RowBox[{"\[FinalSigma]6", "\[Rule]", "3.834554113089912`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.926018162328335*^9, 3.92601829251195*^9, 
  3.926065384168065*^9, 3.926066425353425*^9, 3.927741202710519*^9, 
  3.927741308150556*^9, 3.9277414975674686`*^9, 3.927742321578721*^9},
 CellLabel->
  "Out[406]=",ExpressionUUID->"32681585-c3b4-4ade-9918-90d7aa65cb85"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chen et al.\[CloseCurlyQuote]s Crowd-BT", "Subsubsection",
 CellChangeTimes->{{3.926016292432781*^9, 
  3.9260162999136047`*^9}},ExpressionUUID->"001e7e0d-7450-4798-aa6f-\
26bcb0c7064a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "CrowdBT"], 
    RowBox[{"Dictators", ",", "5", ",", "ExtraErrorInU1ToAgreeWithU4"}]], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", "\[FinalSigma]3_", ",", 
    " ", "\[FinalSigma]4_", ",", " ", "\[FinalSigma]5_", ",", " ", 
    "\[FinalSigma]6_", ",", " ", "\[Eta]1_", ",", "\[Eta]2_", ",", "\[Eta]3_",
     ",", " ", "\[Eta]4_", ",", "\[Eta]5_", ",", "\[Lambda]_"}], "]"}], " ", ":=",
   "  ", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2", ",", " ", "\[Eta]1"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Eta]1"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Eta]1"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", "\[Eta]1"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Eta]1"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Eta]2"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]3", ",", " ", "\[Eta]2"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Eta]2"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Eta]2"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Eta]2"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Eta]3"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Eta]3"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]4", ",", " ", "\[Eta]3"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Eta]3"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Eta]3"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Eta]4"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Eta]4"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Eta]4"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", "\[Eta]4"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Eta]4"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Eta]5"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Eta]5"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Eta]5"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Eta]5"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "CrowdBT"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]6", ",", " ", "\[Eta]5"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    RowBox[{"+", "\[Lambda]"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}], "+", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]3", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]4", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]5", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]6", "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.926016610741172*^9, 3.9260166120212393`*^9}, 
   3.926018098144986*^9},
 CellLabel->
  "In[407]:=",ExpressionUUID->"b688cc5d-8ccd-4a44-b9bd-bff916806f57"],

Cell["\<\
Now we solve with \[Lambda] = {0, 1} to reproduce Table 1.  We initialize the \
solution with the BTL results, following the advice given in Chen et al.\
\>", "Text",
 CellChangeTimes->{{3.926016820126053*^9, 3.926016865270794*^9}, {
  3.926017097852261*^9, 
  3.926017130584579*^9}},ExpressionUUID->"8daa15fb-4109-4f1c-922f-\
e7f340195622"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "minCrowdBTDictators5ExtraError0", ",", " ", 
    "solCrowdBTDictators5ExtraError0"}], "}"}], " ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "CrowdBT"], 
        RowBox[{"Dictators", ",", "5", ",", "ExtraErrorInU1ToAgreeWithU4"}]], 
       "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
        " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", 
        "\[FinalSigma]6", ",", " ", "\[Eta]1", ",", "\[Eta]2", ",", "\[Eta]3",
         ",", " ", "\[Eta]4", ",", "\[Eta]5", ",", "0"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]6", "\[LessEqual]",
        "100"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]1", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]2", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]3", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]4", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]5", "\[LessEqual]", "1"}]}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]1", ",", 
        RowBox[{"\[FinalSigma]1", " ", "/.", " ", "BTLExtraSol"}]}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]2", ",", 
        RowBox[{"\[FinalSigma]2", " ", "/.", " ", "BTLExtraSol"}]}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]3", ",", 
        RowBox[{"\[FinalSigma]3", " ", "/.", "  ", "BTLExtraSol"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]4", ",", " ", 
        RowBox[{"\[FinalSigma]4", " ", "/.", " ", "BTLExtraSol"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]5", ",", " ", 
        RowBox[{"\[FinalSigma]5", " ", "/.", " ", "BTLExtraSol"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]6", ",", " ", 
        RowBox[{"\[FinalSigma]6", " ", "/.", "BTLExtraSol"}]}], "}"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"\[Eta]1", ",", " ", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Eta]2", ",", " ", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]3", ",", " ", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Eta]4", ",", " ", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]5", ",", " ", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "minCrowdBTDictators5ExtraError1", ",", " ", 
    "solCrowdBTDictators5ExtraError1"}], "}"}], " ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "CrowdBT"], 
        RowBox[{"Dictators", ",", "5", ",", "ExtraErrorInU1ToAgreeWithU4"}]], 
       "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
        " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", 
        "\[FinalSigma]6", ",", " ", "\[Eta]1", ",", "\[Eta]2", ",", "\[Eta]3",
         ",", " ", "\[Eta]4", ",", "\[Eta]5", ",", "1"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]6", "\[LessEqual]",
        "100"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]1", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]2", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]3", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]4", "\[LessEqual]", "1"}], ",", " ", 
      RowBox[{"0", "\[LessEqual]", "\[Eta]5", "\[LessEqual]", "1"}]}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]1", ",", 
        RowBox[{"\[FinalSigma]1", " ", "/.", " ", "BTLExtraSol"}]}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]2", ",", 
        RowBox[{"\[FinalSigma]2", " ", "/.", " ", "BTLExtraSol"}]}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]3", ",", 
        RowBox[{"\[FinalSigma]3", " ", "/.", "  ", "BTLExtraSol"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]4", ",", " ", 
        RowBox[{"\[FinalSigma]4", " ", "/.", " ", "BTLExtraSol"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]5", ",", " ", 
        RowBox[{"\[FinalSigma]5", " ", "/.", " ", "BTLExtraSol"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[FinalSigma]6", ",", " ", 
        RowBox[{"\[FinalSigma]6", " ", "/.", "BTLExtraSol"}]}], "}"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"\[Eta]1", ",", " ", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Eta]2", ",", " ", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]3", ",", " ", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Eta]4", ",", " ", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]5", ",", " ", 
        SubscriptBox["\[Eta]", "Initial"]}], "}"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.9260166520912657`*^9, 3.9260167099508867`*^9}, {
  3.92601680941031*^9, 3.926016817060466*^9}, {3.926016959007387*^9, 
  3.926016974944907*^9}, {3.9260170121745872`*^9, 3.9260170877785597`*^9}, {
  3.926017137392482*^9, 3.9260171453550673`*^9}, {3.926018101480713*^9, 
  3.926018102989526*^9}, {3.9260661880501213`*^9, 3.926066257350236*^9}},
 CellLabel->
  "In[408]:=",ExpressionUUID->"a43fb8dd-c654-42f4-93cf-d13ed690cb5f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11.783503107767842`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "16.14991300181408`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "16.14991300377725`"}]}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", 
      RowBox[{"-", "0.23429827615001833`"}]}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", "15.397733179115239`"}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", 
      RowBox[{"-", "0.24913433163411747`"}]}], ",", 
     RowBox[{"\[FinalSigma]6", "\[Rule]", "17.339281539498856`"}], ",", 
     RowBox[{"\[Eta]1", "\[Rule]", "0.999999987272728`"}], ",", 
     RowBox[{"\[Eta]2", "\[Rule]", "0.49999999979609205`"}], ",", 
     RowBox[{"\[Eta]3", "\[Rule]", "0.4999999997971571`"}], ",", 
     RowBox[{"\[Eta]4", "\[Rule]", "0.999999987272728`"}], ",", 
     RowBox[{"\[Eta]5", "\[Rule]", "0.49999999972661185`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9260169847939043`*^9, 3.926017041084567*^9}, 
   3.92601709535538*^9, {3.9260171329544888`*^9, 3.926017146992449*^9}, {
   3.9260182959068317`*^9, 3.9260183003150883`*^9}, 3.926065384191297*^9, 
   3.926066233169083*^9, 3.92606642546026*^9, 3.927741202822791*^9, 
   3.927741308256933*^9, 3.927741497678121*^9, 3.9277423216925163`*^9},
 CellLabel->
  "Out[408]=",ExpressionUUID->"8ba198c8-50a6-44e7-b364-3315088bd295"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"22.345389870093268`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", "0.3435422776487488`"}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "0.43322931253986496`"}]}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", "0.07589788735737392`"}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", "0.8087527960676898`"}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", 
      RowBox[{"-", "1.4051616665751472`"}]}], ",", 
     RowBox[{"\[FinalSigma]6", "\[Rule]", "0.4632566503800852`"}], ",", 
     RowBox[{"\[Eta]1", "\[Rule]", "0.9999999815444249`"}], ",", 
     RowBox[{"\[Eta]2", "\[Rule]", "0.3876414831492538`"}], ",", 
     RowBox[{"\[Eta]3", "\[Rule]", "0.3223533976845378`"}], ",", 
     RowBox[{"\[Eta]4", "\[Rule]", "0.9999999485863448`"}], ",", 
     RowBox[{"\[Eta]5", "\[Rule]", "1.6099388374506603`*^-7"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9260169847939043`*^9, 3.926017041084567*^9}, 
   3.92601709535538*^9, {3.9260171329544888`*^9, 3.926017146992449*^9}, {
   3.9260182959068317`*^9, 3.9260183003150883`*^9}, 3.926065384191297*^9, 
   3.926066233169083*^9, 3.92606642546026*^9, 3.927741202822791*^9, 
   3.927741308256933*^9, 3.927741497678121*^9, 3.927742321785768*^9},
 CellLabel->
  "Out[409]=",ExpressionUUID->"c597f1cd-2410-470f-9649-f7281fc68117"]
}, Open  ]],

Cell["\<\
To clean up the display of the entries as they are in the paper, we need to \
set a rounding value. We use 1 decimal point in the paper for typesetting \
purposes.  However, one can display more places if desired here.\
\>", "Text",
 CellChangeTimes->{{3.926016784308927*^9, 3.926016792603701*^9}, 
   3.9260168680759583`*^9, {3.926017169475432*^9, 3.926017207529319*^9}, {
   3.926019454265544*^9, 
   3.926019543249722*^9}},ExpressionUUID->"3a74535f-0cea-4d31-8c9e-\
9f26c55910f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roundingValue", "=", " ", "0.1"}], ";"}]], "Input",
 CellChangeTimes->{{3.926019521300972*^9, 3.92601957248146*^9}},
 CellLabel->
  "In[410]:=",ExpressionUUID->"23c3cb9e-aeb9-433f-b727-b14736a806ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"{", 
         RowBox[{
         "\[Eta]1", ",", "\[Eta]2", ",", "\[Eta]3", ",", "\[Eta]4", ",", 
          "\[Eta]5"}], "}"}], "]"}], " ", "/.", 
       "solCrowdBTDictators5ExtraError0"}], ",", "roundingValue"}], "]"}], 
    ",", " ", 
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"{", 
         RowBox[{
         "\[Eta]1", ",", "\[Eta]2", ",", "\[Eta]3", ",", "\[Eta]4", ",", 
          "\[Eta]5"}], "}"}], "]"}], " ", "/.", 
       "solCrowdBTDictators5ExtraError1"}], ",", " ", "roundingValue"}], 
     "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.926016731647735*^9, 3.9260167653398647`*^9}, {
  3.9260168760176992`*^9, 3.926016884528651*^9}, {3.926018812579878*^9, 
  3.9260188155057287`*^9}, {3.926019250635333*^9, 3.926019278712266*^9}, {
  3.926019553479807*^9, 3.926019561979125*^9}, {3.926066242775984*^9, 
  3.926066244111055*^9}},
 CellLabel->
  "In[411]:=",ExpressionUUID->"67e3a278-7d4f-42c4-82e3-f60ca61777d0"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1.`", "0.5`", "0.5`", "1.`", "0.5`"},
    {"1.`", "0.4`", "0.30000000000000004`", "1.`", "0.`"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9260167666531343`*^9, {3.9260168856544333`*^9, 3.926016895262693*^9}, 
   3.9260171613708057`*^9, 3.9260183025475082`*^9, 3.926018815899324*^9, {
   3.926019268952121*^9, 3.926019279030992*^9}, {3.9260195644065123`*^9, 
   3.926019573734811*^9}, 3.926065384213779*^9, 3.926066246841907*^9, 
   3.92606642556421*^9, 3.9277412029325*^9, 3.927741308360095*^9, 
   3.927741497785774*^9, 3.927742321805765*^9},
 CellLabel->
  "Out[411]//TableForm=",ExpressionUUID->"31c5fbae-28cc-4f64-a51d-\
b956fb8c0a47"]
}, Open  ]],

Cell[TextData[{
 "As discussed in the paper, notice three things:\n1) ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "1"], TraditionalForm]],ExpressionUUID->
  "f05edca6-5e78-41f7-b967-9116cb2c9da8"],
 "is a member of dictatorship in both situations since \[Eta]1 = 1\n2) For \
the \[Lambda] = 0 case, the non-dictator judges are considered to be acting \
randomly, as if they were flipping a fair coin.  This is not the case.\n3) \
For the  \[Lambda] = 1case, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "2"], TraditionalForm]],ExpressionUUID->
  "a22aa0b9-06f7-4144-af62-f4f338516cf5"],
 "and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "3"], TraditionalForm]],ExpressionUUID->
  "396dcc66-05eb-403b-acf5-93231b1ea9ff"],
 " are now considered adversarial."
}], "Text",
 CellChangeTimes->{{3.9260172131433163`*^9, 3.926017372518708*^9}, {
  3.926017917120921*^9, 
  3.9260179648914003`*^9}},ExpressionUUID->"e08b6558-cd9c-4afe-946b-\
490afaff0c9c"],

Cell["\<\
Feel free to play with different initializations.  For example, setting the \
\[Eta]\[CloseCurlyQuote]s to different positive values can yield a different \
result, but with a less optimal final value. \
\>", "Text",
 CellChangeTimes->{{3.926017438906073*^9, 3.9260174474987707`*^9}, {
  3.926017508343525*^9, 3.926017511899641*^9}, {3.926017579740364*^9, 
  3.926017593891005*^9}, {3.926017639340242*^9, 
  3.9260176743081512`*^9}},ExpressionUUID->"e2b9bdc4-d7e4-4a4f-9472-\
12f3b52a72c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox[
       SubscriptBox["L", "CrowdBT"], 
       RowBox[{"Dictators", ",", "5", ",", "ExtraErrorInU1ToAgreeWithU4"}]], 
      "[", 
      RowBox[{
      "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
       " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", 
       "\[FinalSigma]6", ",", " ", "\[Eta]1", ",", "\[Eta]2", ",", "\[Eta]3", 
       ",", " ", "\[Eta]4", ",", "\[Eta]5", ",", "1"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]", 
      "100"}], ",", 
     RowBox[{
      RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]", 
      "100"}], ",", 
     RowBox[{
      RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]", 
      "100"}], ",", 
     RowBox[{
      RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]", 
      "100"}], ",", 
     RowBox[{
      RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]", 
      "100"}], ",", 
     RowBox[{
      RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]6", "\[LessEqual]", 
      "100"}], ",", " ", 
     RowBox[{"0", "\[LessEqual]", "\[Eta]1", "\[LessEqual]", "1"}], ",", " ", 
     
     RowBox[{"0", "\[LessEqual]", "\[Eta]2", "\[LessEqual]", "1"}], ",", " ", 
     
     RowBox[{"0", "\[LessEqual]", "\[Eta]3", "\[LessEqual]", "1"}], ",", " ", 
     
     RowBox[{"0", "\[LessEqual]", "\[Eta]4", "\[LessEqual]", "1"}], ",", " ", 
     
     RowBox[{"0", "\[LessEqual]", "\[Eta]5", "\[LessEqual]", "1"}]}], "}"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[FinalSigma]1", ",", 
       RowBox[{"\[FinalSigma]1", " ", "/.", " ", "BTLExtraSol"}]}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[FinalSigma]2", ",", 
       RowBox[{"\[FinalSigma]2", " ", "/.", " ", "BTLExtraSol"}]}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[FinalSigma]3", ",", 
       RowBox[{"\[FinalSigma]3", " ", "/.", "  ", "BTLExtraSol"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\[FinalSigma]4", ",", " ", 
       RowBox[{"\[FinalSigma]4", " ", "/.", " ", "BTLExtraSol"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\[FinalSigma]5", ",", " ", 
       RowBox[{"\[FinalSigma]5", " ", "/.", " ", "BTLExtraSol"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\[FinalSigma]6", ",", " ", 
       RowBox[{"\[FinalSigma]6", " ", "/.", "BTLExtraSol"}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"\[Eta]1", ",", "0.8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Eta]2", ",", " ", "0.7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Eta]3", ",", "0.9"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Eta]4", ",", " ", "0.6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Eta]5", ",", " ", "0.7"}], "}"}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.9260173908748693`*^9, 3.926017412586335*^9}, {
   3.9260174581284533`*^9, 3.9260175493141413`*^9}, {3.926017600853372*^9, 
   3.9260176295743303`*^9}, 3.926018109478209*^9},
 CellLabel->
  "In[412]:=",ExpressionUUID->"b7f26d70-603c-4a4a-95c2-c32db29440ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"22.37373701944007`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", "0.3438024617747687`"}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "0.5106699244925029`"}]}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", 
      RowBox[{"-", "0.21849748644272826`"}]}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", "1.3541703907849227`"}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", 
      RowBox[{"-", "0.8475177834131828`"}]}], ",", 
     RowBox[{"\[FinalSigma]6", "\[Rule]", 
      RowBox[{"-", "0.00202686233319236`"}]}], ",", 
     RowBox[{"\[Eta]1", "\[Rule]", "0.9999999804864794`"}], ",", 
     RowBox[{"\[Eta]2", "\[Rule]", "0.39470508402455895`"}], ",", 
     RowBox[{"\[Eta]3", "\[Rule]", "1.4460173804615442`*^-7"}], ",", 
     RowBox[{"\[Eta]4", "\[Rule]", "0.9999999313349103`"}], ",", 
     RowBox[{"\[Eta]5", "\[Rule]", "0.21621234982549184`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.926017412961814*^9, {3.926017478901292*^9, 3.926017501895104*^9}, 
   3.926017550893488*^9, {3.926017613048263*^9, 3.9260176303811607`*^9}, 
   3.9260183058422623`*^9, 3.9260653843214817`*^9, 3.926066425662483*^9, 
   3.927741203033627*^9, 3.9277413084678087`*^9, 3.92774149789077*^9, 
   3.927742321907063*^9},
 CellLabel->
  "Out[412]=",ExpressionUUID->"1cd6d696-28c8-4cf5-afec-e3c5edffb2f7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SolveExtraCrowdBT", "[", 
    RowBox[{"n_", ",", " ", "\[Lambda]_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"FindMinimum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox[
          SubscriptBox["L", "CrowdBT"], 
          RowBox[{
          "Dictators", ",", "5", ",", "ExtraErrorInU1ToAgreeWithU4"}]], "[", 
         RowBox[{
         "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
          " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", 
          "\[FinalSigma]6", ",", " ", "\[Eta]1", ",", "\[Eta]2", ",", 
          "\[Eta]3", ",", " ", "\[Eta]4", ",", "\[Eta]5", ",", "\[Lambda]"}], 
         "]"}], ",", " ", 
        RowBox[{
         RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", 
         "\[LessEqual]", "100"}], ",", 
        RowBox[{
         RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", 
         "\[LessEqual]", "100"}], ",", 
        RowBox[{
         RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", 
         "\[LessEqual]", "100"}], ",", 
        RowBox[{
         RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", 
         "\[LessEqual]", "100"}], ",", 
        RowBox[{
         RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", 
         "\[LessEqual]", "100"}], ",", 
        RowBox[{
         RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]6", 
         "\[LessEqual]", "100"}], ",", " ", 
        RowBox[{"0", "\[LessEqual]", "\[Eta]1", "\[LessEqual]", "1"}], ",", 
        " ", 
        RowBox[{"0", "\[LessEqual]", "\[Eta]2", "\[LessEqual]", "1"}], ",", 
        " ", 
        RowBox[{"0", "\[LessEqual]", "\[Eta]3", "\[LessEqual]", "1"}], ",", 
        " ", 
        RowBox[{"0", "\[LessEqual]", "\[Eta]4", "\[LessEqual]", "1"}], ",", 
        " ", 
        RowBox[{"0", "\[LessEqual]", "\[Eta]5", "\[LessEqual]", "1"}]}], 
       "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FinalSigma]1", ",", 
          RowBox[{"\[FinalSigma]1", " ", "/.", " ", "BTLExtraSol"}]}], "}"}], 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[FinalSigma]2", ",", 
          RowBox[{"\[FinalSigma]2", " ", "/.", " ", "BTLExtraSol"}]}], "}"}], 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[FinalSigma]3", ",", 
          RowBox[{"\[FinalSigma]3", " ", "/.", "  ", "BTLExtraSol"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"\[FinalSigma]4", ",", " ", 
          RowBox[{"\[FinalSigma]4", " ", "/.", " ", "BTLExtraSol"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"\[FinalSigma]5", ",", " ", 
          RowBox[{"\[FinalSigma]5", " ", "/.", " ", "BTLExtraSol"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"\[FinalSigma]6", ",", " ", 
          RowBox[{"\[FinalSigma]6", " ", "/.", "BTLExtraSol"}]}], "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"\[Eta]1", ",", "n"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Eta]2", ",", "n"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Eta]3", ",", " ", "n"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Eta]4", ",", " ", "n"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Eta]5", ",", " ", "n"}], "}"}]}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9260177600403748`*^9, 3.9260177700902023`*^9}, 
   3.92601811139707*^9, 3.926018512099304*^9},
 CellLabel->
  "In[413]:=",ExpressionUUID->"b91d82c4-8d0c-483f-9a7c-0d1d87e7cd4d"],

Cell["\<\
To show how this can vary, we can perform a line sweep using both \[Lambda] \
values:\
\>", "Text",
 CellChangeTimes->{{3.926017795850258*^9, 
  3.926017818095324*^9}},ExpressionUUID->"325578c0-34cb-4a2c-90da-\
de4b03fc3f49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SolveExtraCrowdBT", "[", 
    RowBox[{"n", ",", "0"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "0.5", ",", " ", "1", ",", " ", "0.01"}], "}"}], 
   ",", " ", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PlotStyle", "\[Rule]", " ", "Blue"}], ",", " ", 
     RowBox[{"Filling", "\[Rule]", "None"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[414]:=",ExpressionUUID->"16a87cf7-8953-412d-9b87-3f50d8bd6264"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0, 0, 1], PointSize[0.009166666666666668], AbsoluteThickness[
     1.6], 
     TagBox[{},
      Annotation[#, "Charting`Private`Tag$156305#1"]& ]}, 
    TagBox[
     {RGBColor[0, 0, 1], PointSize[0.009166666666666668], AbsoluteThickness[
      1.6], {}, PointBox[CompressedData["
1:eJxNkV1IFFEUxzeJiCGowBJK18KtXY2MWlebUv/7Eht9bK1GhS1YawVC1ESB
ZUQvGuRDpQ/RB0JQj6EQjIlSifhkBRWFUEr7MTu7szO7mw+K0EPNORNcD1yG
H/fO/55zf1tjV1oulLhcLr+96OtUHIM1U7sHR3zBllF3rxmJ40fztT3EL5Um
aeZFHMH4duZFX/TB5EIcuz6fayA+mOguHQolcNK7sp746ROqBIanvH5iK0KB
9n5HiPeb7TSlKQlP+SKzHWYnJlFYUSsTO3FJGLHzdcR+rhSuWxV83m7ODkxh
X3sv309p0kwK91Z/Z66m9nwa9JTKfIviujWc7Uof8PZ7g58+Umn4MjZwiLiS
A9OYC5dFiK/SuEoaO49sOkbM7U2msSVTFSbmuFId6tfxU8QXuXTMLpSFiPn5
RnX4MwPcL48rZbBKvRkg5vaiGbw/87ORmOOGMnimte8ldnxkIXX1NAgfWRz9
I8nCRxab+y41Ch9ZrH3eHxA+DLzbFlvmw8DSdE1A+DDQEX4tCx85nG69zb4e
8sA5jEXv8P1J9pGDsm6kcsP66mAd+zABzw0PsePDRMkHcwex48PEt/mNfN7x
YeHR3XE3sePDghJqqyJ2fFiYaJuICB95uN9ox4l5XCUPNWwcFj7ymH+rltP/
jo8C/p7obBU+Crjc94vf0/FRQPh+xX7ho4hX9WtqhY8iZL1TFj6KeLzUs8zH
bwz/53/H/216
       "]], {}},
     Annotation[#, "Charting`Private`Tag$156305#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.5, 11.783502754460358`},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0.5, 1.}, {11.783502754460358`, 12.533364651234937`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.926017776887753*^9, 3.9260183131688004`*^9, 
  3.9260653889569273`*^9, 3.9260664304099894`*^9, 3.9277412075870743`*^9, 
  3.927741502577544*^9, 3.927742326481764*^9},
 CellLabel->
  "Out[414]=",ExpressionUUID->"cd7090ff-0313-4b61-9749-06583d073254"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DiscretePlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SolveExtraCrowdBT", "[", 
     RowBox[{"n", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", " ", "0.5", ",", " ", "1", ",", " ", "0.01"}], "}"}], 
    ",", " ", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PlotStyle", "\[Rule]", " ", "Red"}], ",", " ", 
      RowBox[{"Filling", "\[Rule]", "None"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellLabel->
  "In[415]:=",ExpressionUUID->"b0ba8eec-e7d4-408d-a7d2-028323bd92e6"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[1, 0, 0], PointSize[0.009166666666666668], AbsoluteThickness[
     1.6], 
     TagBox[{},
      Annotation[#, "Charting`Private`Tag$173465#1"]& ]}, 
    TagBox[
     {RGBColor[1, 0, 0], PointSize[0.009166666666666668], AbsoluteThickness[
      1.6], {}, PointBox[CompressedData["
1:eJxVkj1IQmEUhqXRMZz72WxqMCQCe92yoUCHipCMoIYkMnAQraYaIvonymgI
lLYcajEhKNdMggah6V7//63Bpqju952DdA9cLg/nuy/nfM/tX1h1LXYZDAaL
9og3lYKd57uRG4/V7or3bNecCrq/C6/peas96rMZMxEFn2/U/zK7D5JtBYkf
6jvUoCk2pqLE5y/ColTMpel83SkCVdy/E49qaT5bFpdef8A7Y7VrYVpiFre/
9D3FZbHPfYusHI6YteG0wByGmUWaMZNDgHlAjGfOw8EcEnHBPDZ5v5eUqDzO
mXtlYAGnvM+aWNdXwCx/L8dLFjDOLONMRUwwL8kqYotZXl+8iOkVYrmusYRJ
7svx3CWEmGVcrIQoM/ko44SZfJTRx0w+ylhnJh9lJJjJR6VzX+Sjgmlm8lHB
MTP5qGKD+VAuXEWEOSt9VNFYJh6SPmqY0vmo4UHno4ZBnY862im6b/JRxzX3
yUcdZ8zko4Ews1zX1+jcB/lowKPz0cSezkcTuzofTVx5//towa/z0ersSz5a
eOL/gXx84JH5D2VSe1I=
       "]], {}},
     Annotation[#, "Charting`Private`Tag$173465#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.5, 22.345389870092664`},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0.5, 1.}, {22.345389870092664`, 22.37815576186376}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.926017829219083*^9, 3.926018317965304*^9, 
  3.926065393921844*^9, 3.926066435267562*^9, 3.9277412123383512`*^9, 
  3.927741507311366*^9, 3.927742331199415*^9},
 CellLabel->
  "Out[415]=",ExpressionUUID->"65bd1598-b858-4c3d-80b1-e02b4aaa5d5f"]
}, Open  ]],

Cell["In both cases, setting \[Eta] = 0.9 results in the optimal value.", \
"Text",
 CellChangeTimes->{{3.9260178406664953`*^9, 
  3.926017871740905*^9}},ExpressionUUID->"f91b00f5-8866-4d3d-9537-\
ee4671a4e4d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["O\[CloseCurlyQuote]Donovan et al.\[CloseCurlyQuote]s Method", \
"Subsubsection",
 CellChangeTimes->{{3.926017705321748*^9, 
  3.9260177109055033`*^9}},ExpressionUUID->"27122ba3-9eab-4e04-b08f-\
8d6706066f4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["L", "ODonovan"], 
    RowBox[{"Dictators", ",", "5", ",", "ExtraErrorinU1ToAgreeWithU4"}]], "[", 
   RowBox[{
   "\[FinalSigma]1_", ",", "\[FinalSigma]2_", ",", "\[FinalSigma]3_", ",", 
    " ", "\[FinalSigma]4_", ",", " ", "\[FinalSigma]5_", ",", " ", 
    "\[FinalSigma]6_", ",", " ", "\[Mu]1_", ",", "\[Mu]2_", ",", "\[Mu]3_", 
    ",", " ", "\[Mu]4_", ",", "\[Mu]5_", ",", "\[Lambda]_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]1", ",", "\[FinalSigma]2", ",", " ", "\[Mu]1"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Mu]1"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Mu]1"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", "\[Mu]1"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Mu]1"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Mu]2"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]3", ",", " ", "\[Mu]2"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Mu]2"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Mu]2"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Mu]2"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Mu]3"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Mu]3"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]4", ",", " ", "\[Mu]3"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Mu]3"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Mu]3"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Mu]4"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Mu]4"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Mu]4"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", "\[Mu]4"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]6", ",", "\[FinalSigma]5", ",", " ", "\[Mu]4"}], 
    "]"}], "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]2", ",", "\[FinalSigma]1", ",", " ", "\[Mu]5"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]3", ",", "\[FinalSigma]2", ",", " ", "\[Mu]5"}], 
    "]"}], " ", "+", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]4", ",", "\[FinalSigma]3", ",", " ", "\[Mu]5"}], 
    "]"}], " ", "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]4", ",", " ", "\[Mu]5"}], 
    "]"}], "+", " ", 
   RowBox[{
    SubscriptBox["L", "ODonovan"], "[", 
    RowBox[{"\[FinalSigma]5", ",", "\[FinalSigma]6", ",", " ", "\[Mu]5"}], 
    "]"}], "+", 
   RowBox[{"\[Lambda]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]1", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]2", "]"}], "+", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]3", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]4", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]5", "]"}], "+", " ", 
      RowBox[{
       SubscriptBox["L", "0"], "[", "\[FinalSigma]6", "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9260180288395367`*^9, 3.926018034649584*^9}, 
   3.926018117438533*^9},
 CellLabel->
  "In[416]:=",ExpressionUUID->"6b7e0da8-e44a-469d-b317-7e1e139a788a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "minODonovanDictators5ExtraError0", ",", " ", 
    "solODonovanDictators5ExtraError0"}], "}"}], " ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "ODonovan"], 
        RowBox[{"Dictators", ",", "5", ",", "ExtraErrorinU1ToAgreeWithU4"}]], 
       "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
        " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", 
        "\[FinalSigma]6", ",", "\[Mu]1", ",", "\[Mu]2", ",", "\[Mu]3", ",", 
        " ", "\[Mu]4", ",", "\[Mu]5", ",", "0"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]6", "\[LessEqual]",
        "100"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]1", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]2", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]3", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]4", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]5", "\[LessEqual]", 
       "10"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", " ",
       "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", "\[FinalSigma]6", 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Mu]1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]2", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]3", ",", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Mu]4", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]5", ",", "1"}], "}"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "minODonovanDictators5ExtraError1", ",", " ", 
    "solODonovanDictators5ExtraError1"}], "}"}], " ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "ODonovan"], 
        RowBox[{"Dictators", ",", "5", ",", "ExtraErrorinU1ToAgreeWithU4"}]], 
       "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
        " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", 
        "\[FinalSigma]6", ",", "\[Mu]1", ",", "\[Mu]2", ",", "\[Mu]3", ",", 
        " ", "\[Mu]4", ",", "\[Mu]5", ",", "1"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]6", "\[LessEqual]",
        "100"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]1", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]2", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]3", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]4", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]5", "\[LessEqual]", 
       "10"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", " ",
       "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", "\[FinalSigma]6", 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Mu]1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]2", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]3", ",", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Mu]4", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]5", ",", "1"}], "}"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.926018445226128*^9, 3.9260184908106413`*^9}, 
   3.9260185212704487`*^9, {3.926018560998317*^9, 3.926018604422771*^9}, {
   3.926018662240746*^9, 3.926018668604352*^9}, {3.926066264773467*^9, 
   3.926066272360654*^9}, {3.9277411658668547`*^9, 3.9277411893203917`*^9}, 
   3.927741241504648*^9, 3.927741299479909*^9, {3.927741467555584*^9, 
   3.9277414920328627`*^9}, {3.92774179008533*^9, 3.927741812715364*^9}, {
   3.927742316213436*^9, 3.9277423163347273`*^9}, {3.927742464739546*^9, 
   3.927742480374951*^9}, {3.927742514957901*^9, 3.927742525465269*^9}, {
   3.9277443691151657`*^9, 3.9277443867719717`*^9}, {3.927744422479905*^9, 
   3.927744457436183*^9}},
 CellLabel->
  "In[435]:=",ExpressionUUID->"967f4985-1cc6-4229-8447-9f9dae09b0f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9.74874418123446`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "99.99971338541478`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "99.99940084727642`"}]}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", 
      RowBox[{"-", "99.289509245467`"}]}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", 
      RowBox[{"-", "98.57961894158663`"}]}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", 
      RowBox[{"-", "99.29180303798667`"}]}], ",", 
     RowBox[{"\[FinalSigma]6", "\[Rule]", "99.99947590711282`"}], ",", 
     RowBox[{"\[Mu]1", "\[Rule]", "9.999943224490211`"}], ",", 
     RowBox[{"\[Mu]2", "\[Rule]", "0.031576264099582994`"}], ",", 
     RowBox[{"\[Mu]3", "\[Rule]", "0.031576281722176934`"}], ",", 
     RowBox[{"\[Mu]4", "\[Rule]", "9.999951678462924`"}], ",", 
     RowBox[{"\[Mu]5", "\[Rule]", 
      RowBox[{"-", "0.03160326918965601`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.926018581283366*^9, 3.9260186307496157`*^9, 3.926018670801757*^9, 
   3.926065394046377*^9, 3.926066435393285*^9, 3.927741191650769*^9, 
   3.927741303037262*^9, 3.9277415074428988`*^9, 3.927742331327231*^9, 
   3.927742480972864*^9, 3.927742525967245*^9, 3.9277443719917793`*^9, {
   3.927744426846114*^9, 3.927744457976989*^9}},
 CellLabel->
  "Out[435]=",ExpressionUUID->"b9f54d2d-22b0-4d45-8910-92b418d61b56"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"19.793436263176158`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", "0.06870667183165348`"}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", "0.03633655246714524`"}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", "0.34839984955359626`"}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", "0.6937041117484796`"}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", 
      RowBox[{"-", "0.7476751772503281`"}]}], ",", 
     RowBox[{"\[FinalSigma]6", "\[Rule]", 
      RowBox[{"-", "0.4079700798765936`"}]}], ",", 
     RowBox[{"\[Mu]1", "\[Rule]", "9.999998220308084`"}], ",", 
     RowBox[{"\[Mu]2", "\[Rule]", 
      RowBox[{"-", "1.0583502203047421`"}]}], ",", 
     RowBox[{"\[Mu]3", "\[Rule]", 
      RowBox[{"-", "1.1474925806654355`"}]}], ",", 
     RowBox[{"\[Mu]4", "\[Rule]", "9.999994418017769`"}], ",", 
     RowBox[{"\[Mu]5", "\[Rule]", 
      RowBox[{"-", "1.1320460790789795`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.926018581283366*^9, 3.9260186307496157`*^9, 3.926018670801757*^9, 
   3.926065394046377*^9, 3.926066435393285*^9, 3.927741191650769*^9, 
   3.927741303037262*^9, 3.9277415074428988`*^9, 3.927742331327231*^9, 
   3.927742480972864*^9, 3.927742525967245*^9, 3.9277443719917793`*^9, {
   3.927744426846114*^9, 3.92774445805657*^9}},
 CellLabel->
  "Out[436]=",ExpressionUUID->"53f95286-ec1e-449a-aa40-2866be51cbd0"]
}, Open  ]],

Cell["\<\
The final version of the table entries with rounding in place:\
\>", "Text",
 CellChangeTimes->{{3.9260194203968887`*^9, 
  3.926019432744007*^9}},ExpressionUUID->"372606ea-1097-48b3-9761-\
6c12b9f3b4fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roundingValue", " ", "=", " ", "0.1"}], ";"}]], "Input",
 CellChangeTimes->{{3.9260195887209272`*^9, 3.92601959861954*^9}},
 CellLabel->
  "In[419]:=",ExpressionUUID->"82ad4d01-71d2-4311-b56b-6dc6e0e66601"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"{", " ", 
         RowBox[{
         "\[Mu]1", ",", "\[Mu]2", ",", "\[Mu]3", ",", " ", "\[Mu]4", ",", 
          "\[Mu]5"}], "}"}], "]"}], "/.", 
       "solODonovanDictators5ExtraError0"}], ",", " ", "roundingValue"}], 
     "]"}], ",", 
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"{", " ", 
         RowBox[{
         "\[Mu]1", ",", "\[Mu]2", ",", "\[Mu]3", ",", " ", "\[Mu]4", ",", 
          "\[Mu]5"}], "}"}], "]"}], " ", "/.", 
       "solODonovanDictators5ExtraError1"}], ",", " ", "roundingValue"}], 
     "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.926018795720833*^9, 3.926018798530965*^9}, {
  3.926018910317708*^9, 3.926018929994678*^9}, {3.926019018536167*^9, 
  3.926019045679125*^9}, {3.926019090987143*^9, 3.926019145537859*^9}, {
  3.9260195808628817`*^9, 3.9260195823478937`*^9}, {3.926066274851102*^9, 
  3.926066275958139*^9}},
 NumberMarks->False,
 CellLabel->
  "In[420]:=",ExpressionUUID->"778a0e52-e386-4ec8-90b5-4083c07ffd2d"],

Cell[BoxData[
 TagBox[GridBox[{
    {"10.`", "0.`", "0.`", "10.`", "0.`"},
    {"10.`", 
     RowBox[{"-", "1.1`"}], 
     RowBox[{"-", "1.1`"}], "10.`", 
     RowBox[{"-", "1.1`"}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9260187849046497`*^9, 3.926018796507265*^9}, {
   3.926018912438507*^9, 3.926018930734338*^9}, {3.926019038279999*^9, 
   3.9260190463596983`*^9}, {3.926019102485688*^9, 3.926019146316534*^9}, {
   3.926019583344872*^9, 3.9260196002082*^9}, 3.926065394154644*^9, 
   3.92606643549811*^9, 3.927741507539997*^9, 3.927742331428565*^9},
 CellLabel->
  "Out[420]//TableForm=",ExpressionUUID->"e2395c62-114c-4a72-912a-\
1d44d50c99a8"]
}, Open  ]],

Cell["\<\
Note that the outcomes are parameter dependent.  Removing the starting values \
of \[Mu] = 1 can result in a slightly better NLL.\
\>", "Text",
 CellChangeTimes->{{3.9260162866962214`*^9, 3.926016287302636*^9}, {
  3.927741719664266*^9, 3.927741729148131*^9}, {3.927741767046682*^9, 
  3.927741768445099*^9}, {3.927741889361958*^9, 
  3.9277419160031643`*^9}},ExpressionUUID->"d0a59c70-d8b3-4a13-af72-\
1f7e8f917c66"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "minODonovanDictators5ExtraError0", ",", " ", 
    "solODonovanDictators5ExtraError0"}], "}"}], " ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "ODonovan"], 
        RowBox[{"Dictators", ",", "5", ",", "ExtraErrorinU1ToAgreeWithU4"}]], 
       "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
        " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", 
        "\[FinalSigma]6", ",", "\[Mu]1", ",", "\[Mu]2", ",", "\[Mu]3", ",", 
        " ", "\[Mu]4", ",", "\[Mu]5", ",", "0"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]6", "\[LessEqual]",
        "100"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]1", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]2", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]3", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]4", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]5", "\[LessEqual]", 
       "10"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", " ",
       "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", "\[FinalSigma]6", 
      ",", " ", "\[Mu]1", ",", "\[Mu]2", ",", "\[Mu]3", ",", "\[Mu]4", ",", 
      "\[Mu]5"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "minODonovanDictators5ExtraError1", ",", " ", 
    "solODonovanDictators5ExtraError1"}], "}"}], " ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        SubscriptBox["L", "ODonovan"], 
        RowBox[{"Dictators", ",", "5", ",", "ExtraErrorinU1ToAgreeWithU4"}]], 
       "[", 
       RowBox[{
       "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", 
        " ", "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", 
        "\[FinalSigma]6", ",", "\[Mu]1", ",", "\[Mu]2", ",", "\[Mu]3", ",", 
        " ", "\[Mu]4", ",", "\[Mu]5", ",", "1"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]1", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]2", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]3", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]4", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]5", "\[LessEqual]",
        "100"}], ",", 
      RowBox[{
       RowBox[{"-", "100"}], "\[LessEqual]", "\[FinalSigma]6", "\[LessEqual]",
        "100"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]1", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]2", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]3", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]4", "\[LessEqual]", "10"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"-", "10"}], "\[LessEqual]", "\[Mu]5", "\[LessEqual]", 
       "10"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[FinalSigma]1", ",", "\[FinalSigma]2", ",", "\[FinalSigma]3", ",", " ",
       "\[FinalSigma]4", ",", "\[FinalSigma]5", ",", " ", "\[FinalSigma]6", 
      ",", " ", "\[Mu]1", ",", "\[Mu]2", ",", "\[Mu]3", ",", "\[Mu]4", ",", 
      "\[Mu]5"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.927741737321447*^9, 3.927741804124159*^9}, {
  3.92774186363628*^9, 3.927741873920404*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"1953e7f3-c740-417d-9c5d-39044cc8f6c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9.449093580983003`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", 
      RowBox[{"-", "99.99990847458304`"}]}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", 
      RowBox[{"-", "99.72182131498987`"}]}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", 
      RowBox[{"-", "95.55813444767193`"}]}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", 
      RowBox[{"-", "91.39444925507665`"}]}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", 
      RowBox[{"-", "95.64778590824194`"}]}], ",", 
     RowBox[{"\[FinalSigma]6", "\[Rule]", "99.99988884456766`"}], ",", 
     RowBox[{"\[Mu]1", "\[Rule]", "1.0393994475418271`"}], ",", 
     RowBox[{"\[Mu]2", "\[Rule]", "0.022680118199401696`"}], ",", 
     RowBox[{"\[Mu]3", "\[Rule]", "0.022680121875583624`"}], ",", 
     RowBox[{"\[Mu]4", "\[Rule]", "9.999994498157733`"}], ",", 
     RowBox[{"\[Mu]5", "\[Rule]", 
      RowBox[{"-", "0.022281452605187442`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.927741756744837*^9, 3.92774233151587*^9},
 CellLabel->
  "Out[421]=",ExpressionUUID->"f34c5e6e-63a8-4764-9b79-d0bbe893a852"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"19.7934362631709`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FinalSigma]1", "\[Rule]", "0.0687066718320343`"}], ",", 
     RowBox[{"\[FinalSigma]2", "\[Rule]", "0.03633655246723884`"}], ",", 
     RowBox[{"\[FinalSigma]3", "\[Rule]", "0.3483998495532102`"}], ",", 
     RowBox[{"\[FinalSigma]4", "\[Rule]", "0.6937041117480216`"}], ",", 
     RowBox[{"\[FinalSigma]5", "\[Rule]", 
      RowBox[{"-", "0.7476751772502117`"}]}], ",", 
     RowBox[{"\[FinalSigma]6", "\[Rule]", 
      RowBox[{"-", "0.4079700798763258`"}]}], ",", 
     RowBox[{"\[Mu]1", "\[Rule]", "9.999998220343475`"}], ",", 
     RowBox[{"\[Mu]2", "\[Rule]", 
      RowBox[{"-", "1.0583502203076407`"}]}], ",", 
     RowBox[{"\[Mu]3", "\[Rule]", 
      RowBox[{"-", "1.1474925806689535`"}]}], ",", 
     RowBox[{"\[Mu]4", "\[Rule]", "9.999994418239552`"}], ",", 
     RowBox[{"\[Mu]5", "\[Rule]", 
      RowBox[{"-", "1.1320460790826485`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.927741756744837*^9, 3.927742331603389*^9},
 CellLabel->
  "Out[422]=",ExpressionUUID->"d5b3d86b-3f76-48ed-b15b-d6e8654cd1bf"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1058, 916},
WindowMargins->{{17, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2eba4545-9d93-42f3-afc1-8916590a9fff"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 133, 3, 98, "Title",ExpressionUUID->"d7b1c179-1cc8-4d50-9446-c897d6279ac4"],
Cell[558, 20, 208, 5, 53, "Subtitle",ExpressionUUID->"88590767-2f90-4d03-b257-4c56d8c90edd"],
Cell[769, 27, 587, 9, 76, "Subsubtitle",ExpressionUUID->"cd9fbce1-1217-4d79-b21d-c46072301132"],
Cell[CellGroupData[{
Cell[1381, 40, 207, 4, 67, "Section",ExpressionUUID->"edab6588-54fd-40b9-ac1b-98c2f45995fc"],
Cell[1591, 46, 400, 8, 58, "Text",ExpressionUUID->"d2af1e3b-8c48-4513-a51b-268d7d909cb8"],
Cell[CellGroupData[{
Cell[2016, 58, 221, 4, 54, "Subsection",ExpressionUUID->"315457a4-73ab-42f8-8d86-0beb08c3cc6b"],
Cell[2240, 64, 2329, 50, 84, "Text",ExpressionUUID->"a7aa0c6b-984f-43b9-b2f7-6659b1a41866"],
Cell[4572, 116, 1153, 33, 94, "Input",ExpressionUUID->"cdee2ff5-b0b0-40c0-859e-debaa963f443"],
Cell[5728, 151, 353, 10, 35, "Text",ExpressionUUID->"937ed66d-ccc3-4f76-81af-78f98dd7d6b9"],
Cell[CellGroupData[{
Cell[6106, 165, 647, 14, 30, "Input",ExpressionUUID->"a969f978-d2aa-4194-ae54-a89f198e83f0"],
Cell[6756, 181, 11619, 210, 233, "Output",ExpressionUUID->"239f8839-1eea-44d5-b7ff-24a946a49f7d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18424, 397, 235, 4, 54, "Subsection",ExpressionUUID->"3de215e4-a764-4e0d-92ff-43c4445081da"],
Cell[18662, 403, 286, 6, 35, "Text",ExpressionUUID->"f204573d-d862-4cae-9e3b-5ea9124feda2"],
Cell[18951, 411, 1717, 51, 94, "Input",ExpressionUUID->"4c95b914-8abb-4375-b8da-dd617eb726ca"],
Cell[20671, 464, 272, 5, 35, "Text",ExpressionUUID->"e9b7c4d0-e3a6-48ef-86d5-f511143711fc"],
Cell[CellGroupData[{
Cell[20968, 473, 1445, 34, 52, "Input",ExpressionUUID->"ff46c932-7319-459b-b806-b940668a1155"],
Cell[22416, 509, 63218, 1156, 235, "Output",ExpressionUUID->"46d37397-f723-4a09-bfa9-70473f282984"]
}, Open  ]],
Cell[85649, 1668, 284, 7, 35, "Text",ExpressionUUID->"51ca6136-c6f9-4d6d-9a38-b74848b9a208"],
Cell[CellGroupData[{
Cell[85958, 1679, 828, 18, 30, "Input",ExpressionUUID->"4b460b1f-b667-4779-9f74-aab20db5d5e7"],
Cell[86789, 1699, 88245, 1449, 304, "Output",ExpressionUUID->"64c33239-38ab-46c5-974c-36dee1ac8df6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[175083, 3154, 183, 3, 54, "Subsection",ExpressionUUID->"2cb92849-31e3-42e3-8089-68dcd522c5bf"],
Cell[175269, 3159, 260, 6, 35, "Text",ExpressionUUID->"ad061d67-68bc-4672-b4d6-9b98e6dcf432"],
Cell[175532, 3167, 1567, 46, 94, "Input",ExpressionUUID->"61347728-bc48-4db3-9019-291c43e2304c"],
Cell[177102, 3215, 256, 4, 35, "Text",ExpressionUUID->"bb96511e-f7eb-482a-98ad-7154181ae99d"],
Cell[CellGroupData[{
Cell[177383, 3223, 1214, 32, 52, "Input",ExpressionUUID->"d54e3889-cf41-473f-bd33-49e3ee0da939"],
Cell[178600, 3257, 48089, 908, 235, "Output",ExpressionUUID->"0a38b5ea-d3d2-4596-9944-8e7c50bd9be0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226726, 4170, 753, 18, 30, "Input",ExpressionUUID->"9e159e74-2d56-4123-aca6-ace8dd881f8e"],
Cell[227482, 4190, 129481, 2127, 317, "Output",ExpressionUUID->"9edd30ad-4965-4a7b-99a5-5e8a14584bf1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[357012, 6323, 182, 3, 54, "Subsection",ExpressionUUID->"79716170-3173-43b3-bfaa-29c11389349f"],
Cell[357197, 6328, 916, 20, 81, "Text",ExpressionUUID->"b89e9554-862a-419d-b798-93fe707f37c1"],
Cell[358116, 6350, 744, 20, 52, "Input",ExpressionUUID->"a6aef504-b345-4a09-9f8b-741105868da2"],
Cell[358863, 6372, 275, 6, 35, "Text",ExpressionUUID->"24a31a83-db58-4fb3-9efb-efdb9f7e5023"],
Cell[359141, 6380, 178, 4, 30, "Input",ExpressionUUID->"95bca153-bb01-4902-9ec1-dd2082db8b04"],
Cell[359322, 6386, 271, 4, 40, "Text",ExpressionUUID->"b84a73ad-db81-4eb3-a587-55dcae34f2c1"],
Cell[359596, 6392, 487, 10, 58, "Text",ExpressionUUID->"f58b89cb-7366-4f1e-aea2-08be55f30ac3"],
Cell[CellGroupData[{
Cell[360108, 6406, 680, 16, 30, "Input",ExpressionUUID->"349448b3-453f-43d6-afdc-3da52eddbc3e"],
Cell[360791, 6424, 4665, 97, 250, "Output",ExpressionUUID->"faec6eaf-130f-42bf-ac72-cf9b56600ee8"]
}, Open  ]],
Cell[365471, 6524, 481, 9, 58, "Text",ExpressionUUID->"57ed383e-0a43-46a1-b4d5-7d2519f97cc1"],
Cell[365955, 6535, 869, 24, 58, "Text",ExpressionUUID->"0f38092e-498b-4b46-9d02-4e76e5a176bf"],
Cell[366827, 6561, 3924, 128, 81, "Text",ExpressionUUID->"49934b18-fc5a-4443-b3c6-5edf003f34df"],
Cell[370754, 6691, 1557, 43, 52, "Input",ExpressionUUID->"69140906-f843-4680-805f-f4809c945296"],
Cell[372314, 6736, 464, 12, 58, "Text",ExpressionUUID->"2c718a82-807c-4269-8db0-b919463f5cbb"],
Cell[CellGroupData[{
Cell[372803, 6752, 1292, 34, 73, "Input",ExpressionUUID->"0b6dd4bd-33be-433a-8278-da38b5aefb54"],
Cell[374098, 6788, 753, 16, 34, "Output",ExpressionUUID->"790bba9a-da65-46b6-a03d-666dc96352ea"]
}, Open  ]],
Cell[374866, 6807, 158, 3, 35, "Text",ExpressionUUID->"71c4e8ba-c1d4-426e-ac13-90d5fab9c3fb"],
Cell[CellGroupData[{
Cell[375049, 6814, 492, 12, 30, "Input",ExpressionUUID->"63992611-d885-4c8c-874f-33bbd80d41b8"],
Cell[375544, 6828, 452, 10, 34, "Output",ExpressionUUID->"8852a34b-ab6c-438b-9ec0-217e5e25767a"]
}, Open  ]],
Cell[376011, 6841, 161, 3, 35, "Text",ExpressionUUID->"3f3425b1-e0e0-4fcb-af9e-cef24affb203"],
Cell[CellGroupData[{
Cell[376197, 6848, 685, 18, 30, "Input",ExpressionUUID->"7cde4460-495e-4795-98ff-f0604a3fac82"],
Cell[376885, 6868, 488, 11, 34, "Output",ExpressionUUID->"589a39f8-a7c1-41d6-8916-a6f5041928bc"]
}, Open  ]],
Cell[377388, 6882, 1700, 56, 58, "Text",ExpressionUUID->"5c9c5d20-5f85-4084-8fcd-36e1f156bcd6"],
Cell[379091, 6940, 458, 14, 35, "Text",ExpressionUUID->"f60108e8-57b9-44b9-a8af-04e65ffe27c4"],
Cell[CellGroupData[{
Cell[379574, 6958, 1266, 33, 73, "Input",ExpressionUUID->"6b1b6108-7be4-48a0-b0a6-ace4e805c703"],
Cell[380843, 6993, 753, 16, 34, "Output",ExpressionUUID->"7c06a569-7519-4300-9cc6-315515a04d07"]
}, Open  ]],
Cell[381611, 7012, 182, 2, 35, "Text",ExpressionUUID->"6cb6e6c1-4bcf-4946-a0e7-75c13549f360"],
Cell[CellGroupData[{
Cell[381818, 7018, 495, 13, 30, "Input",ExpressionUUID->"60f47eec-c895-480e-b987-e301e80dfe7a"],
Cell[382316, 7033, 424, 9, 34, "Output",ExpressionUUID->"05c20506-df6a-4c84-9531-ee9336b5e8a2"]
}, Open  ]],
Cell[382755, 7045, 2371, 76, 58, "Text",ExpressionUUID->"fbb2aa3b-cf1c-41fb-a998-3e114526090e"],
Cell[385129, 7123, 158, 3, 35, "Text",ExpressionUUID->"a000191c-f831-4049-af77-a4aedc20ccb0"],
Cell[CellGroupData[{
Cell[385312, 7130, 692, 18, 30, "Input",ExpressionUUID->"384a4c49-d4f4-4e0d-a317-a50353e3c79f"],
Cell[386007, 7150, 489, 11, 34, "Output",ExpressionUUID->"f6001a05-03e9-4911-bbb8-0ea7e5e988dd"]
}, Open  ]],
Cell[386511, 7164, 336, 7, 35, "Text",ExpressionUUID->"75cddfd4-0572-4a19-abc8-f5c3df5ee905"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[386896, 7177, 169, 3, 67, "Section",ExpressionUUID->"860190aa-0eb2-4285-bae3-60ec9a6ddc16"],
Cell[387068, 7182, 1552, 48, 58, "Text",ExpressionUUID->"0ab9b951-fe95-4e6d-81b7-852e64a9ecfd"],
Cell[CellGroupData[{
Cell[388645, 7234, 160, 3, 45, "Subsubsection",ExpressionUUID->"f8e72742-6689-4fcb-84c3-e0be2c23d93e"],
Cell[388808, 7239, 173, 3, 35, "Text",ExpressionUUID->"03e1ec8a-3fd9-4e24-9630-2f225a5a881e"],
Cell[388984, 7244, 790, 24, 34, "Input",ExpressionUUID->"624d50bd-3879-49ed-aaa5-c074c205f1b1"],
Cell[389777, 7270, 547, 10, 81, "Text",ExpressionUUID->"d552948e-e244-4dc4-9ed9-558cff5fd4bb"],
Cell[CellGroupData[{
Cell[390349, 7284, 1944, 53, 104, "Input",ExpressionUUID->"57606192-c189-4151-aeeb-0145b0cd26a8"],
Cell[392296, 7339, 451, 10, 24, "Message",ExpressionUUID->"2c9be5a3-130d-4738-b7fa-664f8188fd7f"],
Cell[392750, 7351, 689, 16, 37, "Output",ExpressionUUID->"cc15ebba-dbd3-45ca-b9c7-3f7a6c878855"],
Cell[393442, 7369, 711, 16, 34, "Output",ExpressionUUID->"9d381201-447d-422d-891d-b2611a3aab6d"]
}, Open  ]],
Cell[394168, 7388, 194, 3, 35, "Text",ExpressionUUID->"259c0e90-67ec-4502-abb8-04c4164e47f9"],
Cell[394365, 7393, 974, 27, 34, "Input",ExpressionUUID->"a249f895-a9b8-4520-ad7a-cc5890e742ab"],
Cell[395342, 7422, 605, 14, 58, "Text",ExpressionUUID->"5cad4608-219f-40f9-a170-fdf6d7b72db1"],
Cell[395950, 7438, 191, 5, 30, "Input",ExpressionUUID->"2f2fe7de-0460-4e1a-b86b-7ea850331e44"],
Cell[396144, 7445, 157, 3, 35, "Text",ExpressionUUID->"db967a87-a3ae-4e70-895a-19c0005b3d7a"],
Cell[CellGroupData[{
Cell[396326, 7452, 2603, 68, 146, "Input",ExpressionUUID->"6e4a6ddd-fe0b-4e60-919b-1da93d2d9f55"],
Cell[398932, 7522, 453, 10, 24, "Message",ExpressionUUID->"64165c28-44b6-4cb8-ada4-7ef164d2725f"],
Cell[399388, 7534, 610, 14, 37, "Output",ExpressionUUID->"961e2b4c-a524-4ca8-b066-98e5a85c12fe"],
Cell[400001, 7550, 459, 10, 24, "Message",ExpressionUUID->"32af69a8-7507-4b69-af7a-e1428038306f"],
Cell[400463, 7562, 636, 14, 34, "Output",ExpressionUUID->"6ad6e0b2-3a83-48e7-8d39-3e58de1c1a7e"]
}, Open  ]],
Cell[401114, 7579, 200, 3, 35, "Text",ExpressionUUID->"84412282-2d2d-46bb-861c-cd5ce10a599b"],
Cell[401317, 7584, 227, 4, 35, "Text",ExpressionUUID->"a04b7856-7425-486c-a3f1-9b079f673925"],
Cell[401547, 7590, 967, 27, 34, "Input",ExpressionUUID->"5e97eb87-02c8-43a7-8b2b-5ac9b0a587a4"],
Cell[402517, 7619, 354, 7, 58, "Text",ExpressionUUID->"3337bb25-c29c-4237-ae6a-ea2bc633ac7b"],
Cell[402874, 7628, 250, 8, 30, "Input",ExpressionUUID->"e6a57d46-a51f-4dda-9c87-724a38794c57"],
Cell[403127, 7638, 300, 6, 35, "Text",ExpressionUUID->"a747a057-e5b8-4403-b5cf-076943c9efb3"],
Cell[CellGroupData[{
Cell[403452, 7648, 2750, 75, 146, "Input",ExpressionUUID->"169a28ef-2e5d-4678-9491-7364da7f7853"],
Cell[406205, 7725, 458, 10, 24, "Message",ExpressionUUID->"d5329a4d-898d-4941-968e-e34b3b38c997"],
Cell[406666, 7737, 670, 15, 37, "Output",ExpressionUUID->"1cc3db4a-47c4-4517-a0a0-d07a0d5e3d8b"],
Cell[407339, 7754, 633, 14, 34, "Output",ExpressionUUID->"1c9a2619-4489-4760-9071-ea105c42ca3d"]
}, Open  ]],
Cell[407987, 7771, 270, 6, 35, "Text",ExpressionUUID->"d799a3de-7b6f-4ef3-a598-91eb1fedbf7a"],
Cell[CellGroupData[{
Cell[408282, 7781, 697, 19, 34, "Input",ExpressionUUID->"da2a37b8-ee26-45f3-a631-a69da3c88306"],
Cell[408982, 7802, 280, 5, 34, "Output",ExpressionUUID->"6655a042-3fa7-49e8-8fb9-57be7db54664"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[409311, 7813, 165, 3, 45, "Subsubsection",ExpressionUUID->"50c3da7b-1e49-4964-abeb-67067df988a9"],
Cell[409479, 7818, 384, 8, 58, "Text",ExpressionUUID->"7f4ee7cb-1639-4d9b-ad5e-82a1eb35a3aa"],
Cell[409866, 7828, 874, 25, 34, "Input",ExpressionUUID->"7dd1d160-9ac7-40ec-947b-2688bfdec79e"],
Cell[CellGroupData[{
Cell[410765, 7857, 2071, 59, 100, "Input",ExpressionUUID->"19dc9e0a-cf2a-4dee-8450-b19c1a4ad862"],
Cell[412839, 7918, 548, 12, 37, "Output",ExpressionUUID->"0af2b4cf-ad2f-41e3-be4f-6ada6b233d6b"],
Cell[413390, 7932, 591, 14, 37, "Output",ExpressionUUID->"0d9f891e-da1f-4e4c-8e01-aa48dc13ee40"]
}, Open  ]],
Cell[413996, 7949, 228, 5, 35, "Text",ExpressionUUID->"83997f9d-5ff1-4b3f-800f-992af369711e"],
Cell[414227, 7956, 975, 27, 34, "Input",ExpressionUUID->"c0e78c19-e047-4874-8c90-1018ea3ee2e5"],
Cell[CellGroupData[{
Cell[415227, 7987, 1571, 42, 78, "Input",ExpressionUUID->"92d27f9e-8293-466b-b06c-0a05196e4300"],
Cell[416801, 8031, 720, 15, 37, "Output",ExpressionUUID->"eb3d3196-5b07-416f-ac93-952e3ea0f120"]
}, Open  ]],
Cell[417536, 8049, 400, 8, 58, "Text",ExpressionUUID->"6edd7dfa-8f54-4a8b-946e-45830e1c4a08"],
Cell[CellGroupData[{
Cell[417961, 8061, 1390, 38, 57, "Input",ExpressionUUID->"4f34f984-5fe1-41a2-9ce8-e49aeb9f20db"],
Cell[419354, 8101, 670, 15, 37, "Output",ExpressionUUID->"3807b384-23e8-4573-8f7c-f6661ba55487"]
}, Open  ]],
Cell[420039, 8119, 229, 4, 35, "Text",ExpressionUUID->"6aaf3277-4be5-4bef-a8d8-8605718983e7"],
Cell[420271, 8125, 970, 27, 34, "Input",ExpressionUUID->"9c0606ab-46df-4845-ad07-50bf621aa73c"],
Cell[CellGroupData[{
Cell[421266, 8156, 3049, 85, 146, "Input",ExpressionUUID->"d801d7dc-f1a7-4b96-898b-dd61ef662063"],
Cell[424318, 8243, 450, 10, 24, "Message",ExpressionUUID->"3eb614eb-9b08-48d5-936f-df5b04bf0e83"],
Cell[424771, 8255, 684, 15, 37, "Output",ExpressionUUID->"835d0fd2-0ad8-4c70-b3d2-23feab679351"],
Cell[425458, 8272, 649, 15, 34, "Output",ExpressionUUID->"2178a0c5-132b-455a-baef-f0fb869d9f77"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[426168, 8294, 221, 4, 67, "Section",ExpressionUUID->"c676b1a4-14ff-498b-9124-4621fd857848"],
Cell[426392, 8300, 687, 20, 58, "Text",ExpressionUUID->"d55dcf44-37a5-4a4b-9e12-9828ebe7fd41"],
Cell[427082, 8322, 523, 11, 60, "Text",ExpressionUUID->"d43a7ace-d6e0-49e4-ae79-7b897dacebc0"],
Cell[CellGroupData[{
Cell[427630, 8337, 168, 3, 54, "Subsection",ExpressionUUID->"752b864c-77bb-4cc5-ba69-a48b1f97d7ef"],
Cell[427801, 8342, 307, 7, 35, "Text",ExpressionUUID->"dcfad2ba-158e-4055-bc9b-288ad3748655"],
Cell[428111, 8351, 416, 7, 58, "Text",ExpressionUUID->"8085375b-9472-4531-bff9-6596fa276dc0"],
Cell[428530, 8360, 4508, 119, 142, "Input",ExpressionUUID->"2990a8c9-f04a-4b30-8c0e-5d521c2e09b1"],
Cell[433041, 8481, 195, 3, 35, "Text",ExpressionUUID->"a02c2460-069e-4d47-a1b4-5bdfca008103"],
Cell[433239, 8486, 425, 10, 35, "Input",ExpressionUUID->"9396b232-1f53-46b6-8206-47bbde6edef3"],
Cell[CellGroupData[{
Cell[433689, 8500, 1731, 43, 79, "Input",ExpressionUUID->"d2925fa9-ff72-40c2-ba81-f199f4b247f9"],
Cell[435423, 8545, 1049, 20, 34, "Output",ExpressionUUID->"89afc7f2-334c-4837-869e-7371e2f40a8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436509, 8570, 1908, 48, 79, "Input",ExpressionUUID->"540fd9bb-035d-47a2-bb1b-c89b8958c6dc"],
Cell[438420, 8620, 1064, 22, 34, "Output",ExpressionUUID->"fb5eaf26-ae24-4cec-8007-644c9e33c2a9"]
}, Open  ]],
Cell[439499, 8645, 819, 17, 84, "Text",ExpressionUUID->"d74429e5-afa9-4af3-abd6-9ace92038f98"],
Cell[440321, 8664, 234, 6, 35, "Text",ExpressionUUID->"eb3143fa-cfa8-46e3-bfb9-b96849c6d339"],
Cell[CellGroupData[{
Cell[440580, 8674, 619, 16, 30, "Input",ExpressionUUID->"9562e18c-d800-41bd-9298-0263b9519b01"],
Cell[441202, 8692, 563, 12, 34, "Output",ExpressionUUID->"d43be31e-96c7-4f08-b44c-bf130a990b00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[441802, 8709, 703, 17, 30, "Input",ExpressionUUID->"c4caf227-bac7-48ab-9087-1b284ef273e9"],
Cell[442508, 8728, 565, 11, 34, "Output",ExpressionUUID->"3f8cb8b3-a937-4f39-a8ad-f9fb0ddf7796"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[443122, 8745, 188, 3, 54, "Subsection",ExpressionUUID->"693a091e-a5d8-4379-a857-bc2af52f78ce"],
Cell[443313, 8750, 673, 13, 81, "Text",ExpressionUUID->"f3009a25-9ace-4c11-91e6-175303b39e3d"],
Cell[443989, 8765, 15059, 395, 460, "Input",ExpressionUUID->"dba31148-3f02-49b7-9abe-c0070a99aaac"],
Cell[459051, 9162, 522, 9, 58, "Text",ExpressionUUID->"9dad19b0-3c50-464e-af9f-8b716c984571"],
Cell[459576, 9173, 599, 12, 35, "Input",ExpressionUUID->"10114c1c-64ba-4769-b971-244c0e86b7ae"],
Cell[460178, 9187, 1166, 27, 81, "Text",ExpressionUUID->"740ca24f-7d68-4b1c-9c04-47df18fbba88"],
Cell[461347, 9216, 405, 8, 30, "Input",ExpressionUUID->"05b5f70c-f1bb-45d1-8298-fa92c51eb150"],
Cell[461755, 9226, 225, 4, 35, "Text",ExpressionUUID->"1e6bd4ab-0d0f-4e2a-bf1b-a08ec85ddab3"],
Cell[CellGroupData[{
Cell[462005, 9234, 2475, 60, 102, "Input",ExpressionUUID->"c16ef0cc-aa3f-4114-85da-00b8d8320dc2"],
Cell[464483, 9296, 1463, 28, 60, "Output",ExpressionUUID->"a03b75fb-b561-4ce6-93eb-c43393e233b8"]
}, Open  ]],
Cell[465961, 9327, 329, 7, 58, "Text",ExpressionUUID->"07f9b4be-82e6-4362-a317-06dc4c5ee16f"],
Cell[CellGroupData[{
Cell[466315, 9338, 1843, 44, 81, "Input",ExpressionUUID->"84330c04-9528-4048-a5a5-17400255f800"],
Cell[468161, 9384, 1270, 24, 60, "Output",ExpressionUUID->"50ba513b-e1c7-47d3-91ce-ec37bd0d8843"]
}, Open  ]],
Cell[CellGroupData[{
Cell[469468, 9413, 778, 21, 58, "Input",ExpressionUUID->"78d24f3e-3d9b-4749-94e1-cfc554eb3e57"],
Cell[470249, 9436, 575, 11, 34, "Output",ExpressionUUID->"8bb98b0f-766b-43bc-b4f6-e4ba9921a2ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[470861, 9452, 2990, 70, 123, "Input",ExpressionUUID->"bb372ce6-aba3-488a-af87-2631a7370778"],
Cell[473854, 9524, 1466, 28, 56, "Output",ExpressionUUID->"2bd40e41-2516-4437-b228-f9e805ec284b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475357, 9557, 752, 22, 58, "Input",ExpressionUUID->"6fa4092b-a83d-473b-bc3b-aadf77de2e84"],
Cell[476112, 9581, 598, 12, 34, "Output",ExpressionUUID->"4018f5e9-d60b-4862-ba7a-c67bd0a7ae84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476747, 9598, 3251, 77, 123, "Input",ExpressionUUID->"38075d9a-7130-4988-8411-feab19222023"],
Cell[480001, 9677, 1506, 29, 56, "Output",ExpressionUUID->"3488d4a4-cd2a-4a9c-b6cf-26e35a01d793"]
}, Open  ]],
Cell[CellGroupData[{
Cell[481544, 9711, 771, 22, 58, "Input",ExpressionUUID->"69f3bd6e-f0d3-4150-ae7e-c63863ac4f6f"],
Cell[482318, 9735, 577, 11, 34, "Output",ExpressionUUID->"9a376cd4-a047-4cb2-b71c-f8667c597d01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[482932, 9751, 178, 3, 45, "Subsubsection",ExpressionUUID->"78f03ee8-01b8-4e8d-abdc-fc1b9d840c7a"],
Cell[483113, 9756, 311, 7, 35, "Text",ExpressionUUID->"ff1cb89d-0917-4517-bf4b-40a8949b7289"],
Cell[CellGroupData[{
Cell[483449, 9767, 3261, 80, 144, "Input",ExpressionUUID->"ebf7a871-900a-4adf-8b88-a50650106ee4"],
Cell[486713, 9849, 1172, 23, 60, "Output",ExpressionUUID->"e007c1af-89eb-4f63-8946-c8389506629d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487922, 9877, 3709, 91, 144, "Input",ExpressionUUID->"e6b43902-9525-4649-a6c9-a141d74dcbb2"],
Cell[491634, 9970, 1415, 27, 56, "Output",ExpressionUUID->"4f4ea573-d2aa-4cc1-af67-19089e1d02d5"]
}, Open  ]],
Cell[493064, 10000, 308, 6, 35, "Text",ExpressionUUID->"954c4e89-c9f3-444c-916f-05f250510b6c"],
Cell[CellGroupData[{
Cell[493397, 10010, 549, 14, 52, "Input",ExpressionUUID->"e17280cb-e3e3-43ae-a971-ae3365b05e73"],
Cell[493949, 10026, 334, 7, 37, "Output",ExpressionUUID->"a6991a90-b2c5-4274-a7f8-22b4ed493303"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[494344, 10040, 185, 3, 54, "Subsection",ExpressionUUID->"5fb32112-e3eb-4060-99c7-6131d38545ec"],
Cell[494532, 10045, 410, 8, 58, "Text",ExpressionUUID->"19efe22d-89e0-417c-bc64-95a70d05b4f9"],
Cell[494945, 10055, 8383, 220, 268, "Input",ExpressionUUID->"ddc30b3d-8a9f-4d60-953f-3a0f51f8d3ad"],
Cell[503331, 10277, 345, 7, 35, "Text",ExpressionUUID->"33bd5ba4-919f-4a0a-b60d-15e356b9d25f"],
Cell[503679, 10286, 428, 10, 35, "Input",ExpressionUUID->"0da86f84-c3fc-4806-bae5-05a02561fa53"],
Cell[504110, 10298, 620, 16, 35, "Text",ExpressionUUID->"0e9172c2-6a90-4ae1-81f1-8fa1687bc691"],
Cell[504733, 10316, 342, 10, 30, "Input",ExpressionUUID->"b6ed756b-532e-4774-9f0a-92cdd21dabe8"],
Cell[CellGroupData[{
Cell[505100, 10330, 2742, 68, 102, "Input",ExpressionUUID->"bd448598-ec5f-4c94-be4b-cfa0cc376cbb"],
Cell[507845, 10400, 1220, 25, 56, "Output",ExpressionUUID->"8b6a3bcc-10e1-4a92-abf5-b9ee4e43f267"]
}, Open  ]],
Cell[509080, 10428, 381, 8, 58, "Text",ExpressionUUID->"0f85e490-9942-4009-ade3-d2e288466ea0"],
Cell[CellGroupData[{
Cell[509486, 10440, 752, 22, 58, "Input",ExpressionUUID->"3eac879d-0a5b-467c-8364-8bcff8d42180"],
Cell[510241, 10464, 471, 10, 34, "Output",ExpressionUUID->"337b9414-bd7e-4dcd-8cfb-ccec3362c1c2"]
}, Open  ]],
Cell[510727, 10477, 194, 3, 35, "Text",ExpressionUUID->"c78414f0-03b7-44fc-ab2b-ed25313ec935"],
Cell[CellGroupData[{
Cell[510946, 10484, 3199, 80, 123, "Input",ExpressionUUID->"93862ab6-a430-430f-bc52-61cdc7653a73"],
Cell[514148, 10566, 1266, 25, 56, "Output",ExpressionUUID->"3e3428db-00ed-4593-ab44-73e71a9ecfe8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[515451, 10596, 813, 22, 58, "Input",ExpressionUUID->"5fe76273-0623-407b-9566-72022c18e64d"],
Cell[516267, 10620, 502, 10, 34, "Output",ExpressionUUID->"ca944e6e-6f0c-4d3d-96d9-6a9eddf5afbb"]
}, Open  ]],
Cell[516784, 10633, 214, 5, 35, "Text",ExpressionUUID->"5250f79d-6195-4691-8229-6cd2c0dd588e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[517035, 10643, 184, 3, 54, "Subsection",ExpressionUUID->"77e44972-6a8f-4d59-b9de-d68f2d73c428"],
Cell[517222, 10648, 514, 11, 35, "Text",ExpressionUUID->"c78316c3-3572-44d0-8e40-b796a0426cd2"],
Cell[517739, 10661, 401, 10, 35, "Text",ExpressionUUID->"a6fb080a-2c44-4aca-a752-273ab173948e"],
Cell[CellGroupData[{
Cell[518165, 10675, 169, 3, 45, "Subsubsection",ExpressionUUID->"22061e5b-f8da-4824-978a-3d905604cab8"],
Cell[518337, 10680, 252, 6, 35, "Text",ExpressionUUID->"59940fe0-788d-40fe-82eb-1248da6978b4"],
Cell[518592, 10688, 2520, 66, 76, "Input",ExpressionUUID->"d2bdaf2a-8f3f-413a-8775-ecc2e5e6e9dc"],
Cell[CellGroupData[{
Cell[521137, 10758, 1638, 42, 78, "Input",ExpressionUUID->"030705d5-4f65-4798-b645-2f3886ef6a86"],
Cell[522778, 10802, 889, 18, 34, "Output",ExpressionUUID->"32681585-c3b4-4ade-9918-90d7aa65cb85"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[523716, 10826, 192, 3, 45, "Subsubsection",ExpressionUUID->"001e7e0d-7450-4798-aa6f-26bcb0c7064a"],
Cell[523911, 10831, 5111, 133, 160, "Input",ExpressionUUID->"b688cc5d-8ccd-4a44-b9bd-bff916806f57"],
Cell[529025, 10966, 351, 7, 35, "Text",ExpressionUUID->"8daa15fb-4109-4f1c-922f-e7f340195622"],
Cell[CellGroupData[{
Cell[529401, 10977, 7249, 177, 318, "Input",ExpressionUUID->"a43fb8dd-c654-42f4-93cf-d13ed690cb5f"],
Cell[536653, 11156, 1420, 27, 56, "Output",ExpressionUUID->"8ba198c8-50a6-44e7-b364-3315088bd295"],
Cell[538076, 11185, 1380, 25, 60, "Output",ExpressionUUID->"c597f1cd-2410-470f-9649-f7281fc68117"]
}, Open  ]],
Cell[539471, 11213, 493, 9, 58, "Text",ExpressionUUID->"3a74535f-0cea-4d31-8c9e-9f26c55910f2"],
Cell[539967, 11224, 234, 5, 30, "Input",ExpressionUUID->"23c3cb9e-aeb9-433f-b727-b14736a806ac"],
Cell[CellGroupData[{
Cell[540226, 11233, 1159, 30, 52, "Input",ExpressionUUID->"67e3a278-7d4f-42c4-82e3-f60ca61777d0"],
Cell[541388, 11265, 1030, 24, 60, "Output",ExpressionUUID->"31c5fbae-28cc-4f64-a51d-b956fb8c0a47"]
}, Open  ]],
Cell[542433, 11292, 964, 24, 104, "Text",ExpressionUUID->"e08b6558-cd9c-4afe-946b-490afaff0c9c"],
Cell[543400, 11318, 500, 9, 58, "Text",ExpressionUUID->"e2b9bdc4-d7e4-4a4f-9472-12f3b52a72c7"],
Cell[CellGroupData[{
Cell[543925, 11331, 3278, 84, 122, "Input",ExpressionUUID->"b7f26d70-603c-4a4a-95c2-c32db29440ed"],
Cell[547206, 11417, 1405, 28, 60, "Output",ExpressionUUID->"1cd6d696-28c8-4cf5-afec-e3c5edffb2f7"]
}, Open  ]],
Cell[548626, 11448, 3631, 89, 143, "Input",ExpressionUUID->"b91d82c4-8d0c-483f-9a7c-0d1d87e7cd4d"],
Cell[552260, 11539, 235, 6, 35, "Text",ExpressionUUID->"325578c0-34cb-4a2c-90da-de4b03fc3f49"],
Cell[CellGroupData[{
Cell[552520, 11549, 561, 13, 94, "Input",ExpressionUUID->"16a87cf7-8953-412d-9b87-3f50d8bd6264"],
Cell[553084, 11564, 4112, 101, 236, "Output",ExpressionUUID->"cd7090ff-0313-4b61-9749-06583d073254"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557233, 11670, 609, 15, 115, "Input",ExpressionUUID->"b0ba8eec-e7d4-408d-a7d2-028323bd92e6"],
Cell[557845, 11687, 3929, 98, 229, "Output",ExpressionUUID->"65bd1598-b858-4c3d-80b1-e02b4aaa5d5f"]
}, Open  ]],
Cell[561789, 11788, 211, 4, 35, "Text",ExpressionUUID->"f91b00f5-8866-4d3d-9537-ee4671a4e4d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562037, 11797, 214, 4, 45, "Subsubsection",ExpressionUUID->"27122ba3-9eab-4e04-b08f-8d6706066f4b"],
Cell[562254, 11803, 5076, 132, 160, "Input",ExpressionUUID->"6b7e0da8-e44a-469d-b317-7e1e139a788a"],
Cell[CellGroupData[{
Cell[567355, 11939, 5915, 147, 234, "Input",ExpressionUUID->"967f4985-1cc6-4229-8447-9f9dae09b0f2"],
Cell[573273, 12088, 1446, 29, 56, "Output",ExpressionUUID->"b9f54d2d-22b0-4d45-8910-92b418d61b56"],
Cell[574722, 12119, 1431, 28, 79, "Output",ExpressionUUID->"53f95286-ec1e-449a-aa40-2866be51cbd0"]
}, Open  ]],
Cell[576168, 12150, 214, 5, 35, "Text",ExpressionUUID->"372606ea-1097-48b3-9761-6c12b9f3b4fe"],
Cell[576385, 12157, 241, 5, 30, "Input",ExpressionUUID->"82ad4d01-71d2-4311-b56b-6dc6e0e66601"],
Cell[CellGroupData[{
Cell[576651, 12166, 1186, 31, 52, "Input",ExpressionUUID->"778a0e52-e386-4ec8-90b5-4083c07ffd2d"],
Cell[577840, 12199, 1004, 25, 60, "Output",ExpressionUUID->"e2395c62-114c-4a72-912a-1d44d50c99a8"]
}, Open  ]],
Cell[578859, 12227, 427, 8, 35, "Text",ExpressionUUID->"d0a59c70-d8b3-4a13-af72-1f7e8f917c66"],
Cell[CellGroupData[{
Cell[579311, 12239, 4790, 120, 188, "Input",ExpressionUUID->"1953e7f3-c740-417d-9c5d-39044cc8f6c7"],
Cell[584104, 12361, 1159, 24, 56, "Output",ExpressionUUID->"f34c5e6e-63a8-4764-9b79-d0bbe893a852"],
Cell[585266, 12387, 1137, 23, 56, "Output",ExpressionUUID->"d5b3d86b-3f76-48ed-b15b-d6e8654cd1bf"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

